{
  "version": 3,
  "sources": ["../../../../../apps/frappe/frappe/public/js/frappe/views/treeview.js", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/ui/listing.html", "../../../../../apps/frappe/frappe/public/js/frappe/model/indicator.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter_list.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/filters/field_select.js", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/ui/filters/edit_filter.html", "../../../../../apps/frappe/frappe/public/js/frappe/ui/tags.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/tag_editor.js", "../../../../../apps/frappe/frappe/public/js/frappe/ui/like.js", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/html/print_template.html", "../../../../../apps/frappe/frappe/public/js/frappe/list/base_list.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/bulk_operations.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_settings.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_factory.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_view_select.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_filter.js", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar.js", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/list/list_sidebar.html", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/list/list_sidebar_stat.html", "../../../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar_group_by.js", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/list/list_view_permission_restrictions.html", "../../../../../apps/frappe/frappe/public/js/frappe/views/gantt/gantt_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/calendar/calendar.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/dashboard/dashboard_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/image/image_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/map/map_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_settings.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/inbox/inbox_view.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/file/file_view.js", "../../../../../apps/frappe/frappe/public/js/list.bundle.js", "../../../../../apps/frappe/frappe/public/js/frappe/views/interaction.js", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/views/image/image_view_item_row.html", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/views/image/photoswipe_dom.html", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_board.html", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_column.html", "frappe-html:/home/gauritrans/frappe-bench/apps/frappe/frappe/public/js/frappe/views/kanban/kanban_card.html"],
  "sourcesContent": ["// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.treeview_settings\");\nfrappe.provide(\"frappe.views.trees\");\nwindow.cur_tree = null;\n\nfrappe.views.TreeFactory = class TreeFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tfrappe.model.with_doctype(route[1], function () {\n\t\t\tvar options = {\n\t\t\t\tdoctype: route[1],\n\t\t\t\tmeta: frappe.get_meta(route[1]),\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\t!frappe.treeview_settings[route[1]] &&\n\t\t\t\t!frappe.meta.get_docfield(route[1], \"is_group\")\n\t\t\t) {\n\t\t\t\tfrappe.msgprint(__(\"Tree view is not available for {0}\", [route[1]]));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$.extend(options, frappe.treeview_settings[route[1]] || {});\n\t\t\tfrappe.views.trees[options.doctype] = new frappe.views.TreeView(options);\n\t\t});\n\t}\n\n\ton_show() {\n\t\t/**\n\t\t * When the the treeview is visited using the previous button,\n\t\t * the framework just show the treeview element that is hidden.\n\t\t * Due to this, the data of the tree can be old.\n\t\t * To deal with this, the tree will be refreshed whenever the\n\t\t * treeview is visible.\n\t\t */\n\t\tlet route = frappe.get_route();\n\t\tlet treeview = frappe.views.trees[route[1]];\n\t\ttreeview && treeview.make_tree();\n\t}\n\n\tget view_name() {\n\t\treturn \"Tree\";\n\t}\n};\n\nfrappe.views.TreeView = class TreeView {\n\tconstructor(opts) {\n\t\tvar me = this;\n\n\t\tthis.opts = {};\n\t\tthis.opts.get_tree_root = true;\n\t\tthis.opts.show_expand_all = true;\n\t\t$.extend(this.opts, opts);\n\t\tthis.doctype = opts.doctype;\n\t\tthis.args = { doctype: me.doctype };\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.get_tree_nodes = me.opts.get_tree_nodes || \"frappe.desk.treeview.get_children\";\n\n\t\tthis.get_permissions();\n\t\tthis.make_page();\n\t\tthis.make_filters();\n\t\tthis.root_value = null;\n\n\t\tif (me.opts.get_tree_root) {\n\t\t\tthis.get_root();\n\t\t}\n\n\t\tthis.onload();\n\t\tthis.set_menu_item();\n\t\tthis.set_primary_action();\n\t}\n\tget_permissions() {\n\t\tthis.can_read = frappe.model.can_read(this.doctype);\n\t\tthis.can_create =\n\t\t\tfrappe.boot.user.can_create.indexOf(this.doctype) !== -1 ||\n\t\t\tfrappe.boot.user.in_create.indexOf(this.doctype) !== -1;\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\t\tthis.can_delete = frappe.model.can_delete(this.doctype);\n\t}\n\tmake_page() {\n\t\tvar me = this;\n\t\tthis.parent = frappe.container.add_page(this.page_name);\n\t\tfrappe.ui.make_app_page({ parent: this.parent, single_column: true });\n\n\t\tthis.page = this.parent.page;\n\t\tfrappe.container.change_to(this.page_name);\n\t\tfrappe.breadcrumbs.add(\n\t\t\tme.opts.breadcrumb || locals.DocType[me.doctype].module,\n\t\t\tme.doctype\n\t\t);\n\n\t\tthis.set_title();\n\n\t\tthis.page.main.css({\n\t\t\t\"min-height\": \"300px\",\n\t\t});\n\n\t\tthis.page.main.addClass(\"frappe-card\");\n\n\t\tif (this.opts.show_expand_all) {\n\t\t\tthis.page.add_inner_button(__(\"Collapse All\"), function () {\n\t\t\t\tme.tree.load_children(me.tree.root_node, false);\n\t\t\t});\n\n\t\t\tthis.page.add_inner_button(__(\"Expand All\"), function () {\n\t\t\t\tme.tree.load_children(me.tree.root_node, true);\n\t\t\t});\n\t\t}\n\n\t\tif (this.opts.view_template) {\n\t\t\tvar row = $('<div class=\"row\"><div>').appendTo(this.page.main);\n\t\t\tthis.body = $('<div class=\"col-sm-6 col-xs-12\"></div>').appendTo(row);\n\t\t\tthis.node_view = $('<div class=\"col-sm-6 hidden-xs\"></div>').appendTo(row);\n\t\t} else {\n\t\t\tthis.body = this.page.main;\n\t\t}\n\t}\n\tset_title() {\n\t\tthis.page.set_title(this.opts.title || __(\"{0} Tree\", [__(this.doctype)]));\n\t}\n\tonload() {\n\t\tvar me = this;\n\t\tthis.opts.onload && this.opts.onload(me);\n\t}\n\tmake_filters() {\n\t\tvar me = this;\n\t\tfrappe.treeview_settings.filters = [];\n\t\t$.each(this.opts.filters || [], function (i, filter) {\n\t\t\tif (frappe.route_options && frappe.route_options[filter.fieldname]) {\n\t\t\t\tfilter.default = frappe.route_options[filter.fieldname];\n\t\t\t}\n\n\t\t\tif (!filter.disable_onchange) {\n\t\t\t\tfilter.change = function () {\n\t\t\t\t\tfilter.onchange && filter.onchange();\n\t\t\t\t\tvar val = this.get_value();\n\t\t\t\t\tme.args[filter.fieldname] = val;\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tme.root_label = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = me.opts.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.set_title();\n\t\t\t\t\tme.make_tree();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tme.page.add_field(filter);\n\n\t\t\tif (filter.default) {\n\t\t\t\t$(\"[data-fieldname='\" + filter.fieldname + \"']\").trigger(\"change\");\n\t\t\t}\n\t\t});\n\t}\n\tget_root() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: me.get_tree_nodes,\n\t\t\targs: me.args,\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tif (r.message.length > 1) {\n\t\t\t\t\t\tme.root_label = me.doctype;\n\t\t\t\t\t\tme.root_value = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = r.message[0][\"value\"];\n\t\t\t\t\t\tme.root_value = me.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\tmake_tree() {\n\t\t$(this.parent).find(\".tree\").remove();\n\n\t\tvar use_label = this.args[this.opts.root_label] || this.root_label || this.opts.root_label;\n\t\tvar use_value = this.root_value;\n\t\tif (use_value == null) {\n\t\t\tuse_value = use_label;\n\t\t}\n\t\tthis.tree = new frappe.ui.Tree({\n\t\t\tparent: this.body,\n\t\t\tlabel: use_label,\n\t\t\troot_value: use_value,\n\t\t\texpandable: true,\n\n\t\t\targs: this.args,\n\t\t\tmethod: this.get_tree_nodes,\n\n\t\t\t// array of button props: {label, condition, click, btnClass}\n\t\t\ttoolbar: this.get_toolbar(),\n\n\t\t\tget_label: this.opts.get_label,\n\t\t\ton_render: this.opts.onrender,\n\t\t\ton_get_node: this.opts.on_get_node,\n\t\t\ton_click: (node) => {\n\t\t\t\tthis.select_node(node);\n\t\t\t},\n\t\t});\n\n\t\tcur_tree = this.tree;\n\t\tcur_tree.view_name = \"Tree\";\n\t\tthis.post_render();\n\t}\n\n\trebuild_tree() {\n\t\tlet me = this;\n\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.utils.nestedset.rebuild_tree\",\n\t\t\targs: {\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\tparent_field: \"parent_\" + me.doctype.toLowerCase().replace(/ /g, \"_\"),\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\n\tpost_render() {\n\t\tvar me = this;\n\t\tme.opts.post_render && me.opts.post_render(me);\n\t}\n\n\tselect_node(node) {\n\t\tvar me = this;\n\t\tif (this.opts.click) {\n\t\t\tthis.opts.click(node);\n\t\t}\n\t\tif (this.opts.view_template) {\n\t\t\tthis.node_view.empty();\n\t\t\t$(\n\t\t\t\tfrappe.render_template(me.opts.view_template, {\n\t\t\t\t\tdata: node.data,\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t})\n\t\t\t).appendTo(this.node_view);\n\t\t}\n\t}\n\tget_toolbar() {\n\t\tvar me = this;\n\n\t\tvar toolbar = [\n\t\t\t{\n\t\t\t\tlabel: __(me.can_write ? \"Edit\" : \"Details\"),\n\t\t\t\tcondition: function (node) {\n\t\t\t\t\treturn !node.is_root && me.can_read;\n\t\t\t\t},\n\t\t\t\tclick: function (node) {\n\t\t\t\t\tfrappe.set_route(\"Form\", me.doctype, node.label);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Add Child\"),\n\t\t\t\tcondition: function (node) {\n\t\t\t\t\treturn me.can_create && node.expandable && !node.hide_add;\n\t\t\t\t},\n\t\t\t\tclick: function (node) {\n\t\t\t\t\tme.new_node();\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Rename\"),\n\t\t\t\tcondition: function (node) {\n\t\t\t\t\tlet allow_rename = true;\n\t\t\t\t\tif (me.doctype && frappe.get_meta(me.doctype)) {\n\t\t\t\t\t\tif (!frappe.get_meta(me.doctype).allow_rename) allow_rename = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn !node.is_root && me.can_write && allow_rename;\n\t\t\t\t},\n\t\t\t\tclick: function (node) {\n\t\t\t\t\tfrappe.model.rename_doc(me.doctype, node.label, function (new_name) {\n\t\t\t\t\t\tnode.$tree_link.find(\"a\").text(new_name);\n\t\t\t\t\t\tnode.label = new_name;\n\t\t\t\t\t\tme.tree.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Delete\"),\n\t\t\t\tcondition: function (node) {\n\t\t\t\t\treturn !node.is_root && me.can_delete;\n\t\t\t\t},\n\t\t\t\tclick: function (node) {\n\t\t\t\t\tfrappe.model.delete_doc(me.doctype, node.label, function () {\n\t\t\t\t\t\tnode.parent.remove();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\",\n\t\t\t},\n\t\t];\n\n\t\tif (this.opts.toolbar && this.opts.extend_toolbar) {\n\t\t\ttoolbar = toolbar.filter((btn) => {\n\t\t\t\treturn !me.opts.toolbar.find((d) => d[\"label\"] == btn[\"label\"]);\n\t\t\t});\n\t\t\treturn toolbar.concat(this.opts.toolbar);\n\t\t} else if (this.opts.toolbar && !this.opts.extend_toolbar) {\n\t\t\treturn this.opts.toolbar;\n\t\t} else {\n\t\t\treturn toolbar;\n\t\t}\n\t}\n\tnew_node() {\n\t\tvar me = this;\n\t\tvar node = me.tree.get_selected_node();\n\n\t\tif (!(node && node.expandable)) {\n\t\t\tfrappe.msgprint(__(\"Select a group node first.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prepare_fields();\n\n\t\t// the dialog\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"New {0}\", [__(me.doctype)]),\n\t\t\tfields: me.fields,\n\t\t});\n\n\t\tvar args = $.extend({}, me.args);\n\t\targs[\"parent_\" + me.doctype.toLowerCase().replace(/ /g, \"_\")] = me.args[\"parent\"];\n\n\t\td.set_value(\"is_group\", 0);\n\t\td.set_values(args);\n\n\t\t// create\n\t\td.set_primary_action(__(\"Create New\"), function () {\n\t\t\tvar btn = this;\n\t\t\tvar v = d.get_values();\n\t\t\tif (!v) return;\n\n\t\t\tv.parent = node.label;\n\t\t\tv.doctype = me.doctype;\n\n\t\t\tif (node.is_root) {\n\t\t\t\tv[\"is_root\"] = node.is_root;\n\t\t\t} else {\n\t\t\t\tv[\"is_root\"] = false;\n\t\t\t}\n\n\t\t\td.hide();\n\t\t\tfrappe.dom.freeze(__(\"Creating {0}\", [me.doctype]));\n\n\t\t\t$.extend(args, v);\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: me.opts.add_tree_node || \"frappe.desk.treeview.add_node\",\n\t\t\t\targs: args,\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (!r.exc) {\n\t\t\t\t\t\tme.tree.load_children(node);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talways: function () {\n\t\t\t\t\tfrappe.dom.unfreeze();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\td.show();\n\t}\n\tprepare_fields() {\n\t\tvar me = this;\n\n\t\tthis.fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tfieldname: \"is_group\",\n\t\t\t\tlabel: __(\"Group Node\"),\n\t\t\t\tdescription: __(\"Further nodes can be only created under 'Group' type nodes\"),\n\t\t\t},\n\t\t];\n\n\t\tif (this.opts.fields) {\n\t\t\tthis.fields = this.opts.fields;\n\t\t}\n\n\t\tthis.ignore_fields = this.opts.ignore_fields || [];\n\n\t\tvar mandatory_fields = $.map(me.opts.meta.fields, function (d) {\n\t\t\treturn d.reqd || (d.bold && !d.read_only && !!d.is_virtual) ? d : null;\n\t\t});\n\n\t\tvar opts_field_names = this.fields.map(function (d) {\n\t\t\treturn d.fieldname;\n\t\t});\n\n\t\tmandatory_fields.map(function (d) {\n\t\t\tif (\n\t\t\t\t$.inArray(d.fieldname, me.ignore_fields) === -1 &&\n\t\t\t\t$.inArray(d.fieldname, opts_field_names) === -1\n\t\t\t) {\n\t\t\t\tme.fields.push(d);\n\t\t\t}\n\t\t});\n\t}\n\tprint_tree() {\n\t\tif (!frappe.model.can_print(this.doctype)) {\n\t\t\tfrappe.msgprint(__(\"You are not allowed to print this report\"));\n\t\t\treturn false;\n\t\t}\n\t\tvar tree = $(\".tree:visible\").html();\n\t\tvar me = this;\n\t\tfrappe.ui.get_print_settings(false, function (print_settings) {\n\t\t\tvar title = __(me.docname || me.doctype);\n\t\t\tfrappe.render_tree({ title: title, tree: tree, print_settings: print_settings });\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.core.doctype.access_log.access_log.make_access_log\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\treport_name: me.page_name,\n\t\t\t\t\tpage: tree,\n\t\t\t\t\tmethod: \"Print\",\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\tset_primary_action() {\n\t\tvar me = this;\n\t\tif (!this.opts.disable_add_node && this.can_create) {\n\t\t\tme.page.set_primary_action(\n\t\t\t\t__(\"New\"),\n\t\t\t\tfunction () {\n\t\t\t\t\tme.new_node();\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t}\n\t}\n\tset_menu_item() {\n\t\tvar me = this;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"View List\"),\n\t\t\t\taction: function () {\n\t\t\t\t\tfrappe.set_route(\"List\", me.doctype);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Print\"),\n\t\t\t\taction: function () {\n\t\t\t\t\tme.print_tree();\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Refresh\"),\n\t\t\t\taction: function () {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tif (\n\t\t\tfrappe.user.has_role(\"System Manager\") &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"lft\") &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"rgt\")\n\t\t) {\n\t\t\tthis.menu_items.push({\n\t\t\t\tlabel: __(\"Rebuild Tree\"),\n\t\t\t\taction: function () {\n\t\t\t\t\tme.rebuild_tree();\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tif (me.opts.menu_items) {\n\t\t\tme.menu_items.push.apply(me.menu_items, me.opts.menu_items);\n\t\t}\n\n\t\t$.each(me.menu_items, function (i, menu_item) {\n\t\t\tvar has_perm = true;\n\t\t\tif (menu_item[\"condition\"]) {\n\t\t\t\thas_perm = eval(menu_item[\"condition\"]);\n\t\t\t}\n\n\t\t\tif (has_perm) {\n\t\t\t\tme.page.add_menu_item(menu_item[\"label\"], menu_item[\"action\"]);\n\t\t\t}\n\t\t});\n\t}\n};\n", "\n\tfrappe.templates['listing'] = `<div class=\"frappe-list\">\n\t<div class=\"list-filters\" style=\"display: none;\">\n\t</div>\n\n\t<div style=\"margin-bottom:9px\" class=\"list-toolbar-wrapper hide\">\n\t\t<div class=\"list-toolbar btn-group\" style=\"display:inline-block; margin-right: 10px;\">\n\t\t</div>\n\t</div>\n    <div style=\"clear:both\"></div>\n\t<div class=\"no-result text-center\" style=\"display: none;\">\n\t\t{%= no_result_message %}\n\t</div>\n\t<div class=\"result\">\n\t\t<div class=\"list-headers\"></div>\n        <div class=\"list-loading text-center\">\n        \t{%= frappe.messages.get_waiting_message(__(\"Loading\") + \"...\" ) %}\n        </div>\n\t\t<div class=\"result-list\"></div>\n\t</div>\n\t<div class=\"list-paging-area\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-xs-6\">\n\t\t\t\t<div class=\"btn-group btn-group-paging\">\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-info\" data-value=\"20\">20</button>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\" data-value=\"100\">100</button>\n\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm\" data-value=\"500\">500</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-xs-6 text-right\">\n\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">{%= _more %}...</button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`;\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n\nfrappe.has_indicator = function (doctype) {\n\t// returns true if indicator is present\n\tif (frappe.model.is_submittable(doctype)) {\n\t\treturn true;\n\t} else if (\n\t\t(frappe.listview_settings[doctype] || {}).get_indicator ||\n\t\tfrappe.workflow.get_state_fieldname(doctype)\n\t) {\n\t\treturn true;\n\t} else if (\n\t\tfrappe.meta.has_field(doctype, \"enabled\") ||\n\t\tfrappe.meta.has_field(doctype, \"disabled\")\n\t) {\n\t\treturn true;\n\t} else if (\n\t\tfrappe.meta.has_field(doctype, \"status\") &&\n\t\tfrappe.get_meta(doctype).states.length\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nfrappe.get_indicator = function (doc, doctype) {\n\tif (doc.__unsaved) {\n\t\treturn [__(\"Not Saved\"), \"orange\"];\n\t}\n\n\tif (!doctype) doctype = doc.doctype;\n\n\tlet meta = frappe.get_meta(doctype);\n\tvar workflow = frappe.workflow.workflows[doctype];\n\tvar without_workflow = workflow ? workflow[\"override_status\"] : true;\n\n\tvar settings = frappe.listview_settings[doctype] || {};\n\n\tvar is_submittable = frappe.model.is_submittable(doctype),\n\t\tworkflow_fieldname = frappe.workflow.get_state_fieldname(doctype);\n\n\t// workflow\n\tif (workflow_fieldname && !without_workflow) {\n\t\tvar value = doc[workflow_fieldname];\n\t\tif (value) {\n\t\t\tvar colour = \"\";\n\n\t\t\tif (locals[\"Workflow State\"][value] && locals[\"Workflow State\"][value].style) {\n\t\t\t\tvar colour = {\n\t\t\t\t\tSuccess: \"green\",\n\t\t\t\t\tWarning: \"orange\",\n\t\t\t\t\tDanger: \"red\",\n\t\t\t\t\tPrimary: \"blue\",\n\t\t\t\t\tInverse: \"black\",\n\t\t\t\t\tInfo: \"light-blue\",\n\t\t\t\t}[locals[\"Workflow State\"][value].style];\n\t\t\t}\n\t\t\tif (!colour) colour = \"gray\";\n\n\t\t\treturn [__(value), colour, workflow_fieldname + \",=,\" + value];\n\t\t}\n\t}\n\n\t// draft if document is submittable\n\tif (is_submittable && doc.docstatus == 0 && !settings.has_indicator_for_draft) {\n\t\treturn [__(\"Draft\"), \"red\", \"docstatus,=,0\"];\n\t}\n\n\t// cancelled\n\tif (is_submittable && doc.docstatus == 2 && !settings.has_indicator_for_cancelled) {\n\t\treturn [__(\"Cancelled\"), \"red\", \"docstatus,=,2\"];\n\t}\n\n\t// based on document state\n\tif (doc.status && meta && meta.states && meta.states.find((d) => d.title === doc.status)) {\n\t\tlet state = meta.states.find((d) => d.title === doc.status);\n\t\tlet color_class = frappe.scrub(state.color, \"-\");\n\t\treturn [__(doc.status), color_class, \"status,=,\" + doc.status];\n\t}\n\n\tif (settings.get_indicator) {\n\t\tvar indicator = settings.get_indicator(doc);\n\t\tif (indicator) return indicator;\n\t}\n\n\t// if submittable\n\tif (is_submittable && doc.docstatus == 1) {\n\t\treturn [__(\"Submitted\"), \"blue\", \"docstatus,=,1\"];\n\t}\n\n\t// based on status\n\tif (doc.status) {\n\t\treturn [__(doc.status), frappe.utils.guess_colour(doc.status)];\n\t}\n\n\t// based on enabled\n\tif (frappe.meta.has_field(doctype, \"enabled\")) {\n\t\tif (doc.enabled) {\n\t\t\treturn [__(\"Enabled\"), \"blue\", \"enabled,=,1\"];\n\t\t} else {\n\t\t\treturn [__(\"Disabled\"), \"grey\", \"enabled,=,0\"];\n\t\t}\n\t}\n\n\t// based on disabled\n\tif (frappe.meta.has_field(doctype, \"disabled\")) {\n\t\tif (doc.disabled) {\n\t\t\treturn [__(\"Disabled\"), \"grey\", \"disabled,=,1\"];\n\t\t} else {\n\t\t\treturn [__(\"Enabled\"), \"blue\", \"disabled,=,0\"];\n\t\t}\n\t}\n};\n", "frappe.ui.Filter = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tif (this.value === null || this.value === undefined) {\n\t\t\tthis.value = \"\";\n\t\t}\n\n\t\tthis.utils = frappe.ui.filter_utils;\n\t\tthis.set_conditions();\n\t\tthis.set_conditions_from_config();\n\t\tthis.make();\n\t}\n\n\tset_conditions() {\n\t\tthis.conditions = [\n\t\t\t[\"=\", __(\"Equals\")],\n\t\t\t[\"!=\", __(\"Not Equals\")],\n\t\t\t[\"like\", __(\"Like\")],\n\t\t\t[\"not like\", __(\"Not Like\")],\n\t\t\t[\"in\", __(\"In\")],\n\t\t\t[\"not in\", __(\"Not In\")],\n\t\t\t[\"is\", __(\"Is\")],\n\t\t\t[\">\", \">\"],\n\t\t\t[\"<\", \"<\"],\n\t\t\t[\">=\", \">=\"],\n\t\t\t[\"<=\", \"<=\"],\n\t\t\t[\"Between\", __(\"Between\")],\n\t\t\t[\"Timespan\", __(\"Timespan\")],\n\t\t];\n\n\t\tthis.nested_set_conditions = [\n\t\t\t[\"descendants of\", __(\"Descendants Of\")],\n\t\t\t[\"not descendants of\", __(\"Not Descendants Of\")],\n\t\t\t[\"ancestors of\", __(\"Ancestors Of\")],\n\t\t\t[\"not ancestors of\", __(\"Not Ancestors Of\")],\n\t\t];\n\n\t\tthis.conditions.push(...this.nested_set_conditions);\n\n\t\tthis.invalid_condition_map = {\n\t\t\tDate: [\"like\", \"not like\"],\n\t\t\tDatetime: [\"like\", \"not like\", \"in\", \"not in\", \"=\", \"!=\"],\n\t\t\tData: [\"Between\", \"Timespan\"],\n\t\t\tSelect: [\"like\", \"not like\", \"Between\", \"Timespan\"],\n\t\t\tLink: [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\"],\n\t\t\tCurrency: [\"Between\", \"Timespan\"],\n\t\t\tColor: [\"Between\", \"Timespan\"],\n\t\t\tCheck: this.conditions.map((c) => c[0]).filter((c) => c !== \"=\"),\n\t\t\tCode: [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\", \"in\", \"not in\"],\n\t\t\t\"HTML Editor\": [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\", \"in\", \"not in\"],\n\t\t\t\"Markdown Editor\": [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\", \"in\", \"not in\"],\n\t\t\tPassword: [\"Between\", \"Timespan\", \">\", \"<\", \">=\", \"<=\", \"in\", \"not in\"],\n\t\t\tRating: [\"like\", \"not like\", \"Between\", \"in\", \"not in\", \"Timespan\"],\n\t\t};\n\t}\n\n\tset_conditions_from_config() {\n\t\tif (frappe.boot.additional_filters_config) {\n\t\t\tthis.filters_config = frappe.boot.additional_filters_config;\n\t\t\tfor (let key of Object.keys(this.filters_config)) {\n\t\t\t\tconst filter = this.filters_config[key];\n\t\t\t\tthis.conditions.push([key, __(filter.label)]);\n\t\t\t\tfor (let fieldtype of Object.keys(this.invalid_condition_map)) {\n\t\t\t\t\tif (!filter.valid_for_fieldtypes.includes(fieldtype)) {\n\t\t\t\t\t\tthis.invalid_condition_map[fieldtype].push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmake() {\n\t\tthis.filter_edit_area = $(\n\t\t\tfrappe.render_template(\"edit_filter\", {\n\t\t\t\tconditions: this.conditions,\n\t\t\t})\n\t\t);\n\t\tthis.parent && this.filter_edit_area.appendTo(this.parent.find(\".filter-edit-area\"));\n\t\tthis.make_select();\n\t\tthis.set_events();\n\t\tthis.setup();\n\t}\n\n\tmake_select() {\n\t\tthis.fieldselect = new frappe.ui.FieldSelect({\n\t\t\tparent: this.filter_edit_area.find(\".fieldname-select-area\"),\n\t\t\tdoctype: this.parent_doctype,\n\t\t\tparent_doctype: this._parent_doctype,\n\t\t\tfilter_fields: this.filter_fields,\n\t\t\tinput_class: \"input-xs\",\n\t\t\tselect: (doctype, fieldname) => {\n\t\t\t\tthis.set_field(doctype, fieldname);\n\t\t\t},\n\t\t});\n\n\t\tif (this.fieldname) {\n\t\t\tthis.fieldselect.set_value(this.doctype, this.fieldname);\n\t\t}\n\t}\n\n\tset_events() {\n\t\tthis.filter_edit_area.find(\".remove-filter\").on(\"click\", () => {\n\t\t\tthis.remove();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.filter_edit_area.find(\".condition\").change(() => {\n\t\t\tif (!this.field) return;\n\n\t\t\tlet condition = this.get_condition();\n\t\t\tlet fieldtype = null;\n\n\t\t\tif ([\"in\", \"like\", \"not in\", \"not like\"].includes(condition)) {\n\t\t\t\tfieldtype = \"Data\";\n\t\t\t\tthis.add_condition_help(condition);\n\t\t\t} else {\n\t\t\t\tthis.filter_edit_area.find(\".filter-description\").empty();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t[\"Select\", \"MultiSelect\"].includes(this.field.df.fieldtype) &&\n\t\t\t\t[\"in\", \"not in\"].includes(condition)\n\t\t\t) {\n\t\t\t\tfieldtype = \"MultiSelect\";\n\t\t\t}\n\n\t\t\tthis.set_field(this.field.df.parent, this.field.df.fieldname, fieldtype, condition);\n\t\t});\n\t}\n\n\tsetup() {\n\t\tconst fieldname = this.fieldname || \"name\";\n\t\t// set the field\n\t\treturn this.set_values(this.doctype, fieldname, this.condition, this.value);\n\t}\n\n\tsetup_state(is_new) {\n\t\tlet promise = Promise.resolve();\n\t\tif (is_new) {\n\t\t\tthis.filter_edit_area.addClass(\"new-filter\");\n\t\t} else {\n\t\t\tpromise = this.update_filter_tag();\n\t\t}\n\n\t\tif (this.hidden) {\n\t\t\tpromise.then(() => this.$filter_tag.hide());\n\t\t}\n\t}\n\n\tfreeze() {\n\t\tthis.update_filter_tag();\n\t}\n\n\tupdate_filter_tag() {\n\t\tif (this._filter_value_set) {\n\t\t\treturn this._filter_value_set.then(() => {\n\t\t\t\t!this.$filter_tag ? this.make_tag() : this.set_filter_button_text();\n\t\t\t\tthis.filter_edit_area.hide();\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.filter_edit_area.remove();\n\t\tthis.field = null;\n\t\t// this.on_change(true);\n\t}\n\n\tset_values(doctype, fieldname, condition, value) {\n\t\t// presents given (could be via tags!)\n\t\tif (this.set_field(doctype, fieldname) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.field.df.original_type === \"Check\") {\n\t\t\tvalue = value == 1 ? \"Yes\" : \"No\";\n\t\t}\n\t\tif (condition) this.set_condition(condition, true);\n\n\t\t// set value can be asynchronous, so update_filter_tag should happen after field is set\n\t\tthis._filter_value_set = Promise.resolve();\n\n\t\tif ([\"in\", \"not in\"].includes(condition) && Array.isArray(value)) {\n\t\t\tvalue = value.join(\",\");\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tthis._filter_value_set = this.field.set_value(value);\n\t\t} else if (value !== undefined || value !== null) {\n\t\t\tthis._filter_value_set = this.field.set_value((value + \"\").trim());\n\t\t}\n\t\treturn this._filter_value_set;\n\t}\n\n\tset_field(doctype, fieldname, fieldtype, condition) {\n\t\t// set in fieldname (again)\n\t\tlet cur = {};\n\t\tif (this.field) for (let k in this.field.df) cur[k] = this.field.df[k];\n\n\t\tlet original_docfield = (this.fieldselect.fields_by_name[doctype] || {})[fieldname];\n\n\t\tif (!original_docfield) {\n\t\t\tconsole.warn(`Field ${fieldname} is not selectable.`);\n\t\t\tthis.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tlet df = copy_dict(original_docfield);\n\n\t\t// filter field shouldn't be read only or hidden\n\t\tdf.read_only = 0;\n\t\tdf.hidden = 0;\n\t\tdf.is_filter = true;\n\t\tdelete df.hidden_due_to_dependency;\n\n\t\tlet c = condition ? condition : this.utils.get_default_condition(df);\n\t\tthis.set_condition(c);\n\n\t\tthis.utils.set_fieldtype(df, fieldtype, this.get_condition());\n\n\t\t// called when condition is changed,\n\t\t// don't change if all is well\n\t\tif (\n\t\t\tthis.field &&\n\t\t\tcur.fieldname == fieldname &&\n\t\t\tdf.fieldtype == cur.fieldtype &&\n\t\t\tdf.parent == cur.parent &&\n\t\t\tdf.options == cur.options\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// clear field area and make field\n\t\tthis.fieldselect.selected_doctype = doctype;\n\t\tthis.fieldselect.selected_fieldname = fieldname;\n\n\t\tif (\n\t\t\tthis.filters_config &&\n\t\t\tthis.filters_config[condition] &&\n\t\t\tthis.filters_config[condition].valid_for_fieldtypes.includes(df.fieldtype)\n\t\t) {\n\t\t\tlet args = {};\n\t\t\tif (this.filters_config[condition].depends_on) {\n\t\t\t\tconst field_name = this.filters_config[condition].depends_on;\n\t\t\t\tconst filter_value = this.filter_list.get_filter_value(fieldname);\n\t\t\t\targs[field_name] = filter_value;\n\t\t\t}\n\t\t\tlet setup_field = (field) => {\n\t\t\t\tdf.fieldtype = field.fieldtype;\n\t\t\t\tdf.options = field.options;\n\t\t\t\tdf.fieldname = fieldname;\n\t\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t\t};\n\t\t\tif (this.filters_config[condition].data) {\n\t\t\t\tlet field = this.filters_config[condition].data;\n\t\t\t\tsetup_field(field);\n\t\t\t} else {\n\t\t\t\tfrappe.xcall(this.filters_config[condition].get_field, args).then((field) => {\n\t\t\t\t\tthis.filters_config[condition].data = field;\n\t\t\t\t\tsetup_field(field);\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t}\n\t}\n\n\tmake_field(df, old_fieldtype) {\n\t\tlet old_text = this.field ? this.field.get_value() : null;\n\t\tthis.hide_invalid_conditions(df.fieldtype, df.original_type);\n\t\tthis.toggle_nested_set_conditions(df);\n\t\tlet field_area = this.filter_edit_area.find(\".filter-field\").empty().get(0);\n\t\tdf.input_class = \"input-xs\";\n\t\tlet f = frappe.ui.form.make_control({\n\t\t\tdf: df,\n\t\t\tparent: field_area,\n\t\t\tonly_input: true,\n\t\t});\n\t\tf.refresh();\n\n\t\tthis.field = f;\n\t\tif (old_text && f.fieldtype === old_fieldtype) {\n\t\t\tthis.field.set_value(old_text);\n\t\t}\n\n\t\tthis.bind_filter_field_events();\n\t}\n\n\tbind_filter_field_events() {\n\t\t// Apply filter on input focus out\n\t\tthis.field.$input.on(\"focusout\", () => this.on_change());\n\n\t\t// run on enter\n\t\t$(this.field.wrapper)\n\t\t\t.find(\":input\")\n\t\t\t.keydown((e) => {\n\t\t\t\tif (e.which == 13 && this.field.df.fieldtype !== \"MultiSelect\") {\n\t\t\t\t\tthis.on_change();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tget_value() {\n\t\treturn [\n\t\t\tthis.fieldselect.selected_doctype,\n\t\t\tthis.field.df.fieldname,\n\t\t\tthis.get_condition(),\n\t\t\tthis.get_selected_value(),\n\t\t\tthis.hidden,\n\t\t];\n\t}\n\n\tget_selected_value() {\n\t\treturn this.utils.get_selected_value(this.field, this.get_condition());\n\t}\n\n\tget_selected_label() {\n\t\treturn this.utils.get_selected_label(this.field);\n\t}\n\n\tget_condition() {\n\t\treturn this.filter_edit_area.find(\".condition\").val();\n\t}\n\n\tset_condition(condition, trigger_change = false) {\n\t\tlet $condition_field = this.filter_edit_area.find(\".condition\");\n\t\t$condition_field.val(condition);\n\t\tif (trigger_change) $condition_field.change();\n\t}\n\n\tadd_condition_help(condition) {\n\t\tconst description = [\"in\", \"not in\"].includes(condition)\n\t\t\t? __(\"values separated by commas\")\n\t\t\t: __(\"use % as wildcard\");\n\n\t\tthis.filter_edit_area.find(\".filter-description\").html(description);\n\t}\n\n\tmake_tag() {\n\t\tif (!this.field) return;\n\t\tthis.$filter_tag = this.get_filter_tag_element().insertAfter(\n\t\t\tthis.parent.find(\".active-tag-filters .clear-filters\")\n\t\t);\n\t\tthis.set_filter_button_text();\n\t\tthis.bind_tag();\n\t}\n\n\tbind_tag() {\n\t\tthis.$filter_tag.find(\".remove-filter\").on(\"click\", this.remove.bind(this));\n\n\t\tlet filter_button = this.$filter_tag.find(\".toggle-filter\");\n\t\tfilter_button.on(\"click\", () => {\n\t\t\tfilter_button.closest(\".tag-filters-area\").find(\".filter-edit-area\").show();\n\t\t\tthis.filter_edit_area.toggle();\n\t\t});\n\t}\n\n\tset_filter_button_text() {\n\t\tthis.$filter_tag.find(\".toggle-filter\").html(this.get_filter_button_text());\n\t}\n\n\tget_filter_button_text() {\n\t\tlet value = this.utils.get_formatted_value(\n\t\t\tthis.field,\n\t\t\tthis.get_selected_label() || this.get_selected_value()\n\t\t);\n\t\treturn `${__(this.field.df.label)} ${__(this.get_condition())} ${__(value)}`;\n\t}\n\n\tget_filter_tag_element() {\n\t\treturn $(`<div class=\"filter-tag btn-group\">\n\t\t\t<button class=\"btn btn-default btn-xs toggle-filter\"\n\t\t\t\ttitle=\"${__(\"Edit Filter\")}\">\n\t\t\t</button>\n\t\t\t<button class=\"btn btn-default btn-xs remove-filter\"\n\t\t\t\ttitle=\"${__(\"Remove Filter\")}\">\n\t\t\t\t${frappe.utils.icon(\"close\")}\n\t\t\t</button>\n\t\t</div>`);\n\t}\n\n\thide_invalid_conditions(fieldtype, original_type) {\n\t\tlet invalid_conditions =\n\t\t\tthis.invalid_condition_map[original_type] ||\n\t\t\tthis.invalid_condition_map[fieldtype] ||\n\t\t\t[];\n\n\t\tfor (let condition of this.conditions) {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(!invalid_conditions.includes(condition[0]));\n\t\t}\n\t}\n\n\ttoggle_nested_set_conditions(df) {\n\t\tlet show_condition =\n\t\t\tdf.fieldtype === \"Link\" && frappe.boot.nested_set_doctypes.includes(df.options);\n\t\tthis.nested_set_conditions.forEach((condition) => {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(show_condition);\n\t\t});\n\t}\n};\n\nfrappe.ui.filter_utils = {\n\tget_formatted_value(field, value) {\n\t\tif (field.df.fieldname === \"docstatus\") {\n\t\t\tvalue = { 0: \"Draft\", 1: \"Submitted\", 2: \"Cancelled\" }[value] || value;\n\t\t} else if (field.df.original_type === \"Check\") {\n\t\t\tvalue = { 0: \"No\", 1: \"Yes\" }[cint(value)];\n\t\t}\n\t\treturn frappe.format(value, field.df, { only_value: 1 });\n\t},\n\n\tget_selected_value(field, condition) {\n\t\tif (!field) return;\n\n\t\tlet val = field.get_value();\n\n\t\tif (typeof val === \"string\") {\n\t\t\tval = strip(val);\n\t\t}\n\n\t\tif (condition == \"is\" && !val) {\n\t\t\tval = field.df.options[0].value;\n\t\t}\n\n\t\tif (field.df.original_type == \"Check\") {\n\t\t\tval = val == \"Yes\" ? 1 : 0;\n\t\t}\n\n\t\tif ([\"like\", \"not like\"].includes(condition)) {\n\t\t\t// automatically append wildcards\n\t\t\tif (val && !(val.startsWith(\"%\") || val.endsWith(\"%\"))) {\n\t\t\t\tval = \"%\" + val + \"%\";\n\t\t\t}\n\t\t} else if ([\"in\", \"not in\"].includes(condition)) {\n\t\t\tif (val) {\n\t\t\t\tval = val.split(\",\").map((v) => strip(v));\n\t\t\t}\n\t\t} else if (frappe.boot.additional_filters_config[condition]) {\n\t\t\tval = field.value || val;\n\t\t}\n\t\tif (val === \"%\") {\n\t\t\tval = \"\";\n\t\t}\n\n\t\treturn val;\n\t},\n\n\tget_selected_label(field) {\n\t\tif (in_list([\"Link\", \"Dynamic Link\"], field.df.fieldtype)) {\n\t\t\treturn field.get_label_value();\n\t\t}\n\t},\n\n\tget_default_condition(df) {\n\t\tif (df.fieldtype == \"Data\") {\n\t\t\treturn \"like\";\n\t\t} else if (df.fieldtype == \"Date\" || df.fieldtype == \"Datetime\") {\n\t\t\treturn \"Between\";\n\t\t} else {\n\t\t\treturn \"=\";\n\t\t}\n\t},\n\n\tset_fieldtype(df, fieldtype, condition) {\n\t\t// reset\n\t\tif (df.original_type) df.fieldtype = df.original_type;\n\t\telse df.original_type = df.fieldtype;\n\n\t\tdf.description = \"\";\n\t\tdf.reqd = 0;\n\t\tdf.ignore_link_validation = true;\n\n\t\t// given\n\t\tif (fieldtype) {\n\t\t\tdf.fieldtype = fieldtype;\n\t\t\treturn;\n\t\t}\n\n\t\t// scrub\n\t\tif (df.fieldname == \"docstatus\") {\n\t\t\tdf.fieldtype = \"Select\";\n\t\t\tdf.options = [\n\t\t\t\t{ value: 0, label: __(\"Draft\") },\n\t\t\t\t{ value: 1, label: __(\"Submitted\") },\n\t\t\t\t{ value: 2, label: __(\"Cancelled\") },\n\t\t\t];\n\t\t} else if (df.fieldtype == \"Check\") {\n\t\t\tdf.fieldtype = \"Select\";\n\t\t\tdf.options = [\n\t\t\t\t{ label: __(\"Yes\", null, \"Checkbox is checked\"), value: \"Yes\" },\n\t\t\t\t{ label: __(\"No\", null, \"Checkbox is not checked\"), value: \"No\" },\n\t\t\t];\n\t\t} else if (\n\t\t\t[\n\t\t\t\t\"Text\",\n\t\t\t\t\"Small Text\",\n\t\t\t\t\"Text Editor\",\n\t\t\t\t\"Code\",\n\t\t\t\t\"Attach\",\n\t\t\t\t\"Attach Image\",\n\t\t\t\t\"Markdown Editor\",\n\t\t\t\t\"HTML Editor\",\n\t\t\t\t\"Tag\",\n\t\t\t\t\"Phone\",\n\t\t\t\t\"JSON\",\n\t\t\t\t\"Comments\",\n\t\t\t\t\"Barcode\",\n\t\t\t\t\"Dynamic Link\",\n\t\t\t\t\"Read Only\",\n\t\t\t\t\"Assign\",\n\t\t\t\t\"Color\",\n\t\t\t].indexOf(df.fieldtype) != -1\n\t\t) {\n\t\t\tdf.fieldtype = \"Data\";\n\t\t} else if (\n\t\t\tdf.fieldtype == \"Link\" &&\n\t\t\t[\n\t\t\t\t\"=\",\n\t\t\t\t\"!=\",\n\t\t\t\t\"descendants of\",\n\t\t\t\t\"ancestors of\",\n\t\t\t\t\"not descendants of\",\n\t\t\t\t\"not ancestors of\",\n\t\t\t].indexOf(condition) == -1\n\t\t) {\n\t\t\tdf.fieldtype = \"Data\";\n\t\t}\n\t\tif (df.fieldtype === \"Data\" && (df.options || \"\").toLowerCase() === \"email\") {\n\t\t\tdf.options = null;\n\t\t}\n\t\tif (condition == \"Between\" && (df.fieldtype == \"Date\" || df.fieldtype == \"Datetime\")) {\n\t\t\tdf.fieldtype = \"DateRange\";\n\t\t}\n\t\tif (\n\t\t\tcondition == \"Timespan\" &&\n\t\t\t[\"Date\", \"Datetime\", \"DateRange\", \"Select\"].includes(df.fieldtype)\n\t\t) {\n\t\t\tdf.fieldtype = \"Select\";\n\t\t\tdf.options = this.get_timespan_options([\n\t\t\t\t\"Last\",\n\t\t\t\t\"Yesterday\",\n\t\t\t\t\"Today\",\n\t\t\t\t\"Tomorrow\",\n\t\t\t\t\"This\",\n\t\t\t\t\"Next\",\n\t\t\t]);\n\t\t}\n\t\tif (condition === \"is\") {\n\t\t\tdf.fieldtype = \"Select\";\n\t\t\tdf.options = [\n\t\t\t\t{ label: __(\"Set\", null, \"Field value is set\"), value: \"set\" },\n\t\t\t\t{ label: __(\"Not Set\", null, \"Field value is not set\"), value: \"not set\" },\n\t\t\t];\n\t\t}\n\t\treturn;\n\t},\n\n\tget_timespan_options(periods) {\n\t\tconst period_map = {\n\t\t\tLast: [\"Week\", \"Month\", \"Quarter\", \"6 months\", \"Year\"],\n\t\t\tThis: [\"Week\", \"Month\", \"Quarter\", \"Year\"],\n\t\t\tNext: [\"Week\", \"Month\", \"Quarter\", \"6 months\", \"Year\"],\n\t\t};\n\t\tlet options = [];\n\t\tperiods.forEach((period) => {\n\t\t\tif (period_map[period]) {\n\t\t\t\tperiod_map[period].forEach((p) => {\n\t\t\t\t\toptions.push({\n\t\t\t\t\t\tlabel: `${period} ${p}`,\n\t\t\t\t\t\tvalue: `${period.toLowerCase()} ${p.toLowerCase()}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: __(period),\n\t\t\t\t\tvalue: `${period.toLowerCase()}`,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t},\n};\n", "frappe.ui.FilterGroup = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.filters = [];\n\t\twindow.fltr = this;\n\t\tif (!this.filter_button) {\n\t\t\tthis.wrapper = this.parent;\n\t\t\tthis.wrapper.append(this.get_filter_area_template());\n\t\t\tthis.set_filter_events();\n\t\t} else {\n\t\t\tthis.make_popover();\n\t\t}\n\t}\n\n\tmake_popover() {\n\t\tthis.init_filter_popover();\n\t\tthis.set_clear_all_filters_event();\n\t\tthis.set_popover_events();\n\t}\n\n\tset_clear_all_filters_event() {\n\t\tif (!this.filter_x_button) return;\n\n\t\tthis.filter_x_button.on(\"click\", () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tif (typeof this.base_list !== \"undefined\") {\n\t\t\t\t// It's a list view. Clear all the filters, also the ones in the\n\t\t\t\t// FilterArea outside this FilterGroup\n\t\t\t\tthis.base_list.filter_area.clear();\n\t\t\t} else {\n\t\t\t\t// Not a list view, just clear the filters in this FilterGroup\n\t\t\t\tthis.clear_filters();\n\t\t\t}\n\t\t\tthis.update_filter_button();\n\t\t});\n\t}\n\n\thide_popover() {\n\t\tthis.filter_button.popover(\"hide\");\n\t}\n\n\tinit_filter_popover() {\n\t\tthis.filter_button.popover({\n\t\t\tcontent: this.get_filter_area_template(),\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"filter-popover popover\">\n\t\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t\t<div class=\"popover-body popover-content\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t\thtml: true,\n\t\t\ttrigger: \"manual\",\n\t\t\tcontainer: \"body\",\n\t\t\tplacement: \"bottom\",\n\t\t\toffset: \"-100px, 0\",\n\t\t});\n\t}\n\n\ttoggle_empty_filters(show) {\n\t\tthis.wrapper && this.wrapper.find(\".empty-filters\").toggle(show);\n\t}\n\n\tset_popover_events() {\n\t\t$(document.body).on(\"click\", (e) => {\n\t\t\tif (this.wrapper && this.wrapper.is(\":visible\")) {\n\t\t\t\tconst in_datepicker =\n\t\t\t\t\t$(e.target).is(\".datepicker--cell\") ||\n\t\t\t\t\t$(e.target).closest(\".datepicker--nav-title\").length !== 0 ||\n\t\t\t\t\t$(e.target).parents(\".datepicker--nav-action\").length !== 0;\n\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).parents(\".filter-popover\").length === 0 &&\n\t\t\t\t\t$(e.target).parents(\".filter-box\").length === 0 &&\n\t\t\t\t\tthis.filter_button.find($(e.target)).length === 0 &&\n\t\t\t\t\t!$(e.target).is(this.filter_button) &&\n\t\t\t\t\t!in_datepicker\n\t\t\t\t) {\n\t\t\t\t\tthis.wrapper && this.hide_popover();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.filter_button.on(\"click\", () => {\n\t\t\tthis.filter_button.popover(\"toggle\");\n\t\t});\n\n\t\tthis.filter_button.on(\"shown.bs.popover\", () => {\n\t\t\tlet hide_empty_filters = this.filters && this.filters.length > 0;\n\n\t\t\tif (!this.wrapper) {\n\t\t\t\tthis.wrapper = $(\".filter-popover\");\n\t\t\t\tif (hide_empty_filters) {\n\t\t\t\t\tthis.toggle_empty_filters(false);\n\t\t\t\t\tthis.add_filters_to_popover(this.filters);\n\t\t\t\t}\n\t\t\t\tthis.set_filter_events();\n\t\t\t}\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\t!hide_empty_filters && this.add_filter(this.doctype, \"name\");\n\t\t});\n\n\t\tthis.filter_button.on(\"hidden.bs.popover\", () => {\n\t\t\tthis.apply();\n\t\t});\n\n\t\t// REDESIGN-TODO: (Temporary) Review and find best solution for this\n\t\tfrappe.router.on(\"change\", () => {\n\t\t\tif (this.wrapper && this.wrapper.is(\":visible\")) {\n\t\t\t\tthis.hide_popover();\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_filters_to_popover(filters) {\n\t\tfilters.forEach((filter) => {\n\t\t\tfilter.parent = this.wrapper;\n\t\t\tfilter.field = null;\n\t\t\tfilter.make();\n\t\t});\n\t}\n\n\tapply() {\n\t\tthis.update_filters();\n\t\tthis.on_change();\n\t}\n\n\tupdate_filter_button() {\n\t\tconst filters_applied = this.filters.length > 0;\n\t\tconst button_label = filters_applied\n\t\t\t? this.filters.length > 1\n\t\t\t\t? __(\"{0} filters\", [this.filters.length])\n\t\t\t\t: __(\"{0} filter\", [this.filters.length])\n\t\t\t: __(\"Filter\");\n\n\t\tthis.filter_button\n\t\t\t.toggleClass(\"btn-default\", !filters_applied)\n\t\t\t.toggleClass(\"btn-primary-light\", filters_applied);\n\n\t\tthis.filter_button.find(\".filter-icon\").toggleClass(\"active\", filters_applied);\n\n\t\tthis.filter_button.find(\".button-label\").html(button_label);\n\t}\n\n\tset_filter_events() {\n\t\tthis.wrapper.find(\".add-filter\").on(\"click\", () => {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tthis.add_filter(this.doctype, \"name\");\n\t\t});\n\n\t\tthis.wrapper.find(\".clear-filters\").on(\"click\", () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tthis.clear_filters();\n\t\t\tthis.on_change();\n\t\t\tthis.hide_popover();\n\t\t});\n\n\t\tthis.wrapper.find(\".apply-filters\").on(\"click\", () => this.hide_popover());\n\t}\n\n\tadd_filters(filters) {\n\t\tlet promises = [];\n\n\t\tfor (const filter of filters) {\n\t\t\tpromises.push(() => this.add_filter(...filter));\n\t\t}\n\n\t\treturn frappe.run_serially(promises).then(() => this.update_filters());\n\t}\n\n\tadd_filter(doctype, fieldname, condition, value, hidden) {\n\t\tif (!fieldname) return Promise.resolve();\n\t\t// adds a new filter, returns true if filter has been added\n\n\t\t// {}: Add in page filter by fieldname if exists ('=' => 'like')\n\n\t\tif (!this.validate_args(doctype, fieldname)) return false;\n\t\tconst is_new_filter = arguments.length < 2;\n\t\tif (is_new_filter && this.wrapper.find(\".new-filter:visible\").length) {\n\t\t\t// only allow 1 new filter at a time!\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\tlet args = [doctype, fieldname, condition, value, hidden];\n\t\t\tconst promise = this.push_new_filter(args, is_new_filter);\n\t\t\treturn promise && promise.then ? promise : Promise.resolve();\n\t\t}\n\t}\n\n\tvalidate_args(doctype, fieldname) {\n\t\tif (\n\t\t\tdoctype &&\n\t\t\tfieldname &&\n\t\t\t!frappe.meta.has_field(doctype, fieldname) &&\n\t\t\tfrappe.model.is_non_std_field(fieldname)\n\t\t) {\n\t\t\tfrappe.msgprint({\n\t\t\t\tmessage: __(\"Invalid filter: {0}\", [fieldname.bold()]),\n\t\t\t\tindicator: \"red\",\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpush_new_filter(args) {\n\t\t// args: [doctype, fieldname, condition, value]\n\t\tif (this.filter_exists(args)) return;\n\n\t\t// {}: Clear page filter fieldname field\n\n\t\tlet filter = this._push_new_filter(...args);\n\n\t\tif (filter && filter.value) {\n\t\t\t// filter.setup_state(is_new_filter);\n\t\t\treturn filter._filter_value_set; // internal promise\n\t\t}\n\t}\n\n\t_push_new_filter(doctype, fieldname, condition, value, hidden = false) {\n\t\tlet args = {\n\t\t\tparent: this.wrapper,\n\t\t\tparent_doctype: this.doctype,\n\t\t\tdoctype: doctype,\n\t\t\t_parent_doctype: this.parent_doctype,\n\t\t\tfieldname: fieldname,\n\t\t\tcondition: condition,\n\t\t\tvalue: value,\n\t\t\thidden: hidden,\n\t\t\tindex: this.filters.length + 1,\n\t\t\ton_change: (update) => {\n\t\t\t\tif (update) this.update_filters();\n\t\t\t\tthis.on_change();\n\t\t\t},\n\t\t\tfilter_items: (doctype, fieldname) => {\n\t\t\t\treturn !this.filter_exists([doctype, fieldname]);\n\t\t\t},\n\t\t\tfilter_list: this.base_list || this,\n\t\t};\n\t\tlet filter = new frappe.ui.Filter(args);\n\t\tthis.filters.push(filter);\n\t\treturn filter;\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tlet filter_obj = this.filters.find((f) => f.fieldname == fieldname) || {};\n\t\treturn filter_obj.value;\n\t}\n\n\tfilter_exists(filter_value) {\n\t\t// filter_value of form: [doctype, fieldname, condition, value]\n\t\tlet exists = false;\n\t\tthis.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\tlet f_value = f.get_value();\n\t\t\t\tif (filter_value.length === 2) {\n\t\t\t\t\texists = filter_value[0] === f_value[0] && filter_value[1] === f_value[1];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet value = filter_value[3];\n\t\t\t\tlet equal = frappe.utils.arrays_equal;\n\n\t\t\t\tif (\n\t\t\t\t\tequal(f_value.slice(0, 4), filter_value.slice(0, 4)) ||\n\t\t\t\t\t(Array.isArray(value) && equal(value, f_value[3]))\n\t\t\t\t) {\n\t\t\t\t\texists = true;\n\t\t\t\t}\n\t\t\t});\n\t\treturn exists;\n\t}\n\n\tget_filters() {\n\t\treturn this.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\treturn f.get_value();\n\t\t\t});\n\t\t// {}: this.list.update_standard_filters(values);\n\t}\n\n\tupdate_filters() {\n\t\t// remove hidden filters and undefined filters\n\t\tconst filter_exists = (f) => ![undefined, null].includes(f.get_selected_value());\n\t\tthis.filters.map((f) => !filter_exists(f) && f.remove());\n\t\tthis.filters = this.filters.filter((f) => filter_exists(f) && f.field);\n\t\tthis.update_filter_button();\n\t\tthis.filters.length === 0 && this.toggle_empty_filters(true);\n\t}\n\n\tclear_filters() {\n\t\tthis.filters.map((f) => f.remove(true));\n\t\t// {}: Clear page filters, .date-range-picker (called list run())\n\t\tthis.filters = [];\n\t}\n\n\tget_filter(fieldname) {\n\t\treturn this.filters.filter((f) => {\n\t\t\treturn f.field && f.field.df.fieldname == fieldname;\n\t\t})[0];\n\t}\n\n\tget_filter_area_template() {\n\t\t/* eslint-disable indent */\n\t\treturn $(`\n\t\t\t<div class=\"filter-area\">\n\t\t\t\t<div class=\"filter-edit-area\">\n\t\t\t\t\t<div class=\"text-muted empty-filters text-center\">\n\t\t\t\t\t\t${__(\"No filters selected\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr class=\"divider\"></hr>\n\t\t\t\t<div class=\"filter-action-buttons mt-2\">\n\t\t\t\t\t<button class=\"text-muted add-filter btn btn-xs\">\n\t\t\t\t\t\t+ ${__(\"Add a Filter\")}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-xs clear-filters\">\n\t\t\t\t\t\t\t${__(\"Clear Filters\")}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t${\n\t\t\t\t\t\t\tthis.filter_button\n\t\t\t\t\t\t\t\t? `<button class=\"btn btn-primary btn-xs apply-filters\">\n\t\t\t\t\t\t\t\t${__(\"Apply Filters\")}\n\t\t\t\t\t\t\t</button>`\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`);\n\t\t/* eslint-disable indent */\n\t}\n\n\tget_filters_as_object() {\n\t\tlet filters = this.get_filters().reduce((acc, filter) => {\n\t\t\treturn Object.assign(acc, {\n\t\t\t\t[filter[1]]: [filter[2], filter[3]],\n\t\t\t});\n\t\t}, {});\n\t\treturn filters;\n\t}\n\n\tadd_filters_to_filter_group(filters) {\n\t\tif (filters && filters.length) {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tfilters.forEach((filter) => {\n\t\t\t\tthis.add_filter(filter[0], filter[1], filter[2], filter[3]);\n\t\t\t});\n\t\t}\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0)) return Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(filters);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n};\n", "// <select> widget with all fields of a doctype as options\nfrappe.ui.FieldSelect = class FieldSelect {\n\t// opts parent, doctype, filter_fields, with_blank, select\n\tconstructor(opts) {\n\t\tvar me = this;\n\t\t$.extend(this, opts);\n\t\tthis.fields_by_name = {};\n\t\tthis.options = [];\n\t\tthis.$input = $('<input class=\"form-control\">')\n\t\t\t.appendTo(this.parent)\n\t\t\t.on(\"click\", function () {\n\t\t\t\t$(this).select();\n\t\t\t});\n\t\tthis.input_class && this.$input.addClass(this.input_class);\n\t\tthis.select_input = this.$input.get(0);\n\t\tthis.awesomplete = new Awesomplete(this.select_input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tautoFirst: true,\n\t\t\tlist: me.options,\n\t\t\titem(item) {\n\t\t\t\treturn $(repl('<li class=\"filter-field-select\"><p>%(label)s</p></li>', item))\n\t\t\t\t\t.data(\"item.autocomplete\", item)\n\t\t\t\t\t.get(0);\n\t\t\t},\n\t\t});\n\t\tthis.$input.on(\"awesomplete-select\", function (e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.selected_doctype = item.doctype;\n\t\t\tme.selected_fieldname = item.fieldname;\n\t\t\tif (me.select) me.select(item.doctype, item.fieldname);\n\t\t});\n\t\tthis.$input.on(\"awesomplete-selectcomplete\", function (e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.$input.val(item.label);\n\t\t});\n\n\t\tif (this.filter_fields) {\n\t\t\tfor (var i in this.filter_fields) this.add_field_option(this.filter_fields[i]);\n\t\t} else {\n\t\t\tthis.build_options();\n\t\t}\n\t\tthis.set_value(this.doctype, \"name\");\n\t}\n\tget_value() {\n\t\treturn this.selected_doctype\n\t\t\t? this.selected_doctype + \".\" + this.selected_fieldname\n\t\t\t: null;\n\t}\n\tval(value) {\n\t\tif (value === undefined) {\n\t\t\treturn this.get_value();\n\t\t} else {\n\t\t\tthis.set_value(value);\n\t\t}\n\t}\n\tclear() {\n\t\tthis.selected_doctype = null;\n\t\tthis.selected_fieldname = null;\n\t\tthis.$input.val(\"\");\n\t}\n\tset_value(doctype, fieldname) {\n\t\tvar me = this;\n\t\tthis.clear();\n\t\tif (!doctype) return;\n\n\t\t// old style\n\t\tif (doctype.indexOf(\".\") !== -1) {\n\t\t\tvar parts = doctype.split(\".\");\n\t\t\tdoctype = parts[0];\n\t\t\tfieldname = parts[1];\n\t\t}\n\n\t\t$.each(this.options, function (i, v) {\n\t\t\tif (v.doctype === doctype && v.fieldname === fieldname) {\n\t\t\t\tme.selected_doctype = doctype;\n\t\t\t\tme.selected_fieldname = fieldname;\n\t\t\t\tme.$input.val(v.label);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\tbuild_options() {\n\t\tvar me = this;\n\t\tme.table_fields = [];\n\t\tvar std_filters = $.map(frappe.model.std_fields, function (d) {\n\t\t\tvar opts = { parent: me.doctype };\n\t\t\tif (d.fieldname == \"name\") opts.options = me.doctype;\n\t\t\treturn $.extend(copy_dict(d), opts);\n\t\t});\n\n\t\t// add parenttype column\n\t\tvar doctype_obj = locals[\"DocType\"][me.doctype];\n\t\tif (doctype_obj && cint(doctype_obj.istable)) {\n\t\t\tstd_filters = std_filters.concat([\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"parent\",\n\t\t\t\t\tfieldtype: \"Data\",\n\t\t\t\t\tlabel: \"Parent\",\n\t\t\t\t\tparent: me.doctype,\n\t\t\t\t},\n\t\t\t]);\n\t\t}\n\n\t\t// blank\n\t\tif (this.with_blank) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel: \"\",\n\t\t\t\tvalue: \"\",\n\t\t\t});\n\t\t}\n\n\t\t// main table\n\t\tvar main_table_fields = std_filters.concat(frappe.meta.docfield_list[me.doctype]);\n\t\t$.each(frappe.utils.sort(main_table_fields, \"label\", \"string\"), function (i, df) {\n\t\t\tlet doctype =\n\t\t\t\tfrappe.get_meta(me.doctype).istable && me.parent_doctype\n\t\t\t\t\t? me.parent_doctype\n\t\t\t\t\t: me.doctype;\n\n\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\")) me.add_field_option(df);\n\t\t});\n\n\t\t// child tables\n\t\t$.each(me.table_fields, function (i, table_df) {\n\t\t\tif (table_df.options) {\n\t\t\t\tlet child_table_fields = [].concat(frappe.meta.docfield_list[table_df.options]);\n\n\t\t\t\tif (table_df.fieldtype === \"Table MultiSelect\") {\n\t\t\t\t\tconst link_field = frappe.meta\n\t\t\t\t\t\t.get_docfields(table_df.options)\n\t\t\t\t\t\t.find((df) => df.fieldtype === \"Link\");\n\t\t\t\t\tchild_table_fields = link_field ? [link_field] : [];\n\t\t\t\t}\n\n\t\t\t\t$.each(frappe.utils.sort(child_table_fields, \"label\", \"string\"), function (i, df) {\n\t\t\t\t\tlet doctype =\n\t\t\t\t\t\tfrappe.get_meta(me.doctype).istable && me.parent_doctype\n\t\t\t\t\t\t\t? me.parent_doctype\n\t\t\t\t\t\t\t: me.doctype;\n\n\t\t\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\t\t\tme.add_field_option(df);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_field_option(df) {\n\t\tlet me = this;\n\n\t\tif (df.fieldname == \"docstatus\" && !frappe.model.is_submittable(me.doctype)) return;\n\n\t\tif (frappe.model.table_fields.includes(df.fieldtype)) {\n\t\t\tme.table_fields.push(df);\n\t\t\treturn;\n\t\t}\n\n\t\tlet label = null;\n\t\tlet table = null;\n\n\t\tif (me.doctype && df.parent == me.doctype) {\n\t\t\tlabel = __(df.label);\n\t\t\ttable = me.doctype;\n\t\t} else {\n\t\t\tlabel = __(df.label) + \" (\" + __(df.parent) + \")\";\n\t\t\ttable = df.parent;\n\t\t}\n\n\t\tif (\n\t\t\tfrappe.model.no_value_type.indexOf(df.fieldtype) == -1 &&\n\t\t\t!(me.fields_by_name[df.parent] && me.fields_by_name[df.parent][df.fieldname])\n\t\t) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel: label,\n\t\t\t\tvalue: table + \".\" + df.fieldname,\n\t\t\t\tfieldname: df.fieldname,\n\t\t\t\tdoctype: df.parent,\n\t\t\t});\n\t\t\tif (!me.fields_by_name[df.parent]) me.fields_by_name[df.parent] = {};\n\t\t\tme.fields_by_name[df.parent][df.fieldname] = df;\n\t\t}\n\t}\n};\n", "\n\tfrappe.templates['edit_filter'] = `<div class=\"filter-box\">\n\t<div class=\"visible-xs flex justify-flex-end\">\n\t\t<span class=\"remove-filter\">\n\t\t\t{{ __(\"Remove\") }}\n\t\t</span>\n\t</div>\n\t<div class=\"list_filter row\">\n\t\t<div class=\"fieldname-select-area col-sm-4 ui-front form-group\"></div>\n\t\t<div class=\"col-sm-3 form-group\">\n\t\t\t<select class=\"condition form-control input-xs\">\n\t\t\t\t{% for condition in conditions %}\n\t\t\t\t<option value=\"{{condition[0]}}\">{{ condition[1] }}</option>\n\t\t\t\t{% endfor %}\n\t\t\t</select>\n\t\t</div>\n\t\t<div class=\"col-sm-4 form-group\">\n\t\t\t<div class=\"filter-field\"></div>\n\t\t\t<div class=\"text-muted small filter-description\"></div>\n\t\t</div>\n\t\t<div class=\"remove-filter col-sm-1 text-center hidden-xs\">\n\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t<use href=\"#icon-close\" class=\"close\"></use>\n\t\t\t</svg>\n\t\t</div>\n\t</div>\n</div>\n`;\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.Tags = class {\n\tconstructor({ parent, placeholder, tagsList, onTagAdd, onTagRemove, onTagClick, onChange }) {\n\t\tthis.tagsList = tagsList || [];\n\t\tthis.onTagAdd = onTagAdd;\n\t\tthis.onTagRemove = onTagRemove;\n\t\tthis.onTagClick = onTagClick;\n\t\tthis.onChange = onChange;\n\n\t\tthis.setup(parent, placeholder);\n\t}\n\n\tsetup(parent, placeholder) {\n\t\tthis.$ul = parent;\n\t\tthis.$input = $(`<input class=\"tags-input form-control\"></input>`);\n\n\t\tthis.$inputWrapper = this.get_list_element(this.$input);\n\t\tthis.$placeholder = this.get_list_element(\n\t\t\t$(`<span class=\"tags-placeholder text-muted\">${placeholder}</span>`)\n\t\t);\n\t\tthis.$inputWrapper.appendTo(this.$ul);\n\t\tthis.$placeholder.appendTo(this.$ul);\n\n\t\tthis.deactivate();\n\t\tthis.bind();\n\t\tthis.boot();\n\t}\n\n\tbind() {\n\t\tconst me = this;\n\t\tconst select_tag = function () {\n\t\t\tconst tagValue = frappe.utils.xss_sanitise(me.$input.val());\n\t\t\tme.addTag(tagValue);\n\t\t\tme.$input.val(\"\");\n\t\t};\n\n\t\tthis.$input.keypress((e) => {\n\t\t\tif (e.which == 13 || e.keyCode == 13) select_tag();\n\t\t});\n\t\tthis.$input.focusout(select_tag);\n\n\t\tthis.$input.on(\"blur\", () => {\n\t\t\tthis.deactivate();\n\t\t});\n\n\t\tthis.$placeholder.on(\"click\", () => {\n\t\t\tthis.activate();\n\t\t\tthis.$input.focus(); // focus only when clicked\n\t\t});\n\t}\n\n\tboot() {\n\t\tthis.addTags(this.tagsList);\n\t}\n\n\tactivate() {\n\t\tthis.$placeholder.hide();\n\t\tthis.$inputWrapper.show();\n\t}\n\n\tdeactivate() {\n\t\tthis.$inputWrapper.hide();\n\t\tthis.$placeholder.show();\n\t}\n\n\taddTag(label) {\n\t\tif (label && label !== \"\" && !this.tagsList.includes(label)) {\n\t\t\tlet $tag = this.get_tag(label);\n\t\t\tlet row = this.get_list_element($tag, \"form-tag-row\");\n\t\t\trow.insertBefore(this.$inputWrapper);\n\t\t\tthis.tagsList.push(label);\n\t\t\tthis.onTagAdd && this.onTagAdd(label);\n\t\t}\n\t}\n\n\tremoveTag(label) {\n\t\tlabel = frappe.utils.xss_sanitise(label);\n\t\tif (this.tagsList.includes(label)) {\n\t\t\tthis.tagsList.splice(this.tagsList.indexOf(label), 1);\n\t\t\tthis.onTagRemove && this.onTagRemove(label);\n\t\t}\n\t}\n\n\taddTags(labels) {\n\t\tlabels.map(this.addTag.bind(this));\n\t}\n\n\tclearTags() {\n\t\tthis.$ul.find(\".form-tag-row\").remove();\n\t\tthis.tagsList = [];\n\t}\n\n\tget_list_element($element, class_name = \"\") {\n\t\tlet $li = $(`<li class=\"${class_name}\"></li>`);\n\t\t$element.appendTo($li);\n\t\treturn $li;\n\t}\n\n\tget_tag(label) {\n\t\tlet $tag = frappe.get_data_pill(label, label, (target, pill_wrapper) => {\n\t\t\tthis.removeTag(target);\n\t\t\tpill_wrapper.closest(\".form-tag-row\").remove();\n\t\t});\n\n\t\tif (this.onTagClick) {\n\t\t\t$tag.on(\"click\", \".pill-label\", () => {\n\t\t\t\tthis.onTagClick(label);\n\t\t\t});\n\t\t}\n\n\t\treturn $tag;\n\t}\n};\n", "frappe.ui.TagEditor = class TagEditor {\n\tconstructor(opts) {\n\t\t/* docs:\n\t\tArguments\n\n\t\t- parent\n\t\t- user_tags\n\t\t- doctype\n\t\t- docname\n\t\t*/\n\t\t$.extend(this, opts);\n\n\t\tthis.setup_tags();\n\n\t\tif (!this.user_tags) {\n\t\t\tthis.user_tags = \"\";\n\t\t}\n\t\tthis.initialized = true;\n\t\tthis.refresh(this.user_tags);\n\t}\n\tsetup_tags() {\n\t\tvar me = this;\n\n\t\t// hidden form, does not have parent\n\t\tif (!this.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.wrapper = this.parent;\n\t\tif (!this.wrapper.length) return;\n\n\t\tthis.tags = new frappe.ui.Tags({\n\t\t\tparent: this.wrapper,\n\t\t\tplaceholder: __(\"Add a tag ...\"),\n\t\t\tonTagAdd: (tag) => {\n\t\t\t\tif (me.initialized && !me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags ? me.user_tags.split(\",\") : [];\n\t\t\t\t\t\t\tuser_tags.push(tag);\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTagRemove: (tag) => {\n\t\t\t\tif (!me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.remove_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags.split(\",\");\n\t\t\t\t\t\t\tuser_tags.splice(user_tags.indexOf(tag), 1);\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tthis.setup_awesomplete();\n\t\tthis.setup_complete = true;\n\t}\n\tsetup_awesomplete() {\n\t\tvar me = this;\n\t\tvar $input = this.wrapper.find(\"input.tags-input\");\n\t\tvar input = $input.get(0);\n\t\tthis.awesomplete = new Awesomplete(input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tlist: [],\n\t\t});\n\t\t$input.on(\"awesomplete-open\", function (e) {\n\t\t\t$input.attr(\"state\", \"open\");\n\t\t});\n\t\t$input.on(\"awesomplete-close\", function (e) {\n\t\t\t$input.attr(\"state\", \"closed\");\n\t\t});\n\t\t$input.on(\"input\", function (e) {\n\t\t\tvar value = e.target.value;\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.get_tags\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.frm.doctype,\n\t\t\t\t\ttxt: value.toLowerCase(),\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.awesomplete.list = r.message;\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\t$input.on(\"focus\", function (e) {\n\t\t\tif ($input.attr(\"state\") != \"open\") {\n\t\t\t\t$input.trigger(\"input\");\n\t\t\t}\n\t\t});\n\t}\n\tget_args(tag) {\n\t\treturn {\n\t\t\ttag: tag,\n\t\t\tdt: this.frm.doctype,\n\t\t\tdn: this.frm.docname,\n\t\t};\n\t}\n\trefresh(user_tags) {\n\t\tvar me = this;\n\t\tif (!this.initialized || !this.setup_complete || this.refreshing) return;\n\n\t\tme.refreshing = true;\n\t\ttry {\n\t\t\tme.tags.clearTags();\n\t\t\tif (user_tags) {\n\t\t\t\tme.user_tags = user_tags;\n\t\t\t\tme.tags.addTags(user_tags.split(\",\"));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tme.refreshing = false;\n\t\t\t// wtf bug\n\t\t\tsetTimeout(function () {\n\t\t\t\tme.refresh();\n\t\t\t}, 100);\n\t\t}\n\t\tme.refreshing = false;\n\t}\n};\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.is_liked = function (doc) {\n\tvar liked = frappe.ui.get_liked_by(doc);\n\treturn liked.indexOf(frappe.session.user) === -1 ? false : true;\n};\n\nfrappe.ui.get_liked_by = function (doc) {\n\tvar liked = doc._liked_by;\n\tif (liked) {\n\t\tliked = JSON.parse(liked);\n\t}\n\n\treturn liked || [];\n};\n\nfrappe.ui.toggle_like = function ($btn, doctype, name, callback) {\n\tvar add = $btn.hasClass(\"not-liked\") ? \"Yes\" : \"No\";\n\t// disable click\n\t$btn.css(\"pointer-events\", \"none\");\n\n\tfrappe.call({\n\t\tmethod: \"frappe.desk.like.toggle_like\",\n\t\tquiet: true,\n\t\targs: {\n\t\t\tdoctype: doctype,\n\t\t\tname: name,\n\t\t\tadd: add,\n\t\t},\n\t\tcallback: function (r) {\n\t\t\t// renable click\n\t\t\t$btn.css(\"pointer-events\", \"auto\");\n\n\t\t\tif (!r.exc) {\n\t\t\t\t// update in all local-buttons\n\t\t\t\tvar action_buttons = $(\n\t\t\t\t\t'.like-action[data-name=\"' +\n\t\t\t\t\t\tname.replace(/\"/g, '\"') +\n\t\t\t\t\t\t'\"][data-doctype=\"' +\n\t\t\t\t\t\tdoctype.replace(/\"/g, '\"') +\n\t\t\t\t\t\t'\"]'\n\t\t\t\t);\n\n\t\t\t\tif (add === \"Yes\") {\n\t\t\t\t\taction_buttons.removeClass(\"not-liked\").addClass(\"liked\");\n\t\t\t\t} else {\n\t\t\t\t\taction_buttons.addClass(\"not-liked\").removeClass(\"liked\");\n\t\t\t\t}\n\n\t\t\t\t// update in locals (form)\n\t\t\t\tvar doc = locals[doctype] && locals[doctype][name];\n\t\t\t\tif (doc) {\n\t\t\t\t\tvar liked_by = JSON.parse(doc._liked_by || \"[]\"),\n\t\t\t\t\t\tidx = liked_by.indexOf(frappe.session.user);\n\t\t\t\t\tif (add === \"Yes\") {\n\t\t\t\t\t\tif (idx === -1) liked_by.push(frappe.session.user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\tliked_by = liked_by.slice(0, idx).concat(liked_by.slice(idx + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdoc._liked_by = JSON.stringify(liked_by);\n\t\t\t\t}\n\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n};\n\nfrappe.ui.click_toggle_like = function () {\n\tvar $btn = $(this);\n\tvar $count = $btn.siblings(\".likes-count\");\n\tvar not_liked = $btn.hasClass(\"not-liked\");\n\tvar doctype = $btn.attr(\"data-doctype\");\n\tvar name = $btn.attr(\"data-name\");\n\n\tfrappe.ui.toggle_like($btn, doctype, name, function () {\n\t\tif (not_liked) {\n\t\t\t$count.text(cint($count.text()) + 1);\n\t\t} else {\n\t\t\t$count.text(cint($count.text()) - 1);\n\t\t}\n\t});\n\n\treturn false;\n};\n\nfrappe.ui.setup_like_popover = ($parent, selector, check_not_liked = true) => {\n\tif (frappe.dom.is_touchscreen()) {\n\t\treturn;\n\t}\n\n\t$parent.on(\"mouseover\", selector, function () {\n\t\tconst target_element = $(this);\n\t\ttarget_element.popover({\n\t\t\tanimation: true,\n\t\t\tplacement: \"bottom\",\n\t\t\ttrigger: \"manual\",\n\t\t\ttemplate: `<div class=\"liked-by-popover popover\">\n\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t<div class=\"popover-body popover-content\"></div>\n\t\t\t</div>`,\n\t\t\tcontent: () => {\n\t\t\t\tlet liked_by = target_element.parents(\".liked-by\").attr(\"data-liked-by\");\n\t\t\t\tliked_by = liked_by ? decodeURI(liked_by) : \"[]\";\n\t\t\t\tliked_by = JSON.parse(liked_by);\n\n\t\t\t\tconst user = frappe.session.user;\n\t\t\t\t// hack\n\t\t\t\tif (check_not_liked) {\n\t\t\t\t\tif (target_element.parents(\".liked-by\").find(\".not-liked\").length) {\n\t\t\t\t\t\tif (liked_by.indexOf(user) !== -1) {\n\t\t\t\t\t\t\tliked_by.splice(liked_by.indexOf(user), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (liked_by.indexOf(user) === -1) {\n\t\t\t\t\t\t\tliked_by.push(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!liked_by.length) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\tlet liked_by_list = $(`<ul class=\"list-unstyled\"></ul>`);\n\n\t\t\t\t// to show social profile of the user\n\t\t\t\tlet link_base = \"/app/user-profile/\";\n\n\t\t\t\tliked_by.forEach((user) => {\n\t\t\t\t\t// append user list item\n\t\t\t\t\tliked_by_list.append(`\n\t\t\t\t\t\t<li data-user=${user}>${frappe.avatar(user, \"avatar-xs\")}\n\t\t\t\t\t\t\t<span>${frappe.user.full_name(user)}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t`);\n\t\t\t\t});\n\n\t\t\t\tliked_by_list.children(\"li\").click((ev) => {\n\t\t\t\t\tlet user = ev.currentTarget.dataset.user;\n\t\t\t\t\ttarget_element.popover(\"hide\");\n\t\t\t\t\tfrappe.set_route(link_base + user);\n\t\t\t\t});\n\n\t\t\t\treturn liked_by_list;\n\t\t\t},\n\t\t\thtml: true,\n\t\t\tcontainer: \"body\",\n\t\t});\n\n\t\ttarget_element.popover(\"show\");\n\n\t\t$(\".popover\").on(\"mouseleave\", () => {\n\t\t\ttarget_element.popover(\"hide\");\n\t\t});\n\n\t\ttarget_element.on(\"mouseout\", () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!$(\".popover:hover\").length) {\n\t\t\t\t\ttarget_element.popover(\"hide\");\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n};\n", "\n\tfrappe.templates['print_template'] = `<!DOCTYPE html>\n<html lang=\"{{ lang }}\" dir=\"{{ layout_direction }}\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t<meta name=\"description\" content=\"\">\n\t<meta name=\"author\" content=\"\">\n\t<title>{{ title }}</title>\n\t<link href=\"{{ base_url }}{{ frappe.assets.bundled_asset('print.bundle.css', frappe.utils.is_rtl(lang)) }}\" rel=\"stylesheet\">\n\t<style>\n\t\t{{ print_css }}\n\t</style>\n</head>\n<body>\n\t<div class=\"print-format-gutter\">\n\t\t{% if print_settings.repeat_header_footer %}\n\t\t\t<div id=\"footer-html\" class=\"visible-pdf\">\n\t\t\t\t{% if print_settings.letter_head && print_settings.letter_head.footer %}\n\t\t\t\t\t<div class=\"letter-head-footer\">\n\t\t\t\t\t\t{{ print_settings.letter_head.footer }}\n\t\t\t\t\t</div>\n\t\t\t\t{% endif %}\n\t\t\t\t<p class=\"text-center small page-number visible-pdf\">\n\t\t\t\t\t{{ __(\"Page {0} of {1}\", [\\`<span class=\"page\"></span>\\`, \\`<span class=\"topage\"></span>\\`]) }}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t{% endif %}\n\n\t\t<div class=\"print-format {% if landscape %} landscape {% endif %}\"\n\t\t\t\t{% if columns.length > 20 %}\n\t\t\t\t\tstyle=\"font-size: 4.0pt\"\n\t\t\t\t{% endif %}\n\t\t\t>\n\t\t\t{% if print_settings.letter_head %}\n\t\t\t<div {% if print_settings.repeat_header_footer %} id=\"header-html\" class=\"hidden-pdf\" {% endif %}>\n\t\t\t\t<div class=\"letter-head\">{{ print_settings.letter_head.header }}</div>\n\t\t\t</div>\n\t\t\t{% endif %}\n\t\t\t{{ content }}\n\t\t</div>\n\t</div>\n</body>\n</html>\n`;\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.BaseList = class BaseList {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t}\n\n\tshow() {\n\t\treturn frappe.run_serially([\n\t\t\t() => this.show_skeleton(),\n\t\t\t() => this.fetch_meta(),\n\t\t\t() => this.hide_skeleton(),\n\t\t\t() => this.check_permissions(),\n\t\t\t() => this.init(),\n\t\t\t() => this.before_refresh(),\n\t\t\t() => this.refresh(),\n\t\t]);\n\t}\n\n\tinit() {\n\t\tif (this.init_promise) return this.init_promise;\n\n\t\tlet tasks = [\n\t\t\tthis.setup_defaults,\n\t\t\tthis.set_stats,\n\t\t\tthis.setup_fields,\n\t\t\t// make view\n\t\t\tthis.setup_page,\n\t\t\tthis.setup_side_bar,\n\t\t\tthis.setup_main_section,\n\t\t\tthis.setup_view,\n\t\t\tthis.setup_view_menu,\n\t\t].map((fn) => fn.bind(this));\n\n\t\tthis.init_promise = frappe.run_serially(tasks);\n\t\treturn this.init_promise;\n\t}\n\n\tsetup_defaults() {\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.page_title = this.page_title || frappe.router.doctype_layout || __(this.doctype);\n\t\tthis.meta = frappe.get_meta(this.doctype);\n\t\tthis.settings = frappe.listview_settings[this.doctype] || {};\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\n\t\tthis.start = 0;\n\t\tthis.page_length = 20;\n\t\tthis.data = [];\n\t\tthis.method = \"frappe.desk.reportview.get\";\n\n\t\tthis.can_create = frappe.model.can_create(this.doctype);\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\n\t\tthis.fields = [];\n\t\tthis.filters = [];\n\t\tthis.sort_by = this.meta.sort_field || \"modified\";\n\t\tthis.sort_order = this.meta.sort_order || \"desc\";\n\n\t\t// Setup buttons\n\t\tthis.primary_action = null;\n\t\tthis.secondary_action = null;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Refresh\"),\n\t\t\t\taction: () => this.refresh(),\n\t\t\t\tclass: \"visible-xs\",\n\t\t\t},\n\t\t];\n\t}\n\n\tget_list_view_settings() {\n\t\treturn frappe\n\t\t\t.call(\"frappe.desk.listview.get_list_settings\", {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((doc) => (this.list_view_settings = doc.message || {}));\n\t}\n\n\tasync setup_fields() {\n\t\tawait this.set_fields();\n\t\tthis.build_fields();\n\t}\n\n\tasync set_fields() {\n\t\tlet fields = [].concat(frappe.model.std_fields_list, this.meta.title_field);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\t}\n\n\tget_fields_in_list_view() {\n\t\treturn this.meta.fields.filter((df) => {\n\t\t\treturn (\n\t\t\t\t(frappe.model.is_value_type(df.fieldtype) &&\n\t\t\t\t\tdf.in_list_view &&\n\t\t\t\t\tfrappe.perm.has_perm(this.doctype, df.permlevel, \"read\")) ||\n\t\t\t\t(df.fieldtype === \"Currency\" && df.options && !df.options.includes(\":\")) ||\n\t\t\t\tdf.fieldname === \"status\"\n\t\t\t);\n\t\t});\n\t}\n\n\tbuild_fields() {\n\t\t// fill in missing doctype\n\t\tthis.fields = this.fields.map((f) => {\n\t\t\tif (typeof f === \"string\") {\n\t\t\t\tf = [f, this.doctype];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t\t// remove null or undefined values\n\t\tthis.fields = this.fields.filter(Boolean);\n\t\t//de-duplicate\n\t\tthis.fields = this.fields.uniqBy((f) => f[0] + f[1]);\n\t}\n\n\t_add_field(fieldname, doctype) {\n\t\tif (!fieldname) return;\n\n\t\tif (!doctype) doctype = this.doctype;\n\n\t\tif (typeof fieldname === \"object\") {\n\t\t\t// df is passed\n\t\t\tconst df = fieldname;\n\t\t\tfieldname = df.fieldname;\n\t\t\tdoctype = df.parent || doctype;\n\t\t}\n\n\t\tif (!this.fields) this.fields = [];\n\t\tconst is_valid_field =\n\t\t\tfrappe.model.std_fields_list.includes(fieldname) ||\n\t\t\tfrappe.meta.has_field(doctype, fieldname) ||\n\t\t\tfieldname === \"_seen\";\n\n\t\tif (!is_valid_field) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fields.push([fieldname, doctype]);\n\t}\n\n\tset_stats() {\n\t\tthis.stats = [\"_user_tags\"];\n\t\t// add workflow field (as priority)\n\t\tthis.workflow_state_fieldname = frappe.workflow.get_state_fieldname(this.doctype);\n\t\tif (this.workflow_state_fieldname) {\n\t\t\tif (!frappe.workflow.workflows[this.doctype][\"override_status\"]) {\n\t\t\t\tthis._add_field(this.workflow_state_fieldname);\n\t\t\t}\n\t\t\tthis.stats.push(this.workflow_state_fieldname);\n\t\t}\n\t}\n\n\tfetch_meta() {\n\t\treturn frappe.model.with_doctype(this.doctype);\n\t}\n\n\tshow_skeleton() {}\n\n\thide_skeleton() {}\n\n\tcheck_permissions() {\n\t\treturn true;\n\t}\n\n\tsetup_page() {\n\t\tthis.page = this.parent.page;\n\t\tthis.$page = $(this.parent);\n\t\t!this.hide_card_layout && this.page.main.addClass(\"frappe-card\");\n\t\tthis.page.page_form.removeClass(\"row\").addClass(\"flex\");\n\t\tthis.hide_page_form && this.page.page_form.hide();\n\t\tthis.hide_sidebar && this.$page.addClass(\"no-list-sidebar\");\n\t\tthis.setup_page_head();\n\t}\n\n\tsetup_page_head() {\n\t\tthis.set_title();\n\t\tthis.set_menu_items();\n\t\tthis.set_breadcrumbs();\n\t}\n\n\tset_title() {\n\t\tthis.page.set_title(this.page_title);\n\t}\n\n\tsetup_view_menu() {\n\t\t// TODO: add all icons\n\t\tconst icon_map = {\n\t\t\tImage: \"image-view\",\n\t\t\tList: \"list\",\n\t\t\tReport: \"small-file\",\n\t\t\tCalendar: \"calendar\",\n\t\t\tGantt: \"gantt\",\n\t\t\tKanban: \"kanban\",\n\t\t\tDashboard: \"dashboard\",\n\t\t\tMap: \"map\",\n\t\t};\n\n\t\tif (frappe.boot.desk_settings.view_switcher && !this.meta.force_re_route_to_default_view) {\n\t\t\t/* @preserve\n\t\t\tfor translation, don't remove\n\t\t\t__(\"List View\") __(\"Report View\") __(\"Dashboard View\") __(\"Gantt View\"),\n\t\t\t__(\"Kanban View\") __(\"Calendar View\") __(\"Image View\") __(\"Inbox View\"),\n\t\t\t__(\"Tree View\") __(\"Map View\") */\n\t\t\tthis.views_menu = this.page.add_custom_button_group(\n\t\t\t\t__(\"{0} View\", [this.view_name]),\n\t\t\t\ticon_map[this.view_name] || \"list\"\n\t\t\t);\n\t\t\tthis.views_list = new frappe.views.ListViewSelect({\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tparent: this.views_menu,\n\t\t\t\tpage: this.page,\n\t\t\t\tlist_view: this,\n\t\t\t\tsidebar: this.list_sidebar,\n\t\t\t\ticon_map: icon_map,\n\t\t\t});\n\t\t}\n\t}\n\n\tset_default_secondary_action() {\n\t\tif (this.secondary_action) {\n\t\t\tconst $secondary_action = this.page.set_secondary_action(\n\t\t\t\tthis.secondary_action.label,\n\t\t\t\tthis.secondary_action.action,\n\t\t\t\tthis.secondary_action.icon\n\t\t\t);\n\t\t\tif (!this.secondary_action.icon) {\n\t\t\t\t$secondary_action.addClass(\"hidden-xs\");\n\t\t\t} else if (!this.secondary_action.label) {\n\t\t\t\t$secondary_action.addClass(\"visible-xs\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.refresh_button = this.page.add_action_icon(\"refresh\", () => {\n\t\t\t\tthis.refresh();\n\t\t\t});\n\t\t}\n\t}\n\n\tset_menu_items() {\n\t\tthis.set_default_secondary_action();\n\n\t\tthis.menu_items &&\n\t\t\tthis.menu_items.map((item) => {\n\t\t\t\tif (item.condition && item.condition() === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst $item = this.page.add_menu_item(\n\t\t\t\t\titem.label,\n\t\t\t\t\titem.action,\n\t\t\t\t\titem.standard,\n\t\t\t\t\titem.shortcut\n\t\t\t\t);\n\t\t\t\tif (item.class) {\n\t\t\t\t\t$item && $item.addClass(item.class);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tset_breadcrumbs() {\n\t\tfrappe.breadcrumbs.add(this.meta.module, this.doctype);\n\t}\n\n\tsetup_side_bar() {\n\t\tif (this.hide_sidebar || !frappe.boot.desk_settings.list_sidebar) return;\n\t\tthis.list_sidebar = new frappe.views.ListSidebar({\n\t\t\tdoctype: this.doctype,\n\t\t\tstats: this.stats,\n\t\t\tparent: this.$page.find(\".layout-side-section\"),\n\t\t\tpage: this.page,\n\t\t\tlist_view: this,\n\t\t});\n\t}\n\n\ttoggle_side_bar(show) {\n\t\tlet show_sidebar = show || JSON.parse(localStorage.show_sidebar || \"true\");\n\t\tshow_sidebar = !show_sidebar;\n\t\tlocalStorage.show_sidebar = show_sidebar;\n\t\tthis.show_or_hide_sidebar();\n\t\t$(document.body).trigger(\"toggleListSidebar\");\n\t}\n\n\tshow_or_hide_sidebar() {\n\t\tlet show_sidebar = JSON.parse(localStorage.show_sidebar || \"true\");\n\t\t$(document.body).toggleClass(\"no-list-sidebar\", !show_sidebar);\n\t}\n\n\tsetup_main_section() {\n\t\treturn frappe.run_serially(\n\t\t\t[\n\t\t\t\tthis.setup_list_wrapper,\n\t\t\t\tthis.show_or_hide_sidebar,\n\t\t\t\tthis.setup_filter_area,\n\t\t\t\tthis.setup_sort_selector,\n\t\t\t\tthis.setup_result_area,\n\t\t\t\tthis.setup_no_result_area,\n\t\t\t\tthis.setup_freeze_area,\n\t\t\t\tthis.setup_paging_area,\n\t\t\t].map((fn) => fn.bind(this))\n\t\t);\n\t}\n\n\tsetup_list_wrapper() {\n\t\tthis.$frappe_list = $('<div class=\"frappe-list\">').appendTo(this.page.main);\n\t}\n\n\tsetup_filter_area() {\n\t\tif (this.hide_filters) return;\n\t\tthis.filter_area = new FilterArea(this);\n\n\t\tif (this.filters && this.filters.length > 0) {\n\t\t\treturn this.filter_area.set(this.filters);\n\t\t}\n\t}\n\n\tsetup_sort_selector() {\n\t\tif (this.hide_sort_selector) return;\n\t\tthis.sort_selector = new frappe.ui.SortSelector({\n\t\t\tparent: this.$filter_section,\n\t\t\tdoctype: this.doctype,\n\t\t\targs: {\n\t\t\t\tsort_by: this.sort_by,\n\t\t\t\tsort_order: this.sort_order,\n\t\t\t},\n\t\t\tonchange: this.on_sort_change.bind(this),\n\t\t});\n\t}\n\n\ton_sort_change() {\n\t\tthis.refresh();\n\t}\n\n\tsetup_result_area() {\n\t\tthis.$result = $(`<div class=\"result\">`);\n\t\tthis.$frappe_list.append(this.$result);\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $('<div class=\"freeze\"></div>').hide();\n\t\tthis.$frappe_list.append(this.$freeze);\n\t}\n\n\tget_no_result_message() {\n\t\treturn __(\"Nothing to show\");\n\t}\n\n\tsetup_paging_area() {\n\t\tconst paging_values = [20, 100, 500];\n\t\tthis.$paging_area = $(\n\t\t\t`<div class=\"list-paging-area level\">\n\t\t\t\t<div class=\"level-left\">\n\t\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t\t${paging_values\n\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t(value) => `\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-paging\"\n\t\t\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t\t\t${value}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.join(\"\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">\n\t\t\t\t\t\t${__(\"Load More\")}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$frappe_list.append(this.$paging_area);\n\n\t\t// set default paging btn active\n\t\tthis.$paging_area\n\t\t\t.find(`.btn-paging[data-value=\"${this.page_length}\"]`)\n\t\t\t.addClass(\"btn-info\");\n\n\t\tthis.$paging_area.on(\"click\", \".btn-paging, .btn-more\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\n\t\t\tif ($this.is(\".btn-paging\")) {\n\t\t\t\t// set active button\n\t\t\t\tthis.$paging_area.find(\".btn-paging\").removeClass(\"btn-info\");\n\t\t\t\t$this.addClass(\"btn-info\");\n\n\t\t\t\tthis.start = 0;\n\t\t\t\tthis.page_length = this.selected_page_count = $this.data().value;\n\t\t\t} else if ($this.is(\".btn-more\")) {\n\t\t\t\tthis.start = this.start + this.page_length;\n\t\t\t\tthis.page_length = this.selected_page_count || 20;\n\t\t\t}\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\t// convert [fieldname, Doctype] => tabDoctype.fieldname\n\t\treturn this.fields.map((f) => frappe.model.get_full_column_name(f[0], f[1]));\n\t}\n\n\tget_group_by() {\n\t\tlet name_field = this.fields && this.fields.find((f) => f[0] == \"name\");\n\t\tif (name_field) {\n\t\t\treturn frappe.model.get_full_column_name(name_field[0], name_field[1]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetup_view() {\n\t\t// for child classes\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tconst filter = this.get_filters_for_args().filter((f) => f[1] == fieldname)[0];\n\t\tif (!filter) return;\n\t\treturn (\n\t\t\t{\n\t\t\t\tlike: filter[3]?.replace(/^%?|%$/g, \"\"),\n\t\t\t\t\"not set\": null,\n\t\t\t}[filter[2]] || filter[3]\n\t\t);\n\t}\n\n\tget_filters_for_args() {\n\t\t// filters might have a fifth param called hidden,\n\t\t// we don't want to pass that server side\n\t\treturn this.filter_area ? this.filter_area.get().map((filter) => filter.slice(0, 4)) : [];\n\t}\n\n\tget_args() {\n\t\treturn {\n\t\t\tdoctype: this.doctype,\n\t\t\tfields: this.get_fields(),\n\t\t\tfilters: this.get_filters_for_args(),\n\t\t\torder_by: this.sort_selector && this.sort_selector.get_sql_string(),\n\t\t\tstart: this.start,\n\t\t\tpage_length: this.page_length,\n\t\t\tview: this.view,\n\t\t\tgroup_by: this.get_group_by(),\n\t\t};\n\t}\n\n\tget_call_args() {\n\t\tconst args = this.get_args();\n\t\treturn {\n\t\t\tmethod: this.method,\n\t\t\targs: args,\n\t\t\tfreeze: this.freeze_on_refresh || false,\n\t\t\tfreeze_message: this.freeze_message || __(\"Loading\") + \"...\",\n\t\t};\n\t}\n\n\tbefore_refresh() {\n\t\t// modify args here just before making the request\n\t\t// see list_view.js\n\t}\n\n\trefresh() {\n\t\tlet args = this.get_call_args();\n\t\tif (this.no_change(args)) {\n\t\t\t// console.log('throttled');\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.freeze(true);\n\t\t// fetch data from server\n\t\treturn frappe.call(args).then((r) => {\n\t\t\t// render\n\t\t\tthis.prepare_data(r);\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.before_render();\n\t\t\tthis.render();\n\t\t\tthis.after_render();\n\t\t\tthis.freeze(false);\n\t\t\tthis.reset_defaults();\n\t\t\tif (this.settings.refresh) {\n\t\t\t\tthis.settings.refresh(this);\n\t\t\t}\n\t\t});\n\t}\n\n\tno_change(args) {\n\t\t// returns true if arguments are same for the last 3 seconds\n\t\t// this helps in throttling if called from various sources\n\t\tif (this.last_args && JSON.stringify(args) === this.last_args) {\n\t\t\treturn true;\n\t\t}\n\t\tthis.last_args = JSON.stringify(args);\n\t\tsetTimeout(() => {\n\t\t\tthis.last_args = null;\n\t\t}, 3000);\n\t\treturn false;\n\t}\n\n\tprepare_data(r) {\n\t\tlet data = r.message || {};\n\n\t\t// extract user_info for assignments\n\t\tObject.assign(frappe.boot.user_info, data.user_info);\n\t\tdelete data.user_info;\n\n\t\tdata = !Array.isArray(data) ? frappe.utils.dict(data.keys, data.values) : data;\n\n\t\tif (this.start === 0) {\n\t\t\tthis.data = data;\n\t\t} else {\n\t\t\tthis.data = this.data.concat(data);\n\t\t}\n\n\t\tthis.data = this.data.uniqBy((d) => d.name);\n\t}\n\n\treset_defaults() {\n\t\tthis.page_length = this.page_length + this.start;\n\t\tthis.start = 0;\n\t}\n\n\tfreeze() {\n\t\t// show a freeze message while data is loading\n\t}\n\n\tbefore_render() {}\n\n\tafter_render() {}\n\n\trender() {\n\t\t// for child classes\n\t}\n\n\ton_filter_change() {\n\t\t// fired when filters are added or removed\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t\tthis.$paging_area.toggle(this.data.length > 0);\n\t\tthis.$no_result.toggle(this.data.length == 0);\n\n\t\tconst show_more = this.start + this.page_length <= this.data.length;\n\t\tthis.$paging_area.find(\".btn-more\").toggle(show_more);\n\t}\n\n\tcall_for_selected_items(method, args = {}) {\n\t\targs.names = this.get_checked_items(true);\n\n\t\tfrappe.call({\n\t\t\tmethod: method,\n\t\t\targs: args,\n\t\t\tfreeze: true,\n\t\t\tcallback: (r) => {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n};\n\nclass FilterArea {\n\tconstructor(list_view) {\n\t\tthis.list_view = list_view;\n\t\tthis.list_view.page.page_form.append(`<div class=\"standard-filter-section flex\"></div>`);\n\n\t\tconst filter_area = this.list_view.hide_page_form\n\t\t\t? this.list_view.page.custom_actions\n\t\t\t: this.list_view.page.page_form;\n\n\t\tthis.list_view.$filter_section = $('<div class=\"filter-section flex\">').appendTo(\n\t\t\tfilter_area\n\t\t);\n\n\t\tthis.$filter_list_wrapper = this.list_view.$filter_section;\n\t\tthis.trigger_refresh = true;\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tif (!this.list_view.hide_page_form) this.make_standard_filters();\n\t\tthis.make_filter_list();\n\t}\n\n\tget() {\n\t\tlet filters = this.filter_list.get_filters();\n\t\tlet standard_filters = this.get_standard_filters();\n\n\t\treturn filters.concat(standard_filters).uniqBy(JSON.stringify);\n\t}\n\n\tset(filters) {\n\t\t// use to method to set filters without triggering refresh\n\t\tthis.trigger_refresh = false;\n\t\treturn this.add(filters, false).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t\tthis.filter_list.update_filter_button();\n\t\t});\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0)) return Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => !this.exists(f));\n\n\t\t// standard filters = filters visible on list view\n\t\t// non-standard filters = filters set by filter button\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(filters);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n\n\trefresh_list_view() {\n\t\tif (this.trigger_refresh) {\n\t\t\tthis.list_view.start = 0;\n\t\t\tthis.list_view.refresh();\n\t\t\tthis.list_view.on_filter_change();\n\t\t}\n\t}\n\n\texists(f) {\n\t\tlet exists = false;\n\t\t// check in standard filters\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tif (f[2] === \"=\" && f[1] in fields_dict) {\n\t\t\tconst value = fields_dict[f[1]].get_value();\n\t\t\tif (value) {\n\t\t\t\texists = true;\n\t\t\t}\n\t\t}\n\n\t\t// check in filter area\n\t\tif (!exists) {\n\t\t\texists = this.filter_list.filter_exists(f);\n\t\t}\n\n\t\treturn exists;\n\t}\n\n\tset_standard_filter(filters) {\n\t\tif (filters.length === 0) {\n\t\t\treturn {\n\t\t\t\tnon_standard_filters: [],\n\t\t\t\tpromise: Promise.resolve(),\n\t\t\t};\n\t\t}\n\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tlet out = filters.reduce((out, filter) => {\n\t\t\t// eslint-disable-next-line\n\t\t\tconst [dt, fieldname, condition, value] = filter;\n\t\t\tout.promise = out.promise || Promise.resolve();\n\t\t\tout.non_standard_filters = out.non_standard_filters || [];\n\n\t\t\t// set in list view area if filters are present\n\t\t\t// don't set like filter on link fields (gets reset)\n\t\t\tif (\n\t\t\t\tfields_dict[fieldname] &&\n\t\t\t\t(condition === \"=\" ||\n\t\t\t\t\t(condition === \"like\" && fields_dict[fieldname]?.df?.fieldtype != \"Link\"))\n\t\t\t) {\n\t\t\t\t// standard filter\n\t\t\t\tout.promise = out.promise.then(() => fields_dict[fieldname].set_value(value));\n\t\t\t} else {\n\t\t\t\t// filter out non standard filters\n\t\t\t\tout.non_standard_filters.push(filter);\n\t\t\t}\n\t\t\treturn out;\n\t\t}, {});\n\n\t\treturn out;\n\t}\n\n\tremove_filters(filters) {\n\t\tfilters.map((f) => {\n\t\t\tthis.remove(f[1]);\n\t\t});\n\t}\n\n\tremove(fieldname) {\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tif (fieldname in fields_dict) {\n\t\t\tfields_dict[fieldname].set_value(\"\");\n\t\t}\n\n\t\tlet filter = this.filter_list.get_filter(fieldname);\n\t\tif (filter) filter.remove();\n\t\tthis.filter_list.apply();\n\t\treturn Promise.resolve();\n\t}\n\n\tclear(refresh = true) {\n\t\tif (!refresh) {\n\t\t\tthis.trigger_refresh = false;\n\t\t}\n\n\t\tthis.filter_list.clear_filters();\n\n\t\tconst promises = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tconst field = this.list_view.page.fields_dict[key];\n\t\t\tpromises.push(() => field.set_value(\"\"));\n\t\t}\n\t\treturn frappe.run_serially(promises).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t});\n\t}\n\n\tmake_standard_filters() {\n\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find(\n\t\t\t\".standard-filter-section\"\n\t\t);\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: \"ID\",\n\t\t\t\tcondition: \"like\",\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t},\n\t\t];\n\n\t\tif (this.list_view.custom_filter_configs) {\n\t\t\tthis.list_view.custom_filter_configs.forEach((config) => {\n\t\t\t\tconfig.onchange = () => this.refresh_list_view();\n\t\t\t});\n\n\t\t\tfields = fields.concat(this.list_view.custom_filter_configs);\n\t\t}\n\n\t\tconst doctype_fields = this.list_view.meta.fields;\n\t\tconst title_field = this.list_view.meta.title_field;\n\n\t\tfields = fields.concat(\n\t\t\tdoctype_fields\n\t\t\t\t.filter(\n\t\t\t\t\t(df) =>\n\t\t\t\t\t\tdf.fieldname === title_field ||\n\t\t\t\t\t\t(df.in_standard_filter && frappe.model.is_value_type(df.fieldtype))\n\t\t\t\t)\n\t\t\t\t.map((df) => {\n\t\t\t\t\tlet options = df.options;\n\t\t\t\t\tlet condition = \"=\";\n\t\t\t\t\tlet fieldtype = df.fieldtype;\n\t\t\t\t\tif (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"Text\",\n\t\t\t\t\t\t\t\"Small Text\",\n\t\t\t\t\t\t\t\"Text Editor\",\n\t\t\t\t\t\t\t\"HTML Editor\",\n\t\t\t\t\t\t\t\"Data\",\n\t\t\t\t\t\t\t\"Code\",\n\t\t\t\t\t\t\t\"Phone\",\n\t\t\t\t\t\t\t\"JSON\",\n\t\t\t\t\t\t\t\"Read Only\",\n\t\t\t\t\t\t].includes(fieldtype)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfieldtype = \"Data\";\n\t\t\t\t\t\tcondition = \"like\";\n\t\t\t\t\t}\n\t\t\t\t\tif (df.fieldtype == \"Select\" && df.options) {\n\t\t\t\t\t\toptions = df.options.split(\"\\n\");\n\t\t\t\t\t\tif (options.length > 0 && options[0] != \"\") {\n\t\t\t\t\t\t\toptions.unshift(\"\");\n\t\t\t\t\t\t\toptions = options.join(\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfieldtype: fieldtype,\n\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\toptions: options,\n\t\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\t\tcondition: condition,\n\t\t\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t\t\t\tignore_link_validation: fieldtype === \"Dynamic Link\",\n\t\t\t\t\t\tis_filter: 1,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t);\n\n\t\tfields.map((df) => {\n\t\t\tthis.list_view.page.add_field(df, this.standard_filters_wrapper);\n\t\t});\n\t}\n\n\tget_standard_filters() {\n\t\tconst filters = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tlet field = fields_dict[key];\n\t\t\tlet value = field.get_value();\n\t\t\tif (value) {\n\t\t\t\tif (field.df.condition === \"like\" && !value.includes(\"%\")) {\n\t\t\t\t\tvalue = \"%\" + value + \"%\";\n\t\t\t\t}\n\t\t\t\tfilters.push([\n\t\t\t\t\tthis.list_view.doctype,\n\t\t\t\t\tfield.df.fieldname,\n\t\t\t\t\tfield.df.condition || \"=\",\n\t\t\t\t\tvalue,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tmake_filter_list() {\n\t\t$(`<div class=\"filter-selector\">\n\t\t\t<div class=\"btn-group\">\n\t\t\t\t<button class=\"btn btn-default btn-sm filter-button\">\n\t\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t\t${frappe.utils.icon(\"filter\")}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t${__(\"Filter\")}\n\t\t\t\t\t<span>\n\t\t\t\t</button>\n\t\t\t\t<button class=\"btn btn-default btn-sm filter-x-button\" title=\"${__(\"Clear all filters\")}\">\n\t\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t\t${frappe.utils.icon(\"filter-x\")}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>`).appendTo(this.$filter_list_wrapper);\n\n\t\tthis.filter_button = this.$filter_list_wrapper.find(\".filter-button\");\n\t\tthis.filter_x_button = this.$filter_list_wrapper.find(\".filter-x-button\");\n\t\tthis.filter_list = new frappe.ui.FilterGroup({\n\t\t\tbase_list: this.list_view,\n\t\t\tparent: this.$filter_list_wrapper,\n\t\t\tdoctype: this.list_view.doctype,\n\t\t\tfilter_button: this.filter_button,\n\t\t\tfilter_x_button: this.filter_x_button,\n\t\t\tdefault_filters: [],\n\t\t\ton_change: () => this.refresh_list_view(),\n\t\t});\n\t}\n\n\tis_being_edited() {\n\t\t// returns true if user is currently editing filters\n\t\treturn (\n\t\t\tthis.filter_list &&\n\t\t\tthis.filter_list.wrapper &&\n\t\t\tthis.filter_list.wrapper.find(\".filter-box:visible\").length > 0\n\t\t);\n\t}\n}\n\n// utility function to validate view modes\nfrappe.views.view_modes = [\n\t\"List\",\n\t\"Report\",\n\t\"Dashboard\",\n\t\"Gantt\",\n\t\"Kanban\",\n\t\"Calendar\",\n\t\"Image\",\n\t\"Inbox\",\n\t\"Tree\",\n\t\"Map\",\n];\nfrappe.views.is_valid = (view_mode) => frappe.views.view_modes.includes(view_mode);\n", "export default class BulkOperations {\n\tconstructor({ doctype }) {\n\t\tif (!doctype) frappe.throw(__(\"Doctype required\"));\n\t\tthis.doctype = doctype;\n\t}\n\n\tprint(docs) {\n\t\tconst print_settings = frappe.model.get_doc(\":Print Settings\", \"Print Settings\");\n\t\tconst allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n\t\tconst is_submittable = frappe.model.is_submittable(this.doctype);\n\t\tconst allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\n\t\tconst valid_docs = docs\n\t\t\t.filter((doc) => {\n\t\t\t\treturn (\n\t\t\t\t\t!is_submittable ||\n\t\t\t\t\tdoc.docstatus === 1 ||\n\t\t\t\t\t(allow_print_for_cancelled && doc.docstatus == 2) ||\n\t\t\t\t\t(allow_print_for_draft && doc.docstatus == 0) ||\n\t\t\t\t\tfrappe.user.has_role(\"Administrator\")\n\t\t\t\t);\n\t\t\t})\n\t\t\t.map((doc) => doc.name);\n\n\t\tconst invalid_docs = docs.filter((doc) => !valid_docs.includes(doc.name));\n\n\t\tif (invalid_docs.length > 0) {\n\t\t\tfrappe.msgprint(__(\"You selected Draft or Cancelled documents\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length === 0) {\n\t\t\tfrappe.msgprint(__(\"Select atleast 1 record for printing\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Print Documents\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Letter Head\"),\n\t\t\t\t\tfieldname: \"letter_sel\",\n\t\t\t\t\tdefault: __(\"No Letterhead\"),\n\t\t\t\t\toptions: this.get_letterhead_options(),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Print Format\"),\n\t\t\t\t\tfieldname: \"print_sel\",\n\t\t\t\t\toptions: frappe.meta.get_print_formats(this.doctype),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: __(\"Page Size\"),\n\t\t\t\t\tfieldname: \"page_size\",\n\t\t\t\t\toptions: frappe.meta.get_print_sizes(),\n\t\t\t\t\tdefault: print_settings.pdf_page_size,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Float\",\n\t\t\t\t\tlabel: __(\"Page Height (in mm)\"),\n\t\t\t\t\tfieldname: \"page_height\",\n\t\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\t\tdefault: print_settings.pdf_page_height,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Float\",\n\t\t\t\t\tlabel: __(\"Page Width (in mm)\"),\n\t\t\t\t\tfieldname: \"page_width\",\n\t\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\t\tdefault: print_settings.pdf_page_width,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tdialog.set_primary_action(__(\"Print\"), (args) => {\n\t\t\tif (!args) return;\n\t\t\tconst default_print_format = frappe.get_meta(this.doctype).default_print_format;\n\t\t\tconst with_letterhead = args.letter_sel == __(\"No Letterhead\") ? 0 : 1;\n\t\t\tconst print_format = args.print_sel ? args.print_sel : default_print_format;\n\t\t\tconst json_string = JSON.stringify(valid_docs);\n\t\t\tconst letterhead = args.letter_sel;\n\n\t\t\tlet pdf_options;\n\t\t\tif (args.page_size === \"Custom\") {\n\t\t\t\tif (args.page_height === 0 || args.page_width === 0) {\n\t\t\t\t\tfrappe.throw(__(\"Page height and width cannot be zero\"));\n\t\t\t\t}\n\t\t\t\tpdf_options = JSON.stringify({\n\t\t\t\t\t\"page-height\": args.page_height,\n\t\t\t\t\t\"page-width\": args.page_width,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpdf_options = JSON.stringify({ \"page-size\": args.page_size });\n\t\t\t}\n\n\t\t\tconst w = window.open(\n\t\t\t\t\"/api/method/frappe.utils.print_format.download_multi_pdf?\" +\n\t\t\t\t\t\"doctype=\" +\n\t\t\t\t\tencodeURIComponent(this.doctype) +\n\t\t\t\t\t\"&name=\" +\n\t\t\t\t\tencodeURIComponent(json_string) +\n\t\t\t\t\t\"&format=\" +\n\t\t\t\t\tencodeURIComponent(print_format) +\n\t\t\t\t\t\"&no_letterhead=\" +\n\t\t\t\t\t(with_letterhead ? \"0\" : \"1\") +\n\t\t\t\t\t\"&letterhead=\" +\n\t\t\t\t\tencodeURIComponent(letterhead) +\n\t\t\t\t\t\"&options=\" +\n\t\t\t\t\tencodeURIComponent(pdf_options)\n\t\t\t);\n\n\t\t\tif (!w) {\n\t\t\t\tfrappe.msgprint(__(\"Please enable pop-ups\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\t}\n\n\tget_letterhead_options() {\n\t\tconst letterhead_options = [__(\"No Letterhead\")];\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Letter Head\",\n\t\t\t\tfields: [\"name\", \"is_default\"],\n\t\t\t\tlimit_page_length: 0,\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tr.message.forEach((letterhead) => {\n\t\t\t\t\t\tletterhead_options.push(letterhead.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\treturn letterhead_options;\n\t}\n\n\tdelete(docnames, done = null) {\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.desk.reportview.delete_items\",\n\t\t\t\tfreeze: true,\n\t\t\t\tfreeze_message:\n\t\t\t\t\tdocnames.length <= 10\n\t\t\t\t\t\t? __(\"Deleting {0} records...\", [docnames.length])\n\t\t\t\t\t\t: null,\n\t\t\t\targs: {\n\t\t\t\t\titems: docnames,\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t__(\"Cannot delete {0}\", [failed.map((f) => f.bold()).join(\", \")])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(\"delete\");\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tassign(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tconst assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tobj: this,\n\t\t\t\tmethod: \"frappe.desk.form.assign_to.add_multiple\",\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocname: docnames,\n\t\t\t\tbulk_assign: true,\n\t\t\t\tre_assign: true,\n\t\t\t\tcallback: done,\n\t\t\t});\n\t\t\tassign_to.dialog.clear();\n\t\t\tassign_to.dialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__(\"Select records for assignment\"));\n\t\t}\n\t}\n\n\tapply_assignment_rule(docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe\n\t\t\t\t.call(\"frappe.automation.doctype.assignment_rule.assignment_rule.bulk_apply\", {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tdocnames: docnames,\n\t\t\t\t})\n\t\t\t\t.then(() => done());\n\t\t}\n\t}\n\n\tsubmit_or_cancel(docnames, action = \"submit\", done = null) {\n\t\taction = action.toLowerCase();\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\taction: action,\n\t\t\t\t\tdocnames: docnames,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t__(\"Cannot {0} {1}\", [action, failed.map((f) => f.bold()).join(\", \")])\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(action);\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tedit(docnames, field_mappings, done) {\n\t\tlet field_options = Object.keys(field_mappings).sort();\n\t\tconst status_regex = /status/i;\n\n\t\tconst default_field = field_options.find((value) => status_regex.test(value));\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Bulk Edit\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: field_options,\n\t\t\t\t\tdefault: default_field,\n\t\t\t\t\tlabel: __(\"Field\"),\n\t\t\t\t\tfieldname: \"field\",\n\t\t\t\t\treqd: 1,\n\t\t\t\t\tonchange: () => {\n\t\t\t\t\t\tset_value_field(dialog);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Data\",\n\t\t\t\t\tlabel: __(\"Value\"),\n\t\t\t\t\tfieldname: \"value\",\n\t\t\t\t\tonchange() {\n\t\t\t\t\t\tshow_help_text();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action: ({ value }) => {\n\t\t\t\tconst fieldname = field_mappings[dialog.get_value(\"field\")].fieldname;\n\t\t\t\tdialog.disable_primary_action();\n\t\t\t\tfrappe\n\t\t\t\t\t.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\t\tdocnames: docnames,\n\t\t\t\t\t\t\taction: \"update\",\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t[fieldname]: value || null,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\tlet failed = r.message || [];\n\n\t\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\t\tdialog.enable_primary_action();\n\t\t\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t\t\t__(\"Cannot update {0}\", [\n\t\t\t\t\t\t\t\t\tfailed.map((f) => (f.bold ? f.bold() : f)).join(\", \"),\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdone();\n\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\tfrappe.show_alert(__(\"Updated successfully\"));\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __(\"Update {0} records\", [docnames.length]),\n\t\t});\n\n\t\tif (default_field) set_value_field(dialog); // to set `Value` df based on default `Field`\n\t\tshow_help_text();\n\n\t\tfunction set_value_field(dialogObj) {\n\t\t\tconst new_df = Object.assign({}, field_mappings[dialogObj.get_value(\"field\")]);\n\t\t\t/* if the field label has status in it and\n\t\t\tif it has select fieldtype with no default value then\n\t\t\tset a default value from the available option. */\n\t\t\tif (\n\t\t\t\tnew_df.label.match(status_regex) &&\n\t\t\t\tnew_df.fieldtype === \"Select\" &&\n\t\t\t\t!new_df.default\n\t\t\t) {\n\t\t\t\tlet options = [];\n\t\t\t\tif (typeof new_df.options === \"string\") {\n\t\t\t\t\toptions = new_df.options.split(\"\\n\");\n\t\t\t\t}\n\t\t\t\t//set second option as default if first option is an empty string\n\t\t\t\tnew_df.default = options[0] || options[1];\n\t\t\t}\n\t\t\tnew_df.label = __(\"Value\");\n\t\t\tnew_df.onchange = show_help_text;\n\n\t\t\tdelete new_df.depends_on;\n\t\t\tdialogObj.replace_field(\"value\", new_df);\n\t\t\tshow_help_text();\n\t\t}\n\n\t\tfunction show_help_text() {\n\t\t\tlet value = dialog.get_value(\"value\");\n\t\t\tif (value == null || value === \"\") {\n\t\t\t\tdialog.set_df_property(\n\t\t\t\t\t\"value\",\n\t\t\t\t\t\"description\",\n\t\t\t\t\t__(\"You have not entered a value. The field will be set to empty.\")\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdialog.set_df_property(\"value\", \"description\", \"\");\n\t\t\t}\n\t\t}\n\n\t\tdialog.refresh();\n\t\tdialog.show();\n\t}\n\n\tadd_tags(docnames, done) {\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add Tags\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"MultiSelectPills\",\n\t\t\t\t\tfieldname: \"tags\",\n\t\t\t\t\tlabel: __(\"Tags\"),\n\t\t\t\t\treqd: true,\n\t\t\t\t\tget_data: function (txt) {\n\t\t\t\t\t\treturn frappe.db.get_link_options(\"Tag\", txt);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet args = dialog.get_values();\n\t\t\t\tif (args && args.tags) {\n\t\t\t\t\tdialog.set_message(\"Adding Tags...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tags\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\ttags: args.tags,\n\t\t\t\t\t\t\tdt: this.doctype,\n\t\t\t\t\t\t\tdocs: docnames,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n\n\texport(doctype, docnames) {\n\t\tfrappe.require(\"data_import_tools.bundle.js\", () => {\n\t\t\tconst data_exporter = new frappe.data_import.DataExporter(\n\t\t\t\tdoctype,\n\t\t\t\t\"Insert New Records\"\n\t\t\t);\n\t\t\tdata_exporter.dialog.set_value(\"export_records\", \"by_filter\");\n\t\t\tdata_exporter.filter_group.add_filters_to_filter_group([\n\t\t\t\t[doctype, \"name\", \"in\", docnames, false],\n\t\t\t]);\n\t\t});\n\t}\n}\n", "export default class ListSettings {\n\tconstructor({ listview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw(\"DocType required\");\n\t\t}\n\n\t\tthis.listview = listview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields =\n\t\t\tthis.settings && this.settings.fields ? JSON.parse(this.settings.fields) : [];\n\t\tthis.subject_field = null;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_listview_fields(meta);\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\n\t\tlet list_view_settings = frappe.get_meta(\"List View Settings\");\n\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(me.doctype)]),\n\t\t\tfields: list_view_settings.fields,\n\t\t});\n\t\tme.dialog.set_values(me.settings);\n\t\tme.dialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tlet values = me.dialog.get_values();\n\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\",\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.list_view_settings.list_view_settings.save_listview_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\tlistview_settings: values,\n\t\t\t\t\tremoved_listview_fields: me.removed_fields || [],\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.listview.refresh_columns(r.message.meta, r.message.listview_settings);\n\t\t\t\t\tme.dialog.hide();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tme.dialog.fields_dict[\"total_fields\"].df.onchange = () => me.refresh();\n\t}\n\n\trefresh() {\n\t\tlet me = this;\n\n\t\tme.setup_fields();\n\t\tme.add_new_fields();\n\t\tme.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tlet me = this;\n\n\t\tif (!this.settings.fields) {\n\t\t\tme.update_fields();\n\t\t}\n\n\t\tif (!me.dialog.get_value(\"total_fields\")) {\n\t\t\tlet field_count = me.fields.length;\n\n\t\t\tif (field_count < 4) {\n\t\t\t\tfield_count = 4;\n\t\t\t} else if (field_count > 10) {\n\t\t\t\tfield_count = 10;\n\t\t\t}\n\n\t\t\tme.dialog.set_value(\"total_fields\", field_count);\n\t\t}\n\n\t\tme.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tfunction is_status_field(field) {\n\t\t\treturn field.fieldname === \"status_field\";\n\t\t}\n\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\t\tlet fields = ``;\n\t\tlet total_fields = me.dialog.get_values().total_fields || me.settings.total_fields;\n\n\t\tfor (let idx in me.fields) {\n\t\t\tif (idx == parseInt(total_fields)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet is_sortable = idx == 0 ? `` : `sortable`;\n\t\t\tlet show_sortable_handle = idx == 0 ? `hide` : ``;\n\t\t\tlet can_remove = idx == 0 || is_status_field(me.fields[idx]) ? `hide` : ``;\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order ${is_sortable}\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\" data-fieldname=\"${me.fields[idx].fieldname}\"\n\t\t\t\t\tdata-label=\"${me.fields[idx].label}\" data-type=\"${me.fields[idx].type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle \" + show_sortable_handle)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${me.fields[idx].label}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1 ${can_remove}\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${me.fields[idx].fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: \".sortable-handle\",\n\t\t\tdraggable: \".sortable\",\n\t\t\tonUpdate: () => {\n\t\t\t\tme.update_fields();\n\t\t\t\tme.refresh();\n\t\t\t},\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet add_new_fields = fields_html.$wrapper[0].getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => me.column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet remove_fields = fields_html.$wrapper[0].getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () =>\n\t\t\t\tme.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tremove_fields(fieldname) {\n\t\tlet me = this;\n\t\tlet existing_fields = me.fields.map((f) => f.fieldname);\n\n\t\tfor (let idx in me.fields) {\n\t\t\tlet field = me.fields[idx];\n\n\t\t\tif (field.fieldname == fieldname) {\n\t\t\t\tme.fields.splice(idx, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tme.set_removed_fields(\n\t\t\tme.get_removed_listview_fields(\n\t\t\t\tme.fields.map((f) => f.fieldname),\n\t\t\t\texisting_fields\n\t\t\t)\n\t\t);\n\t\tme.refresh();\n\t\tme.update_fields();\n\t}\n\n\tupdate_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tme.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tme.fields.push({\n\t\t\t\tfieldname: fields_order.item(idx).getAttribute(\"data-fieldname\"),\n\t\t\t\tlabel: fields_order.item(idx).getAttribute(\"data-label\"),\n\t\t\t});\n\t\t}\n\n\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\tme.dialog.get_value(\"fields\");\n\t}\n\n\tcolumn_selector() {\n\t\tlet me = this;\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(me.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Reset Fields\"),\n\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\tfieldname: \"reset_fields\",\n\t\t\t\t\tclick: () => me.reset_listview_fields(d),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: me.get_doctype_fields(\n\t\t\t\t\t\tme.meta,\n\t\t\t\t\t\tme.fields.map((f) => f.fieldname)\n\t\t\t\t\t),\n\t\t\t\t\tcolumns: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\td.set_primary_action(__(\"Save\"), () => {\n\t\t\tlet values = d.get_values().fields;\n\n\t\t\tme.set_removed_fields(\n\t\t\t\tme.get_removed_listview_fields(\n\t\t\t\t\tvalues,\n\t\t\t\t\tme.fields.map((f) => f.fieldname)\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tme.fields = [];\n\t\t\tme.set_subject_field(me.meta);\n\t\t\tme.set_status_field();\n\n\t\t\tfor (let idx in values) {\n\t\t\t\tlet value = values[idx];\n\n\t\t\t\tif (me.fields.length === parseInt(me.dialog.get_values().total_fields)) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value != me.subject_field.fieldname) {\n\t\t\t\t\tlet field = frappe.meta.get_docfield(me.doctype, value);\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tme.fields.push({\n\t\t\t\t\t\t\tlabel: field.label,\n\t\t\t\t\t\t\tfieldname: field.fieldname,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.refresh();\n\t\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\t\td.hide();\n\t\t});\n\t\td.show();\n\t}\n\n\treset_listview_fields(dialog) {\n\t\tlet me = this;\n\n\t\tfrappe\n\t\t\t.xcall(\n\t\t\t\t\"frappe.desk.doctype.list_view_settings.list_view_settings.get_default_listview_fields\",\n\t\t\t\t{\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((fields) => {\n\t\t\t\tlet field = dialog.get_field(\"fields\");\n\t\t\t\tfield.df.options = me.get_doctype_fields(me.meta, fields);\n\t\t\t\tdialog.refresh();\n\t\t\t});\n\t}\n\n\tget_listview_fields(meta) {\n\t\tlet me = this;\n\n\t\tif (!me.settings.fields) {\n\t\t\tme.set_list_view_fields(meta);\n\t\t} else {\n\t\t\tme.fields = JSON.parse(this.settings.fields);\n\t\t}\n\n\t\tme.fields.uniqBy((f) => f.fieldname);\n\t}\n\n\tset_list_view_fields(meta) {\n\t\tlet me = this;\n\n\t\tme.set_subject_field(meta);\n\t\tme.set_status_field();\n\n\t\tmeta.fields.forEach((field) => {\n\t\t\tif (\n\t\t\t\tfield.in_list_view &&\n\t\t\t\t!in_list(frappe.model.no_value_type, field.fieldtype) &&\n\t\t\t\tme.subject_field.fieldname != field.fieldname\n\t\t\t) {\n\t\t\t\tme.fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tfieldname: field.fieldname,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_subject_field(meta) {\n\t\tlet me = this;\n\n\t\tme.subject_field = {\n\t\t\tlabel: \"ID\",\n\t\t\tfieldname: \"name\",\n\t\t};\n\n\t\tif (meta.title_field) {\n\t\t\tlet field = frappe.meta.get_docfield(me.doctype, meta.title_field.trim());\n\n\t\t\tme.subject_field = {\n\t\t\t\tlabel: field.label,\n\t\t\t\tfieldname: field.fieldname,\n\t\t\t};\n\t\t}\n\n\t\tme.fields.push(me.subject_field);\n\t}\n\n\tset_status_field() {\n\t\tlet me = this;\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tme.fields.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t\tlabel: \"Status\",\n\t\t\t\tfieldname: \"status_field\",\n\t\t\t});\n\t\t}\n\t}\n\n\tget_doctype_fields(meta, fields) {\n\t\tlet multiselect_fields = [];\n\n\t\tmeta.fields.forEach((field) => {\n\t\t\tif (!in_list(frappe.model.no_value_type, field.fieldtype)) {\n\t\t\t\tmultiselect_fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: in_list(fields, field.fieldname),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn multiselect_fields;\n\t}\n\n\tget_removed_listview_fields(new_fields, existing_fields) {\n\t\tlet me = this;\n\t\tlet removed_fields = [];\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tnew_fields.push(\"status_field\");\n\t\t}\n\n\t\texisting_fields.forEach((column) => {\n\t\t\tif (!in_list(new_fields, column)) {\n\t\t\t\tremoved_fields.push(column);\n\t\t\t}\n\t\t});\n\n\t\treturn removed_fields;\n\t}\n\n\tset_removed_fields(fields) {\n\t\tlet me = this;\n\n\t\tif (me.removed_fields) {\n\t\t\tme.removed_fields = me.removed_fields.concat(fields);\n\t\t} else {\n\t\t\tme.removed_fields = fields;\n\t\t}\n\t}\n}\n", "import BulkOperations from \"./bulk_operations\";\nimport ListSettings from \"./list_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ListView = class ListView extends frappe.views.BaseList {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\n\t\tif (route.length === 2) {\n\t\t\tconst user_settings = frappe.get_user_settings(doctype);\n\t\t\tconst last_view = user_settings.last_view;\n\t\t\tfrappe.set_route(\n\t\t\t\t\"list\",\n\t\t\t\tfrappe.router.doctype_layout || doctype,\n\t\t\t\tfrappe.views.is_valid(last_view) ? last_view.toLowerCase() : \"list\"\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.show();\n\t}\n\n\thas_permissions() {\n\t\tconst can_read = frappe.perm.has_perm(this.doctype, 0, \"read\");\n\t\treturn can_read;\n\t}\n\n\tshow() {\n\t\tthis.parent.disable_scroll_to_top = true;\n\t\tsuper.show();\n\t}\n\n\tcheck_permissions() {\n\t\tif (!this.has_permissions()) {\n\t\t\tfrappe.set_route(\"\");\n\t\t\tfrappe.throw(__(\"Not permitted to view {0}\", [this.doctype]));\n\t\t}\n\t}\n\n\tshow_skeleton() {\n\t\tthis.$list_skeleton = this.parent.page.container.find(\".list-skeleton\");\n\t\tif (!this.$list_skeleton.length) {\n\t\t\tthis.$list_skeleton = $(`\n\t\t\t\t<div class=\"row list-skeleton\">\n\t\t\t\t\t<div class=\"col-lg-2\">\n\t\t\t\t\t\t<div class=\"list-skeleton-box\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col\">\n\t\t\t\t\t\t<div class=\"list-skeleton-box\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`);\n\t\t\tthis.parent.page.container.find(\".page-content\").append(this.$list_skeleton);\n\t\t}\n\t\tthis.parent.page.container.find(\".layout-main\").hide();\n\t\tthis.$list_skeleton.show();\n\t}\n\n\thide_skeleton() {\n\t\tthis.$list_skeleton && this.$list_skeleton.hide();\n\t\tthis.parent.page.container.find(\".layout-main\").show();\n\t}\n\n\tget view_name() {\n\t\treturn \"List\";\n\t}\n\n\tget view_user_settings() {\n\t\treturn this.user_settings[this.view_name] || {};\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\tthis.view = \"List\";\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || this.sort_by || \"modified\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || this.sort_order || \"desc\";\n\n\t\t// build menu items\n\t\tthis.menu_items = this.menu_items.concat(this.get_menu_items());\n\n\t\t// set filters from view_user_settings or list_settings\n\t\tif (Array.isArray(this.view_user_settings.filters)) {\n\t\t\t// Priority 1: view_user_settings\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\tif (this.view_name == \"List\") this.toggle_paging = true;\n\n\t\tthis.patch_refresh_and_load_lib();\n\t\treturn this.get_list_view_settings();\n\t}\n\n\ton_sort_change(sort_by, sort_order) {\n\t\tthis.sort_by = sort_by;\n\t\tthis.sort_order = sort_order;\n\t\tsuper.on_sort_change();\n\t}\n\n\tvalidate_filters(filters) {\n\t\tlet valid_fields = this.meta.fields.map((df) => df.fieldname);\n\t\tvalid_fields = valid_fields.concat(frappe.model.std_fields_list);\n\t\treturn filters.filter((f) => valid_fields.includes(f[1])).uniqBy((f) => f[1]);\n\t}\n\n\tsetup_page() {\n\t\tthis.parent.list_view = this;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_page_head() {\n\t\tsuper.setup_page_head();\n\t\tthis.set_primary_action();\n\t\tthis.set_actions_menu_items();\n\t}\n\n\tset_actions_menu_items() {\n\t\tthis.actions_menu_items = this.get_actions_menu_items();\n\t\tthis.workflow_action_menu_items = this.get_workflow_action_menu_items();\n\t\tthis.workflow_action_items = {};\n\n\t\tconst actions = this.actions_menu_items.concat(this.workflow_action_menu_items);\n\t\tactions.map((item) => {\n\t\t\tconst $item = this.page.add_actions_menu_item(item.label, item.action, item.standard);\n\t\t\tif (item.class) {\n\t\t\t\t$item.addClass(item.class);\n\t\t\t}\n\t\t\tif (item.is_workflow_action && $item) {\n\t\t\t\t// can be used to dynamically show or hide action\n\t\t\t\tthis.workflow_action_items[item.name] = $item;\n\t\t\t}\n\t\t});\n\t}\n\n\tshow_restricted_list_indicator_if_applicable() {\n\t\tconst match_rules_list = frappe.perm.get_match_rules(this.doctype);\n\t\tif (match_rules_list.length) {\n\t\t\tthis.restricted_list = $(\n\t\t\t\t`<button class=\"btn btn-xs restricted-button flex align-center\">\n\t\t\t\t\t${frappe.utils.icon(\"restriction\", \"xs\")}\n\t\t\t\t</button>`\n\t\t\t)\n\t\t\t\t.click(() => this.show_restrictions(match_rules_list))\n\t\t\t\t.appendTo(this.page.page_form);\n\t\t}\n\t}\n\n\tshow_restrictions(match_rules_list = []) {\n\t\tfrappe.msgprint(\n\t\t\tfrappe.render_template(\"list_view_permission_restrictions\", {\n\t\t\t\tcondition_list: match_rules_list,\n\t\t\t}),\n\t\t\t__(\"Restrictions\", null, \"Title of message showing restrictions in list view\")\n\t\t);\n\t}\n\n\tget_fields() {\n\t\treturn super\n\t\t\t.get_fields()\n\t\t\t.concat(\n\t\t\t\tObject.entries(this.link_field_title_fields || {}).map(\n\t\t\t\t\t(entry) => entry.join(\".\") + \" as \" + entry.join(\"_\")\n\t\t\t\t)\n\t\t\t);\n\t}\n\n\tasync set_fields() {\n\t\tthis.link_field_title_fields = {};\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\tthis.settings.add_fields || [],\n\t\t\tthis.meta.track_seen ? \"_seen\" : null,\n\t\t\tthis.sort_by,\n\t\t\t\"enabled\",\n\t\t\t\"disabled\",\n\t\t\t\"color\"\n\t\t);\n\n\t\tawait Promise.all(\n\t\t\tfields.map((f) => {\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\tconst df =\n\t\t\t\t\t\ttypeof f === \"string\" ? frappe.meta.get_docfield(this.doctype, f) : f;\n\t\t\t\t\tif (\n\t\t\t\t\t\tdf &&\n\t\t\t\t\t\tdf.fieldtype == \"Link\" &&\n\t\t\t\t\t\tfrappe.boot.link_title_doctypes.includes(df.options)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfrappe.model.with_doctype(df.options, () => {\n\t\t\t\t\t\t\tconst meta = frappe.get_meta(df.options);\n\t\t\t\t\t\t\tif (meta.show_title_field_in_link) {\n\t\t\t\t\t\t\t\tthis.link_field_title_fields[\n\t\t\t\t\t\t\t\t\ttypeof f === \"string\" ? f : f.fieldname\n\t\t\t\t\t\t\t\t] = meta.title_field;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._add_field(f);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._add_field(f);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\n\t\tthis.fields.forEach((f) => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (df && df.fieldtype === \"Currency\" && df.options && !df.options.includes(\":\")) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tpatch_refresh_and_load_lib() {\n\t\t// throttle refresh for 1s\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.refresh = frappe.utils.throttle(this.refresh, 1000);\n\t\tthis.load_lib = new Promise((resolve) => {\n\t\t\tif (this.required_libs) {\n\t\t\t\tfrappe.require(this.required_libs, resolve);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t\t// call refresh every 5 minutes\n\t\tconst interval = 5 * 60 * 1000;\n\t\tsetInterval(() => {\n\t\t\t// don't call if route is different\n\t\t\tif (frappe.get_route_str() === this.page_name) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}, interval);\n\t}\n\n\tset_primary_action() {\n\t\tif (this.can_create && !frappe.boot.read_only) {\n\t\t\tconst doctype_name = __(frappe.router.doctype_layout) || __(this.doctype);\n\n\t\t\t// Better style would be __(\"Add {0}\", [doctype_name], \"Primary action in list view\")\n\t\t\t// Keeping it like this to not disrupt existing translations\n\t\t\tconst label = `${__(\"Add\", null, \"Primary action in list view\")} ${doctype_name}`;\n\t\t\tthis.page.set_primary_action(\n\t\t\t\tlabel,\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settings.primary_action) {\n\t\t\t\t\t\tthis.settings.primary_action();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.make_new_doc();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t} else {\n\t\t\tthis.page.clear_primary_action();\n\t\t}\n\t}\n\n\tmake_new_doc() {\n\t\tconst doctype = this.doctype;\n\t\tconst options = {};\n\t\tthis.filter_area.get().forEach((f) => {\n\t\t\tif (f[2] === \"=\" && frappe.model.is_non_std_field(f[1])) {\n\t\t\t\toptions[f[1]] = f[3];\n\t\t\t}\n\t\t});\n\t\tfrappe.new_doc(doctype, options);\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_skeleton();\n\t\tthis.setup_events();\n\t\tthis.settings.onload && this.settings.onload(this);\n\t\tthis.show_restricted_list_indicator_if_applicable();\n\t}\n\n\trefresh_columns(meta, list_view_settings) {\n\t\tthis.meta = meta;\n\t\tthis.list_view_settings = list_view_settings;\n\n\t\tthis.setup_columns();\n\t\tthis.refresh(true);\n\t}\n\n\trefresh(refresh_header = false) {\n\t\tsuper.refresh().then(() => {\n\t\t\tthis.render_header(refresh_header);\n\t\t\tthis.update_checkbox();\n\t\t\tthis.update_url_with_filters();\n\t\t\tthis.setup_realtime_updates();\n\t\t});\n\t}\n\n\tupdate_checkbox(target) {\n\t\tif (!this.$checkbox_actions) return;\n\n\t\tlet $check_all_checkbox = this.$checkbox_actions.find(\".list-check-all\");\n\n\t\tif ($check_all_checkbox.prop(\"checked\") && target && !target.prop(\"checked\")) {\n\t\t\t$check_all_checkbox.prop(\"checked\", false);\n\t\t}\n\n\t\t$check_all_checkbox.prop(\"checked\", this.$checks.length === this.data.length);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $(\n\t\t\t`<div class=\"freeze flex justify-center align-center text-muted\">\n\t\t\t\t${__(\"Loading\")}...\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$result.append(this.$freeze);\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\n\t\tconst get_df = frappe.meta.get_docfield.bind(null, this.doctype);\n\n\t\t// 1st column: title_field or name\n\t\tif (this.meta.title_field) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: get_df(this.meta.title_field),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.columns.push({\n\t\t\ttype: \"Tag\",\n\t\t});\n\n\t\t// 2nd column: Status indicator\n\t\tif (frappe.has_indicator(this.doctype)) {\n\t\t\t// indicator\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t});\n\t\t}\n\n\t\tconst fields_in_list_view = this.get_fields_in_list_view();\n\t\t// Add rest from in_list_view docfields\n\t\tthis.columns = this.columns.concat(\n\t\t\tfields_in_list_view\n\t\t\t\t.filter((df) => {\n\t\t\t\t\tif (frappe.has_indicator(this.doctype) && df.fieldname === \"status\") {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!df.in_list_view) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn df.fieldname !== this.meta.title_field;\n\t\t\t\t})\n\t\t\t\t.map((df) => ({\n\t\t\t\t\ttype: \"Field\",\n\t\t\t\t\tdf,\n\t\t\t\t}))\n\t\t);\n\n\t\tif (this.list_view_settings.fields) {\n\t\t\tthis.columns = this.reorder_listview_fields();\n\t\t}\n\n\t\t// limit max to 8 columns if no total_fields is set in List View Settings\n\t\t// Screen with low density no of columns 4\n\t\t// Screen with medium density no of columns 6\n\t\t// Screen with high density no of columns 8\n\t\tlet total_fields = 6;\n\n\t\tif (window.innerWidth <= 1366) {\n\t\t\ttotal_fields = 4;\n\t\t} else if (window.innerWidth >= 1920) {\n\t\t\ttotal_fields = 10;\n\t\t}\n\n\t\tthis.columns = this.columns.slice(0, this.list_view_settings.total_fields || total_fields);\n\n\t\tif (\n\t\t\t!this.settings.hide_name_column &&\n\t\t\tthis.meta.title_field &&\n\t\t\tthis.meta.title_field !== \"name\"\n\t\t) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Field\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"ID\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\treorder_listview_fields() {\n\t\tlet fields_order = [];\n\t\tlet fields = JSON.parse(this.list_view_settings.fields);\n\n\t\t//title and tags field is fixed\n\t\tfields_order.push(this.columns[0]);\n\t\tfields_order.push(this.columns[1]);\n\t\tthis.columns.splice(0, 2);\n\n\t\tfor (let fld in fields) {\n\t\t\tfor (let col in this.columns) {\n\t\t\t\tlet field = fields[fld];\n\t\t\t\tlet column = this.columns[col];\n\n\t\t\t\tif (column.type == \"Status\" && field.fieldname == \"status_field\") {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (column.type == \"Field\" && field.fieldname === column.df.fieldname) {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fields_order;\n\t}\n\n\tget_documentation_link() {\n\t\tif (this.meta.documentation) {\n\t\t\treturn `<a href=\"${this.meta.documentation}\" target=\"blank\" class=\"meta-description small text-muted\">Need Help?</a>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_no_result_message() {\n\t\tlet help_link = this.get_documentation_link();\n\t\tlet filters = this.filter_area && this.filter_area.get();\n\t\tlet no_result_message =\n\t\t\tfilters && filters.length\n\t\t\t\t? __(\"No {0} found\", [__(this.doctype)])\n\t\t\t\t: __(\"You haven't created a {0} yet\", [__(this.doctype)]);\n\t\tlet new_button_label =\n\t\t\tfilters && filters.length\n\t\t\t\t? __(\n\t\t\t\t\t\t\"Create a new {0}\",\n\t\t\t\t\t\t[__(this.doctype)],\n\t\t\t\t\t\t\"Create a new document from list view\"\n\t\t\t\t  )\n\t\t\t\t: __(\n\t\t\t\t\t\t\"Create your first {0}\",\n\t\t\t\t\t\t[__(this.doctype)],\n\t\t\t\t\t\t\"Create a new document from list view\"\n\t\t\t\t  );\n\t\tlet empty_state_image =\n\t\t\tthis.settings.empty_state_image ||\n\t\t\t\"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst new_button = this.can_create\n\t\t\t? `<p><button class=\"btn btn-primary btn-sm btn-new-doc hidden-xs\">\n\t\t\t\t${new_button_label}\n\t\t\t</button> <button class=\"btn btn-primary btn-new-doc visible-xs\">\n\t\t\t\t${__(\"Create New\", null, \"Create a new document from list view\")}\n\t\t\t</button></p>`\n\t\t\t: \"\";\n\n\t\treturn `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${no_result_message}</p>\n\t\t\t${new_button}\n\t\t\t${help_link}\n\t\t</div>`;\n\t}\n\n\tfreeze() {\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_count) {\n\t\t\tthis.$result\n\t\t\t\t.find(\".list-count\")\n\t\t\t\t.html(`<span>${__(\"Refreshing\", null, \"Document count in list view\")}...</span>`);\n\t\t}\n\t}\n\n\tget_args() {\n\t\tconst args = super.get_args();\n\n\t\treturn Object.assign(args, {\n\t\t\twith_comment_count: true,\n\t\t});\n\t}\n\n\tbefore_refresh() {\n\t\tif (frappe.route_options && this.filter_area) {\n\t\t\tthis.filters = this.parse_filters_from_route_options();\n\t\t\tfrappe.route_options = null;\n\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\treturn this.filter_area\n\t\t\t\t\t.clear(false)\n\t\t\t\t\t.then(() => this.filter_area.set(this.filters));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tparse_filters_from_settings() {\n\t\treturn (this.settings.filters || []).map((f) => {\n\t\t\tif (f.length === 3) {\n\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_actions_menu_button(this.$result.find(\".list-row-check:checked\").length > 0);\n\t}\n\n\ttoggle_actions_menu_button(toggle) {\n\t\tif (toggle) {\n\t\t\tthis.page.show_actions_menu();\n\t\t\tthis.page.clear_primary_action();\n\t\t\tthis.toggle_workflow_actions();\n\t\t} else {\n\t\t\tthis.page.hide_actions_menu();\n\t\t\tthis.set_primary_action();\n\t\t}\n\t}\n\n\trender_header(refresh_header = false) {\n\t\tif (refresh_header) {\n\t\t\tthis.$result.find(\".list-row-head\").remove();\n\t\t}\n\t\tif (this.$result.find(\".list-row-head\").length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_header_html());\n\t\t}\n\t}\n\n\trender_skeleton() {\n\t\tconst $row = this.get_list_row_html_skeleton(\n\t\t\t'<div><input type=\"checkbox\" class=\"render-list-checkbox\"/></div>'\n\t\t);\n\t\tthis.$result.append($row);\n\t}\n\n\tbefore_render() {\n\t\tthis.settings.before_render && this.settings.before_render();\n\t\tfrappe.model.user_settings.save(this.doctype, \"last_view\", this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tfilters: this.filter_area && this.filter_area.get(),\n\t\t\tsort_by: this.sort_selector && this.sort_selector.sort_by,\n\t\t\tsort_order: this.sort_selector && this.sort_selector.sort_order,\n\t\t});\n\t\tthis.toggle_paging && this.$paging_area.toggle(false);\n\t}\n\n\tafter_render() {\n\t\tthis.$no_result.html(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`);\n\t\tthis.setup_new_doc_event();\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_sidebar_stats) {\n\t\t\tthis.list_sidebar && this.list_sidebar.reload_stats();\n\t\t}\n\t\tthis.toggle_paging && this.$paging_area.toggle(true);\n\t}\n\n\trender() {\n\t\tthis.render_list();\n\t\tthis.set_rows_as_checked();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\trender_list() {\n\t\t// clear rows\n\t\tthis.$result.find(\".list-row-container\").remove();\n\t\tif (this.data.length > 0) {\n\t\t\t// append rows\n\t\t\tthis.$result.append(\n\t\t\t\tthis.data\n\t\t\t\t\t.map((doc, i) => {\n\t\t\t\t\t\tdoc._idx = i;\n\t\t\t\t\t\treturn this.get_list_row_html(doc);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\")\n\t\t\t);\n\t\t}\n\t}\n\n\trender_count() {\n\t\tif (!this.list_view_settings.disable_count) {\n\t\t\tthis.get_count_str().then((str) => {\n\t\t\t\tthis.$result.find(\".list-count\").html(`<span>${str}</span>`);\n\t\t\t});\n\t\t}\n\t}\n\n\tget_header_html() {\n\t\tif (!this.columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject_field = this.columns[0].df;\n\t\tlet subject_html = `\n\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t<span class=\"level-item list-liked-by-me hidden-xs\">\n\t\t\t\t<span title=\"${__(\"Likes\")}\">${frappe.utils.icon(\"heart\", \"sm\", \"like-icon\")}</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item\">${__(subject_field.label)}</span>\n\t\t`;\n\t\tconst $columns = this.columns\n\t\t\t.map((col) => {\n\t\t\t\tlet classes = [\n\t\t\t\t\t\"list-row-col ellipsis\",\n\t\t\t\t\tcol.type == \"Subject\" ? \"list-subject level\" : \"hidden-xs\",\n\t\t\t\t\tcol.type == \"Tag\" ? \"tag-col hide\" : \"\",\n\t\t\t\t\tfrappe.model.is_numeric_field(col.df) ? \"text-right\" : \"\",\n\t\t\t\t].join(\" \");\n\n\t\t\t\treturn `\n\t\t\t\t<div class=\"${classes}\">\n\t\t\t\t\t${\n\t\t\t\t\t\tcol.type === \"Subject\"\n\t\t\t\t\t\t\t? subject_html\n\t\t\t\t\t\t\t: `\n\t\t\t\t\t\t<span>${__((col.df && col.df.label) || col.type)}</span>`\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\treturn this.get_header_html_skeleton($columns, '<span class=\"list-count\"></span>');\n\t}\n\n\tget_header_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<header class=\"level list-row-head text-muted\">\n\t\t\t\t<div class=\"level-left list-header-subject\">\n\t\t\t\t\t${left}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-left checkbox-actions\">\n\t\t\t\t\t<div class=\"level list-subject\">\n\t\t\t\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t\t\t\t<span class=\"level-item list-header-meta\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t${right}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\tget_left_html(doc) {\n\t\treturn this.columns.map((col) => this.get_column_html(col, doc)).join(\"\");\n\t}\n\n\tget_right_html(doc) {\n\t\treturn this.get_meta_html(doc);\n\t}\n\n\tget_list_row_html(doc) {\n\t\treturn this.get_list_row_html_skeleton(this.get_left_html(doc), this.get_right_html(doc));\n\t}\n\n\tget_list_row_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<div class=\"list-row-container\" tabindex=\"1\">\n\t\t\t\t<div class=\"level list-row\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_column_html(col, doc) {\n\t\tif (col.type === \"Status\") {\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col hidden-xs ellipsis\">\n\t\t\t\t\t${this.get_indicator_html(doc)}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tif (col.type === \"Tag\") {\n\t\t\tconst tags_display_class = !this.tags_shown ? \"hide\" : \"\";\n\t\t\tlet tags_html = doc._user_tags\n\t\t\t\t? this.get_tags_html(doc._user_tags, 2)\n\t\t\t\t: '<div class=\"tags-empty\">-</div>';\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col tag-col ${tags_display_class} hidden-xs ellipsis\">\n\t\t\t\t\t${tags_html}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tconst df = col.df || {};\n\t\tconst label = df.label;\n\t\tconst fieldname = df.fieldname;\n\t\tconst link_title_fieldname = this.link_field_title_fields[fieldname];\n\t\tconst value = doc[fieldname] || \"\";\n\t\tlet value_display = link_title_fieldname\n\t\t\t? doc[fieldname + \"_\" + link_title_fieldname] || value\n\t\t\t: value;\n\n\t\tlet translated_doctypes = frappe.boot?.translated_doctypes || [];\n\t\tif (in_list(translated_doctypes, df.options)) {\n\t\t\tvalue_display = __(value_display);\n\t\t}\n\n\t\tconst format = () => {\n\t\t\tif (df.fieldtype === \"Code\") {\n\t\t\t\treturn value;\n\t\t\t} else if (df.fieldtype === \"Percent\") {\n\t\t\t\treturn `<div class=\"progress\" style=\"margin: 0px;\">\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n\t\t\t\t\t\t\taria-valuenow=\"${value}\"\n\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ${Math.round(value)}%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t} else {\n\t\t\t\treturn frappe.format(value, df, null, doc);\n\t\t\t}\n\t\t};\n\n\t\tconst field_html = () => {\n\t\t\tlet html;\n\t\t\tlet _value;\n\t\t\tlet strip_html_required =\n\t\t\t\tdf.fieldtype == \"Text Editor\" ||\n\t\t\t\t(df.fetch_from && [\"Text\", \"Small Text\"].includes(df.fieldtype));\n\n\t\t\tif (strip_html_required) {\n\t\t\t\t_value = strip_html(value_display);\n\t\t\t} else {\n\t\t\t\t_value =\n\t\t\t\t\ttypeof value_display === \"string\"\n\t\t\t\t\t\t? frappe.utils.escape_html(value_display)\n\t\t\t\t\t\t: value_display;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Rating\") {\n\t\t\t\tlet out_of_ratings = df.options || 5;\n\t\t\t\t_value = _value * out_of_ratings;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Image\") {\n\t\t\t\thtml = df.options\n\t\t\t\t\t? `<img src=\"${doc[df.options]}\"\n\t\t\t\t\tstyle=\"max-height: 30px; max-width: 100%;\">`\n\t\t\t\t\t: `<div class=\"missing-image small\">\n\t\t\t\t\t\t${frappe.utils.icon(\"restriction\")}\n\t\t\t\t\t</div>`;\n\t\t\t} else if (df.fieldtype === \"Select\") {\n\t\t\t\thtml = `<span class=\"filterable indicator-pill ${frappe.utils.guess_colour(\n\t\t\t\t\t_value\n\t\t\t\t)} ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t<span class=\"ellipsis\"> ${__(_value)} </span>\n\t\t\t\t</span>`;\n\t\t\t} else if (df.fieldtype === \"Link\") {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${_value}\n\t\t\t\t</a>`;\n\t\t\t} else if (\n\t\t\t\t[\"Text Editor\", \"Text\", \"Small Text\", \"HTML Editor\", \"Markdown Editor\"].includes(\n\t\t\t\t\tdf.fieldtype\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\thtml = `<span class=\"ellipsis\">\n\t\t\t\t\t${_value}\n\t\t\t\t</span>`;\n\t\t\t} else {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${frappe.utils.escape_html(value)}\">\n\t\t\t\t\t${format()}\n\t\t\t\t</a>`;\n\t\t\t}\n\n\t\t\treturn `<span class=\"ellipsis\"\n\t\t\t\ttitle=\"${__(label)}: ${frappe.utils.escape_html(_value)}\">\n\t\t\t\t${html}\n\t\t\t</span>`;\n\t\t};\n\n\t\tconst class_map = {\n\t\t\tSubject: \"list-subject level\",\n\t\t\tField: \"hidden-xs\",\n\t\t};\n\t\tconst css_class = [\n\t\t\t\"list-row-col ellipsis\",\n\t\t\tclass_map[col.type],\n\t\t\tfrappe.model.is_numeric_field(df) ? \"text-right\" : \"\",\n\t\t].join(\" \");\n\n\t\tconst html_map = {\n\t\t\tSubject: this.get_subject_html(doc),\n\t\t\tField: field_html(),\n\t\t};\n\t\tlet column_html = html_map[col.type];\n\n\t\t// listview_setting formatter\n\t\tif (this.settings.formatters && this.settings.formatters[fieldname]) {\n\t\t\tcolumn_html = this.settings.formatters[fieldname](value, df, doc);\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"${css_class}\">\n\t\t\t\t${column_html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_tags_html(user_tags, limit, colored = false) {\n\t\tlet get_tag_html = (tag) => {\n\t\t\tlet color = \"\",\n\t\t\t\tstyle = \"\";\n\t\t\tif (tag) {\n\t\t\t\tif (colored) {\n\t\t\t\t\tcolor = frappe.get_palette(tag);\n\t\t\t\t\tstyle = `background-color: var(${color[0]}); color: var(${color[1]})`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"tag-pill ellipsis\" title=\"${tag}\" style=\"${style}\">${tag}</div>`;\n\t\t\t}\n\t\t};\n\t\treturn user_tags\n\t\t\t.split(\",\")\n\t\t\t.slice(1, limit + 1)\n\t\t\t.map(get_tag_html)\n\t\t\t.join(\"\");\n\t}\n\n\tget_meta_html(doc) {\n\t\tlet html = \"\";\n\n\t\tlet settings_button = null;\n\t\tif (this.settings.button && this.settings.button.show(doc)) {\n\t\t\tsettings_button = `\n\t\t\t\t<span class=\"list-actions\">\n\t\t\t\t\t<button class=\"btn btn-action btn-default btn-xs\"\n\t\t\t\t\t\tdata-name=\"${doc.name}\" data-idx=\"${doc._idx}\"\n\t\t\t\t\t\ttitle=\"${this.settings.button.get_description(doc)}\">\n\t\t\t\t\t\t${this.settings.button.get_label(doc)}\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t`;\n\t\t}\n\n\t\tconst modified = comment_when(doc.modified, true);\n\n\t\tlet assigned_to = `<div class=\"list-assignments\">\n\t\t\t<span class=\"avatar avatar-small\">\n\t\t\t<span class=\"avatar-empty\"></span>\n\t\t</div>`;\n\n\t\tlet assigned_users = JSON.parse(doc._assign || \"[]\");\n\t\tif (assigned_users.length) {\n\t\t\tassigned_to = `<div class=\"list-assignments\">\n\t\t\t\t\t${frappe.avatar_group(assigned_users, 3, { filterable: true })[0].outerHTML}\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tconst comment_count = `<span class=\"comment-count\">\n\t\t\t\t${frappe.utils.icon(\"small-message\")}\n\t\t\t\t${doc._comment_count > 99 ? \"99+\" : doc._comment_count || 0}\n\t\t\t</span>`;\n\n\t\thtml += `\n\t\t\t<div class=\"level-item list-row-activity hidden-xs\">\n\t\t\t\t<div class=\"hidden-md hidden-xs\">\n\t\t\t\t\t${settings_button || assigned_to}\n\t\t\t\t</div>\n\t\t\t\t${modified}\n\t\t\t\t${comment_count}\n\t\t\t</div>\n\t\t\t<div class=\"level-item visible-xs text-right\">\n\t\t\t\t${this.get_indicator_dot(doc)}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn html;\n\t}\n\n\tget_count_str() {\n\t\tlet current_count = this.data.length;\n\t\tlet count_without_children = this.data.uniqBy((d) => d.name).length;\n\n\t\treturn frappe.db\n\t\t\t.count(this.doctype, {\n\t\t\t\tfilters: this.get_filters_for_args(),\n\t\t\t})\n\t\t\t.then((total_count) => {\n\t\t\t\tthis.total_count = total_count || current_count;\n\t\t\t\tthis.count_without_children =\n\t\t\t\t\tcount_without_children !== current_count ? count_without_children : undefined;\n\t\t\t\tlet str = __(\"{0} of {1}\", [current_count, this.total_count]);\n\t\t\t\tif (this.count_without_children) {\n\t\t\t\t\tstr = __(\"{0} of {1} ({2} rows with children)\", [\n\t\t\t\t\t\tcount_without_children,\n\t\t\t\t\t\tthis.total_count,\n\t\t\t\t\t\tcurrent_count,\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t});\n\t}\n\n\tget_form_link(doc) {\n\t\tif (this.settings.get_form_link) {\n\t\t\treturn this.settings.get_form_link(doc);\n\t\t}\n\n\t\treturn `/app/${frappe.router.slug(\n\t\t\tfrappe.router.doctype_layout || this.doctype\n\t\t)}/${encodeURIComponent(cstr(doc.name))}`;\n\t}\n\n\tget_seen_class(doc) {\n\t\treturn JSON.parse(doc._seen || \"[]\").includes(frappe.session.user) ? \"\" : \"bold\";\n\t}\n\n\tget_like_html(doc) {\n\t\tconst liked_by = JSON.parse(doc._liked_by || \"[]\");\n\t\tlet heart_class = liked_by.includes(frappe.session.user) ? \"liked-by liked\" : \"not-liked\";\n\n\t\treturn `<span\n\t\t\tclass=\"like-action ${heart_class}\"\n\t\t\tdata-name=\"${doc.name}\" data-doctype=\"${this.doctype}\"\n\t\t\tdata-liked-by=\"${encodeURI(doc._liked_by) || \"[]\"}\"\n\t\t\ttitle=\"${liked_by.map((u) => frappe.user_info(u).fullname).join(\", \")}\">\n\t\t\t${frappe.utils.icon(\"heart\", \"sm\", \"like-icon\")}\n\t\t</span>\n\t\t<span class=\"likes-count\">\n\t\t\t${liked_by.length > 99 ? __(\"99\") + \"+\" : __(liked_by.length || \"\")}\n\t\t</span>`;\n\t}\n\n\tget_subject_html(doc) {\n\t\tlet subject_field = this.columns[0].df;\n\t\tlet value = doc[subject_field.fieldname];\n\t\tif (this.settings.formatters && this.settings.formatters[subject_field.fieldname]) {\n\t\t\tlet formatter = this.settings.formatters[subject_field.fieldname];\n\t\t\tvalue = formatter(value, subject_field, doc);\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = doc.name;\n\t\t}\n\t\tlet subject = strip_html(value.toString());\n\t\tlet escaped_subject = frappe.utils.escape_html(subject);\n\n\t\tconst seen = this.get_seen_class(doc);\n\n\t\tlet subject_html = `\n\t\t\t<span class=\"level-item select-like\">\n\t\t\t\t<input class=\"list-row-checkbox\" type=\"checkbox\"\n\t\t\t\t\tdata-name=\"${escape(doc.name)}\">\n\t\t\t\t<span class=\"list-row-like hidden-xs style=\"margin-bottom: 1px;\">\n\t\t\t\t\t${this.get_like_html(doc)}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item ${seen} ellipsis\" title=\"${escaped_subject}\">\n\t\t\t\t<a class=\"ellipsis\"\n\t\t\t\t\thref=\"${this.get_form_link(doc)}\"\n\t\t\t\t\ttitle=\"${escaped_subject}\"\n\t\t\t\t\tdata-doctype=\"${this.doctype}\"\n\t\t\t\t\tdata-name=\"${doc.name}\">\n\t\t\t\t\t${subject}\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t`;\n\n\t\treturn subject_html;\n\t}\n\n\tget_indicator_html(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\t// sequence is important\n\t\tconst docstatus_description = [\n\t\t\t__(\"Document is in draft state\"),\n\t\t\t__(\"Document has been submitted\"),\n\t\t\t__(\"Document has been cancelled\"),\n\t\t];\n\t\tconst title = docstatus_description[doc.docstatus || 0];\n\t\tif (indicator) {\n\t\t\treturn `<span class=\"indicator-pill ${indicator[1]} filterable ellipsis\"\n\t\t\t\tdata-filter='${indicator[2]}' title='${title}'>\n\t\t\t\t<span class=\"ellipsis\"> ${__(indicator[0])}</span>\n\t\t\t<span>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_indicator_dot(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (!indicator) return \"\";\n\t\treturn `<span class='indicator ${indicator[1]}' title='${__(indicator[0])}'></span>`;\n\t}\n\n\tget_image_url(doc) {\n\t\tlet url = doc.image ? doc.image : doc[this.meta.image_field];\n\t\t// absolute url for mobile\n\t\tif (window.cordova && !frappe.utils.is_url(url)) {\n\t\t\turl = frappe.base_url + url;\n\t\t}\n\t\treturn url || null;\n\t}\n\n\tsetup_events() {\n\t\tthis.setup_filterable();\n\t\tthis.setup_list_click();\n\t\tthis.setup_drag_click();\n\t\tthis.setup_tag_event();\n\t\tthis.setup_new_doc_event();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_action_handler();\n\t\tthis.setup_keyboard_navigation();\n\t}\n\n\tsetup_keyboard_navigation() {\n\t\tlet focus_first_row = () => {\n\t\t\tthis.$result.find(\".list-row-container:first\").focus();\n\t\t};\n\t\tlet focus_next = () => {\n\t\t\t$(document.activeElement).next().focus();\n\t\t};\n\t\tlet focus_prev = () => {\n\t\t\t$(document.activeElement).prev().focus();\n\t\t};\n\t\tlet list_row_focused = () => {\n\t\t\treturn $(document.activeElement).is(\".list-row-container\");\n\t\t};\n\t\tlet check_row = ($row) => {\n\t\t\tlet $input = $row.find(\"input[type=checkbox]\");\n\t\t\t$input.click();\n\t\t};\n\t\tlet get_list_row_if_focused = () =>\n\t\t\tlist_row_focused() ? $(document.activeElement) : null;\n\n\t\tlet is_current_page = () => this.page.wrapper.is(\":visible\");\n\t\tlet is_input_focused = () => $(document.activeElement).is(\"input\");\n\n\t\tlet handle_navigation = (direction) => {\n\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\n\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\tif ($list_row) {\n\t\t\t\tdirection === \"down\" ? focus_next() : focus_prev();\n\t\t\t} else {\n\t\t\t\tfocus_first_row();\n\t\t\t}\n\t\t};\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"down\",\n\t\t\taction: () => handle_navigation(\"down\"),\n\t\t\tdescription: __(\"Navigate list down\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"up\",\n\t\t\taction: () => handle_navigation(\"up\"),\n\t\t\tdescription: __(\"Navigate list up\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+down\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_next();\n\t\t\t},\n\t\t\tdescription: __(\n\t\t\t\t\"Select multiple list items\",\n\t\t\t\tnull,\n\t\t\t\t\"Description of a list view shortcut\"\n\t\t\t),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+up\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_prev();\n\t\t\t},\n\t\t\tdescription: __(\n\t\t\t\t\"Select multiple list items\",\n\t\t\t\tnull,\n\t\t\t\t\"Description of a list view shortcut\"\n\t\t\t),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"enter\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\t$list_row.find(\"a[data-name]\")[0].click();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Open list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"space\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\tcheck_row($list_row);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Select list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tsetup_filterable() {\n\t\t// filterable events\n\t\tthis.$result.on(\"click\", \".filterable\", (e) => {\n\t\t\tif (e.metaKey || e.ctrlKey) return;\n\t\t\te.stopPropagation();\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\tconst filters = $this.attr(\"data-filter\").split(\"|\");\n\t\t\tconst filters_to_apply = filters.map((f) => {\n\t\t\t\tf = f.split(\",\");\n\t\t\t\tif (f[2] === \"Today\") {\n\t\t\t\t\tf[2] = frappe.datetime.get_today();\n\t\t\t\t} else if (f[2] == \"User\") {\n\t\t\t\t\tf[2] = frappe.session.user;\n\t\t\t\t}\n\t\t\t\tthis.filter_area.remove(f[0]);\n\t\t\t\treturn [this.doctype, f[0], f[1], f.slice(2).join(\",\")];\n\t\t\t});\n\t\t\tthis.filter_area.add(filters_to_apply);\n\t\t});\n\t}\n\n\tsetup_list_click() {\n\t\tthis.$result.on(\"click\", \".list-row, .image-view-header, .file-header\", (e) => {\n\t\t\tconst $target = $(e.target);\n\t\t\t// tick checkbox if Ctrl/Meta key is pressed\n\t\t\tif ((e.ctrlKey || e.metaKey) && !$target.is(\"a\")) {\n\t\t\t\tconst $list_row = $(e.currentTarget);\n\t\t\t\tconst $check = $list_row.find(\".list-row-checkbox\");\n\t\t\t\t$check.prop(\"checked\", !$check.prop(\"checked\"));\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.on_row_checked();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// don't open form when checkbox, like, filterable are clicked\n\t\t\tif (\n\t\t\t\t$target.hasClass(\"filterable\") ||\n\t\t\t\t$target.hasClass(\"select-like\") ||\n\t\t\t\t$target.hasClass(\"file-select\") ||\n\t\t\t\t$target.hasClass(\"list-row-like\") ||\n\t\t\t\t$target.is(\":checkbox\")\n\t\t\t) {\n\t\t\t\te.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// link, let the event be handled via set_route\n\t\t\tif ($target.is(\"a\")) return;\n\n\t\t\t// clicked on the row, open form\n\t\t\tconst $row = $(e.currentTarget);\n\t\t\tconst link = $row.find(\".list-subject a\").get(0);\n\t\t\tif (link) {\n\t\t\t\tfrappe.set_route(link.pathname);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_drag_click() {\n\t\t/*\n\t\t\tClick on the check box in the list view and\n\t\t\tdrag through the rows to select.\n\n\t\t\tDo it again to unselect.\n\n\t\t\tIf the first click is on checked checkbox, then it will unselect rows on drag,\n\t\t\telse if it is unchecked checkbox, it will select rows on drag.\n\t\t*/\n\t\tthis.dragClick = false;\n\t\tthis.$result.on(\"mousedown\", \".list-row-checkbox\", (e) => {\n\t\t\tthis.dragClick = true;\n\t\t\tthis.check = !e.target.checked;\n\t\t});\n\t\t$(document).on(\"mouseup\", () => {\n\t\t\tthis.dragClick = false;\n\t\t});\n\t\tthis.$result.on(\"mousemove\", \".level.list-row\", (e) => {\n\t\t\tif (this.dragClick) {\n\t\t\t\tthis.check_row_on_drag(e, this.check);\n\t\t\t}\n\t\t});\n\t}\n\n\tcheck_row_on_drag(event, check = true) {\n\t\t$(event.target).find(\".list-row-checkbox\").prop(\"checked\", check);\n\t\tthis.on_row_checked();\n\t}\n\n\tsetup_action_handler() {\n\t\tthis.$result.on(\"click\", \".btn-action\", (e) => {\n\t\t\tconst $button = $(e.currentTarget);\n\t\t\tconst doc = this.data[$button.attr(\"data-idx\")];\n\t\t\tthis.settings.button.action(doc);\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tsetup_check_events() {\n\t\tthis.$result.on(\"change\", \"input[type=checkbox]\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\tif ($target.is(\".list-header-subject .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\".checkbox-actions .list-check-all\");\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t\t$check.trigger(\"change\");\n\t\t\t} else if ($target.is(\".checkbox-actions .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\".list-header-subject .list-check-all\");\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\n\t\t\t\tthis.$result.find(\".list-row-checkbox\").prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t} else if ($target.attr(\"data-parent\")) {\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(`.${$target.attr(\"data-parent\")}`)\n\t\t\t\t\t.find(\".list-row-checkbox\")\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t}\n\n\t\t\tthis.on_row_checked();\n\t\t});\n\n\t\tthis.$result.on(\"click\", \".list-row-checkbox\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\t// shift select checkboxes\n\t\t\tif (e.shiftKey && this.$checkbox_cursor && !$target.is(this.$checkbox_cursor)) {\n\t\t\t\tconst name_1 = decodeURIComponent(this.$checkbox_cursor.data().name);\n\t\t\t\tconst name_2 = decodeURIComponent($target.data().name);\n\t\t\t\tconst index_1 = this.data.findIndex((d) => d.name === name_1);\n\t\t\t\tconst index_2 = this.data.findIndex((d) => d.name === name_2);\n\t\t\t\tlet [min_index, max_index] = [index_1, index_2];\n\n\t\t\t\tif (min_index > max_index) {\n\t\t\t\t\t[min_index, max_index] = [max_index, min_index];\n\t\t\t\t}\n\n\t\t\t\tlet docnames = this.data.slice(min_index + 1, max_index).map((d) => d.name);\n\t\t\t\tconst selector = docnames\n\t\t\t\t\t.map((name) => `.list-row-checkbox[data-name=\"${encodeURIComponent(name)}\"]`)\n\t\t\t\t\t.join(\",\");\n\t\t\t\tthis.$result.find(selector).prop(\"checked\", true);\n\t\t\t}\n\n\t\t\tthis.$checkbox_cursor = $target;\n\n\t\t\tthis.update_checkbox($target);\n\t\t});\n\t}\n\n\tsetup_like() {\n\t\tthis.$result.on(\"click\", \".like-action\", frappe.ui.click_toggle_like);\n\t\tthis.$result.on(\"click\", \".list-liked-by-me\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\t$this.toggleClass(\"active\");\n\n\t\t\tif ($this.hasClass(\"active\")) {\n\t\t\t\tthis.filter_area.add(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\"_liked_by\",\n\t\t\t\t\t\"like\",\n\t\t\t\t\t\"%\" + frappe.session.user + \"%\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.filter_area.remove(\"_liked_by\");\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_new_doc_event() {\n\t\tthis.$no_result.find(\".btn-new-doc\").click(() => {\n\t\t\tif (this.settings.primary_action) {\n\t\t\t\tthis.settings.primary_action();\n\t\t\t} else {\n\t\t\t\tthis.make_new_doc();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_tag_event() {\n\t\tthis.tags_shown = false;\n\t\tthis.list_sidebar &&\n\t\t\tthis.list_sidebar.parent.on(\"click\", \".list-tag-preview\", () => {\n\t\t\t\tthis.tags_shown = !this.tags_shown;\n\t\t\t\tthis.toggle_tags();\n\t\t\t});\n\t}\n\n\tsetup_realtime_updates() {\n\t\tthis.pending_document_refreshes = [];\n\n\t\tif (this.list_view_settings?.disable_auto_refresh || this.realtime_events_setup) {\n\t\t\treturn;\n\t\t}\n\t\tfrappe.socketio.doctype_subscribe(this.doctype);\n\t\tfrappe.realtime.off(\"list_update\");\n\t\tfrappe.realtime.on(\"list_update\", (data) => {\n\t\t\tif (data?.doctype !== this.doctype) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if some bulk operation is happening by selecting list items, don't refresh\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.avoid_realtime_update()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.pending_document_refreshes.push(data);\n\t\t\tfrappe.utils.debounce(this.process_document_refreshes.bind(this), 1000)();\n\t\t});\n\t\tthis.realtime_events_setup = true;\n\t}\n\n\tdisable_realtime_updates() {\n\t\tfrappe.socketio.doctype_unsubscribe(this.doctype);\n\t\tthis.realtime_events_setup = false;\n\t}\n\n\tprocess_document_refreshes() {\n\t\tif (!this.pending_document_refreshes.length) return;\n\n\t\tconst route = frappe.get_route() || [];\n\t\tif (!cur_list || route[0] != \"List\" || cur_list.doctype != route[1]) {\n\t\t\t// wait till user is back on list view before refreshing\n\t\t\tthis.pending_document_refreshes = [];\n\t\t\tthis.disable_realtime_updates();\n\t\t\treturn;\n\t\t}\n\n\t\tconst names = this.pending_document_refreshes.map((d) => d.name);\n\t\tthis.pending_document_refreshes = this.pending_document_refreshes.filter(\n\t\t\t(d) => names.indexOf(d.name) === -1\n\t\t);\n\n\t\tif (!names.length) return;\n\n\t\t// filters to get only the doc with this name\n\t\tconst call_args = this.get_call_args();\n\t\tcall_args.args.filters.push([this.doctype, \"name\", \"in\", names]);\n\t\tcall_args.args.start = 0;\n\n\t\tfrappe.call(call_args).then(({ message }) => {\n\t\t\tif (!message) return;\n\t\t\tconst data = frappe.utils.dict(message.keys, message.values);\n\n\t\t\tif (!(data && data.length)) {\n\t\t\t\t// this doc was changed and should not be visible\n\t\t\t\t// in the listview according to filters applied\n\t\t\t\t// let's remove it manually\n\t\t\t\tthis.data = this.data.filter((d) => names.indexOf(d.name) === -1);\n\t\t\t\tthis.render_list();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.forEach((datum) => {\n\t\t\t\tconst index = this.data.findIndex((doc) => doc.name === datum.name);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\t// append new data\n\t\t\t\t\tthis.data.push(datum);\n\t\t\t\t} else {\n\t\t\t\t\t// update this data in place\n\t\t\t\t\tthis.data[index] = datum;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tconst a_value = a[this.sort_by] || \"\";\n\t\t\t\tconst b_value = b[this.sort_by] || \"\";\n\n\t\t\t\tlet return_value = 0;\n\t\t\t\tif (a_value > b_value) {\n\t\t\t\t\treturn_value = 1;\n\t\t\t\t}\n\n\t\t\t\tif (b_value > a_value) {\n\t\t\t\t\treturn_value = -1;\n\t\t\t\t}\n\n\t\t\t\tif (this.sort_order === \"desc\") {\n\t\t\t\t\treturn_value = -return_value;\n\t\t\t\t}\n\t\t\t\treturn return_value;\n\t\t\t});\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\tthis.set_rows_as_checked();\n\t\t\t}\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.render_list();\n\t\t});\n\t}\n\n\tavoid_realtime_update() {\n\t\tif (this.filter_area.is_being_edited()) {\n\t\t\treturn true;\n\t\t}\n\t\t// this is set when a bulk operation is called from a list view which might update the list view\n\t\t// this is to avoid the list view from refreshing a lot of times\n\t\t// the list view is updated once after the bulk operation is complete\n\t\tif (this.disable_list_update) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tset_rows_as_checked() {\n\t\t$.each(this.$checks, (i, el) => {\n\t\t\tlet docname = $(el).attr(\"data-name\");\n\t\t\tthis.$result.find(`.list-row-checkbox[data-name='${docname}']`).prop(\"checked\", true);\n\t\t});\n\t\tthis.on_row_checked();\n\t}\n\n\ton_row_checked() {\n\t\tthis.$list_head_subject =\n\t\t\tthis.$list_head_subject || this.$result.find(\"header .list-header-subject\");\n\t\tthis.$checkbox_actions =\n\t\t\tthis.$checkbox_actions || this.$result.find(\"header .checkbox-actions\");\n\n\t\tthis.$checks = this.$result.find(\".list-row-checkbox:checked\");\n\n\t\tthis.$list_head_subject.toggle(this.$checks.length === 0);\n\t\tthis.$checkbox_actions.toggle(this.$checks.length > 0);\n\n\t\tif (this.$checks.length === 0) {\n\t\t\tthis.$list_head_subject.find(\".list-check-all\").prop(\"checked\", false);\n\t\t} else {\n\t\t\tthis.$checkbox_actions\n\t\t\t\t.find(\".list-header-meta\")\n\t\t\t\t.html(__(\"{0} items selected\", [this.$checks.length]));\n\t\t\tthis.$checkbox_actions.show();\n\t\t\tthis.$list_head_subject.hide();\n\t\t}\n\t\tthis.update_checkbox();\n\t\tthis.toggle_actions_menu_button(this.$checks.length > 0);\n\t}\n\n\ttoggle_tags() {\n\t\tthis.$result.find(\".tag-col\").toggleClass(\"hide\");\n\t\tconst preview_label = this.tags_shown ? __(\"Hide Tags\") : __(\"Show Tags\");\n\t\tthis.list_sidebar.parent.find(\".list-tag-preview\").text(preview_label);\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst docnames = Array.from(this.$checks || []).map((check) =>\n\t\t\tcstr(unescape($(check).data().name))\n\t\t);\n\n\t\tif (only_docnames) return docnames;\n\n\t\treturn this.data.filter((d) => docnames.includes(d.name));\n\t}\n\n\tclear_checked_items() {\n\t\tthis.$checks && this.$checks.prop(\"checked\", false);\n\t\tthis.on_row_checked();\n\t}\n\n\tsave_view_user_settings(obj) {\n\t\treturn frappe.model.user_settings.save(this.doctype, this.view_name, obj);\n\t}\n\n\ton_update() {}\n\n\tupdate_url_with_filters() {\n\t\tif (frappe.get_route_str() == this.page_name && !this.report_name) {\n\t\t\t// only update URL if the route still matches current page.\n\t\t\t// do not update if current list is a \"saved report\".\n\t\t\twindow.history.replaceState(null, null, this.get_url_with_filters());\n\t\t}\n\t}\n\n\tget_url_with_filters() {\n\t\tconst query_params = this.get_filters_for_args()\n\t\t\t.map((filter) => {\n\t\t\t\tif (filter[2] === \"=\") {\n\t\t\t\t\treturn `${filter[1]}=${encodeURIComponent(filter[3])}`;\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tfilter[1],\n\t\t\t\t\t\"=\",\n\t\t\t\t\tencodeURIComponent(JSON.stringify([filter[2], filter[3]])),\n\t\t\t\t].join(\"\");\n\t\t\t})\n\t\t\t.join(\"&\");\n\n\t\tlet full_url = window.location.href.replace(window.location.search, \"\");\n\t\tif (query_params) {\n\t\t\tfull_url += \"?\" + query_params;\n\t\t}\n\t\treturn full_url;\n\t}\n\n\tget_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst items = [];\n\n\t\tif (frappe.model.can_import(doctype, null, this.meta)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Import\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"data-import\", {\n\t\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.model.can_set_user_permissions(doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"User Permissions\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"user-permission\", {\n\t\t\t\t\t\tallow: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Role Permissions Manager\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"permission-manager\", {\n\t\t\t\t\t\tdoctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tfrappe.model.can_create(\"Custom Field\") &&\n\t\t\tfrappe.model.can_create(\"Property Setter\")\n\t\t) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Customize\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tif (!this.meta) return;\n\t\t\t\t\tif (this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"doctype\", doctype);\n\t\t\t\t\t} else if (!this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"customize-form\", {\n\t\t\t\t\t\t\tdoc_type: doctype,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t\tshortcut: \"Ctrl+J\",\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: __(\"Toggle Sidebar\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.toggle_side_bar(),\n\t\t\tcondition: () => !this.hide_sidebar,\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+K\",\n\t\t});\n\n\t\tif (frappe.user.has_role(\"System Manager\") && frappe.boot.developer_mode === 1) {\n\t\t\t// edit doctype\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Edit DocType\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => frappe.set_route(\"form\", \"doctype\", doctype),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"System Manager\")) {\n\t\t\tif (this.get_view_settings) {\n\t\t\t\titems.push(this.get_view_settings());\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"List Settings\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.show_list_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_list_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew ListSettings({\n\t\t\t\tlistview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.list_view_settings,\n\t\t\t\tmeta: frappe.get_meta(this.doctype),\n\t\t\t});\n\t\t});\n\t}\n\n\tget_workflow_action_menu_items() {\n\t\tconst workflow_actions = [];\n\t\tif (frappe.model.has_workflow(this.doctype)) {\n\t\t\tconst actions = frappe.workflow.get_all_transition_actions(this.doctype);\n\t\t\tactions.forEach((action) => {\n\t\t\t\tworkflow_actions.push({\n\t\t\t\t\tlabel: __(action),\n\t\t\t\t\tname: action,\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tfrappe.xcall(\"frappe.model.workflow.bulk_workflow_approval\", {\n\t\t\t\t\t\t\tdocnames: this.get_checked_items(true),\n\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tis_workflow_action: true,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn workflow_actions;\n\t}\n\n\ttoggle_workflow_actions() {\n\t\tif (!frappe.model.has_workflow(this.doctype)) return;\n\t\tconst checked_items = this.get_checked_items();\n\t\tfrappe\n\t\t\t.xcall(\"frappe.model.workflow.get_common_transition_actions\", {\n\t\t\t\tdocs: checked_items,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((actions) => {\n\t\t\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\t\t\tthis.workflow_action_items[key].toggle(actions.includes(key));\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tget_actions_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst actions_menu_items = [];\n\t\tconst bulk_operations = new BulkOperations({ doctype: this.doctype });\n\n\t\tconst is_field_editable = (field_doc) => {\n\t\t\treturn (\n\t\t\t\tfield_doc.fieldname &&\n\t\t\t\tfrappe.model.is_value_type(field_doc) &&\n\t\t\t\tfield_doc.fieldtype !== \"Read Only\" &&\n\t\t\t\t!field_doc.hidden &&\n\t\t\t\t!field_doc.read_only &&\n\t\t\t\t!field_doc.is_virtual\n\t\t\t);\n\t\t};\n\n\t\tconst has_editable_fields = (doctype) => {\n\t\t\treturn frappe.meta\n\t\t\t\t.get_docfields(doctype)\n\t\t\t\t.some((field_doc) => is_field_editable(field_doc));\n\t\t};\n\n\t\tconst has_submit_permission = (doctype) => {\n\t\t\treturn frappe.perm.has_perm(doctype, 0, \"submit\");\n\t\t};\n\n\t\t// utility\n\t\tconst bulk_assignment = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Assign To\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.assign(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_rule = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Apply Assignment Rule\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.apply_assignment_rule(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_add_tags = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Add Tags\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.add_tags(this.get_checked_items(true), () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_printing = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Print\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => bulk_operations.print(this.get_checked_items()),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Delete\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map((docname) =>\n\t\t\t\t\t\tdocname.toString()\n\t\t\t\t\t);\n\t\t\t\t\tlet message = __(\n\t\t\t\t\t\t\"Delete {0} item permanently?\",\n\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t);\n\t\t\t\t\tif (docnames.length > 1) {\n\t\t\t\t\t\tmessage = __(\n\t\t\t\t\t\t\t\"Delete {0} items permanently?\",\n\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tfrappe.confirm(message, () => {\n\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\tbulk_operations.delete(docnames, () => {\n\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_cancel = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Cancel\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\"Cancel {0} documents?\",\n\t\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(docnames, \"cancel\", () => {\n\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_submit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Submit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\"Submit {0} documents?\",\n\t\t\t\t\t\t\t\t[docnames.length],\n\t\t\t\t\t\t\t\t\"Title of confirmation dialog\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(docnames, \"submit\", () => {\n\t\t\t\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\t\t\t\tthis.clear_checked_items();\n\t\t\t\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_edit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Edit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet field_mappings = {};\n\n\t\t\t\t\tfrappe.meta.get_docfields(doctype).forEach((field_doc) => {\n\t\t\t\t\t\tif (is_field_editable(field_doc)) {\n\t\t\t\t\t\t\tfield_mappings[field_doc.label] = Object.assign({}, field_doc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.disable_list_update = true;\n\t\t\t\t\tbulk_operations.edit(this.get_checked_items(true), field_mappings, () => {\n\t\t\t\t\t\tthis.disable_list_update = false;\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_export = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Export\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\n\t\t\t\t\tbulk_operations.export(doctype, docnames);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\t// bulk edit\n\t\tif (has_editable_fields(doctype)) {\n\t\t\tactions_menu_items.push(bulk_edit());\n\t\t}\n\n\t\tactions_menu_items.push(bulk_export());\n\n\t\t// bulk assignment\n\t\tactions_menu_items.push(bulk_assignment());\n\n\t\tactions_menu_items.push(bulk_assignment_rule());\n\n\t\tactions_menu_items.push(bulk_add_tags());\n\n\t\t// bulk printing\n\t\tif (frappe.model.can_print(doctype)) {\n\t\t\tactions_menu_items.push(bulk_printing());\n\t\t}\n\n\t\t// bulk submit\n\t\tif (\n\t\t\tfrappe.model.is_submittable(doctype) &&\n\t\t\thas_submit_permission(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_submit());\n\t\t}\n\n\t\t// bulk cancel\n\t\tif (frappe.model.can_cancel(doctype) && !frappe.model.has_workflow(doctype)) {\n\t\t\tactions_menu_items.push(bulk_cancel());\n\t\t}\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype)) {\n\t\t\tactions_menu_items.push(bulk_delete());\n\t\t}\n\n\t\treturn actions_menu_items;\n\t}\n\n\tparse_filters_from_route_options() {\n\t\tconst filters = [];\n\n\t\tfor (let field in frappe.route_options) {\n\t\t\tlet doctype = null;\n\t\t\tlet value = frappe.route_options[field];\n\n\t\t\tlet value_array;\n\t\t\tif ($.isArray(value) && value[0].startsWith(\"[\") && value[0].endsWith(\"]\")) {\n\t\t\t\tvalue_array = [];\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tvalue_array.push(JSON.parse(value[i]));\n\t\t\t\t}\n\t\t\t} else if (typeof value === \"string\" && value.startsWith(\"[\") && value.endsWith(\"]\")) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t}\n\n\t\t\t// if `Child DocType.fieldname`\n\t\t\tif (field.includes(\".\")) {\n\t\t\t\tdoctype = field.split(\".\")[0];\n\t\t\t\tfield = field.split(\".\")[1];\n\t\t\t}\n\n\t\t\t// find the table in which the key exists\n\t\t\t// for example the filter could be {\"item_code\": \"X\"}\n\t\t\t// where item_code is in the child table.\n\n\t\t\t// we can search all tables for mapping the doctype\n\t\t\tif (!doctype) {\n\t\t\t\tdoctype = frappe.meta.get_doctype_for_field(this.doctype, field);\n\t\t\t}\n\n\t\t\tif (doctype) {\n\t\t\t\tif (value_array) {\n\t\t\t\t\tfor (var j = 0; j < value_array.length; j++) {\n\t\t\t\t\t\tif ($.isArray(value_array[j])) {\n\t\t\t\t\t\t\tfilters.push([doctype, field, value_array[j][0], value_array[j][1]]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.push([doctype, field, \"=\", value_array[j]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ($.isArray(value)) {\n\t\t\t\t\tfilters.push([doctype, field, value[0], value[1]]);\n\t\t\t\t} else {\n\t\t\t\t\tfilters.push([doctype, field, \"=\", value]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n};\n\nfrappe.get_list_view = (doctype) => {\n\tlet route = `List/${doctype}/List`;\n\treturn frappe.views.list_view[route];\n};\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.views.list_view\");\n\nwindow.cur_list = null;\nfrappe.views.ListFactory = class ListFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tconst me = this;\n\t\tconst doctype = route[1];\n\n\t\t// List / Gantt / Kanban / etc\n\t\tlet view_name = frappe.utils.to_title_case(route[2] || \"List\");\n\n\t\t// File is a special view\n\t\tif (doctype == \"File\" && ![\"Report\", \"Dashboard\"].includes(view_name)) {\n\t\t\tview_name = \"File\";\n\t\t}\n\n\t\tlet view_class = frappe.views[view_name + \"View\"];\n\t\tif (!view_class) view_class = frappe.views.ListView;\n\n\t\tif (view_class && view_class.load_last_view && view_class.load_last_view()) {\n\t\t\t// view can have custom routing logic\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.provide(\"frappe.views.list_view.\" + doctype);\n\n\t\tfrappe.views.list_view[me.page_name] = new view_class({\n\t\t\tdoctype: doctype,\n\t\t\tparent: me.make_page(true, me.page_name),\n\t\t});\n\n\t\tme.set_cur_list();\n\t}\n\n\tbefore_show() {\n\t\tif (this.re_route_to_view()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.set_module_breadcrumb();\n\t}\n\n\ton_show() {\n\t\tthis.set_cur_list();\n\t\tif (cur_list) cur_list.show();\n\t}\n\n\tre_route_to_view() {\n\t\tconst doctype = this.route[1];\n\t\tconst last_route = frappe.route_history.slice(-2)[0];\n\t\tif (\n\t\t\tthis.route[0] === \"List\" &&\n\t\t\tthis.route.length === 2 &&\n\t\t\tfrappe.views.list_view[doctype] &&\n\t\t\tlast_route &&\n\t\t\tlast_route[0] === \"List\" &&\n\t\t\tlast_route[1] === doctype\n\t\t) {\n\t\t\t// last route same as this route, so going back.\n\t\t\t// this happens because /app/List/Item will redirect to /app/List/Item/List\n\t\t\t// while coming from back button, the last 2 routes will be same, so\n\t\t\t// we know user is coming in the reverse direction (via back button)\n\n\t\t\t// example:\n\t\t\t// Step 1: /app/List/Item redirects to /app/List/Item/List\n\t\t\t// Step 2: User hits \"back\" comes back to /app/List/Item\n\t\t\t// Step 3: Now we cannot send the user back to /app/List/Item/List so go back one more step\n\t\t\twindow.history.go(-1);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tset_module_breadcrumb() {\n\t\tif (frappe.route_history.length > 1) {\n\t\t\tconst prev_route = frappe.route_history[frappe.route_history.length - 2];\n\t\t\tif (prev_route[0] === \"modules\") {\n\t\t\t\tconst doctype = this.route[1],\n\t\t\t\t\tmodule = prev_route[1];\n\t\t\t\tif (frappe.module_links[module] && frappe.module_links[module].includes(doctype)) {\n\t\t\t\t\t// save the last page from the breadcrumb was accessed\n\t\t\t\t\tfrappe.breadcrumbs.set_doctype_module(doctype, module);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_cur_list() {\n\t\tcur_list = frappe.views.list_view[this.page_name];\n\t\tif (cur_list && cur_list.doctype !== this.route[1]) {\n\t\t\t// changing...\n\t\t\twindow.cur_list = null;\n\t\t}\n\t}\n};\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.ListViewSelect = class ListViewSelect {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.set_current_view();\n\t\tthis.setup_views();\n\t}\n\n\tadd_view_to_menu(view, action) {\n\t\tif (this.doctype == \"File\" && view == \"List\") {\n\t\t\tview = \"File\";\n\t\t}\n\t\tlet $el = this.page.add_custom_menu_item(\n\t\t\tthis.parent,\n\t\t\t__(view),\n\t\t\taction,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\tthis.icon_map[view] || \"list\"\n\t\t);\n\t\t$el.parent().attr(\"data-view\", view);\n\t}\n\n\tset_current_view() {\n\t\tthis.current_view = \"List\";\n\t\tconst route = frappe.get_route();\n\t\tconst view_name = frappe.utils.to_title_case(route[2] || \"\");\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(view_name)) {\n\t\t\tthis.current_view = view_name;\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\t}\n\n\tset_route(view, calendar_name) {\n\t\tconst route = [this.slug(), \"view\", view];\n\t\tif (calendar_name) route.push(calendar_name);\n\t\tfrappe.set_route(route);\n\t}\n\n\tsetup_views() {\n\t\tconst views = {\n\t\t\tList: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"list\"),\n\t\t\t},\n\t\t\tReport: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst reports = this.get_reports();\n\t\t\t\t\tlet default_action = {};\n\t\t\t\t\t// Only add action if current route is not report builder\n\t\t\t\t\tif (frappe.get_route().length > 3) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"Report Builder\"),\n\t\t\t\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Report\", reports, default_action);\n\t\t\t\t},\n\t\t\t},\n\t\t\tDashboard: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"dashboard\"),\n\t\t\t},\n\t\t\tCalendar: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"calendar\", \"default\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tthis.get_calendars().then((calendars) => {\n\t\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Calendar\", calendars);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\tGantt: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"gantt\"),\n\t\t\t},\n\t\t\tInbox: {\n\t\t\t\tcondition: this.doctype === \"Communication\" && frappe.boot.email_accounts.length,\n\t\t\t\taction: () => this.set_route(\"inbox\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst accounts = this.get_email_accounts();\n\t\t\t\t\tlet default_action;\n\t\t\t\t\tif (has_common(frappe.user_roles, [\"System Manager\", \"Administrator\"])) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t\t\t\t\taction: () => frappe.new_doc(\"Email Account\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Inbox\", accounts, default_action);\n\t\t\t\t},\n\t\t\t},\n\t\t\tImage: {\n\t\t\t\tcondition: this.list_view.meta.image_field,\n\t\t\t\taction: () => this.set_route(\"image\"),\n\t\t\t},\n\t\t\tTree: {\n\t\t\t\tcondition:\n\t\t\t\t\tfrappe.treeview_settings[this.doctype] ||\n\t\t\t\t\tfrappe.get_meta(this.doctype).is_tree,\n\t\t\t\taction: () => this.set_route(\"tree\"),\n\t\t\t},\n\t\t\tKanban: {\n\t\t\t\tcondition: this.doctype != \"File\",\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then((kanbans) =>\n\t\t\t\t\t\tthis.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\tMap: {\n\t\t\t\tcondition:\n\t\t\t\t\tthis.list_view.settings.get_coords_method ||\n\t\t\t\t\t(this.list_view.meta.fields.find((i) => i.fieldname === \"latitude\") &&\n\t\t\t\t\t\tthis.list_view.meta.fields.find((i) => i.fieldname === \"longitude\")) ||\n\t\t\t\t\tthis.list_view.meta.fields.find(\n\t\t\t\t\t\t(i) => i.fieldname === \"location\" && i.fieldtype == \"Geolocation\"\n\t\t\t\t\t),\n\t\t\t\taction: () => this.set_route(\"map\"),\n\t\t\t},\n\t\t};\n\n\t\tfrappe.views.view_modes.forEach((view) => {\n\t\t\tif (this.current_view !== view && views[view].condition) {\n\t\t\t\tthis.add_view_to_menu(view, views[view].action);\n\t\t\t}\n\n\t\t\tif (this.current_view == view) {\n\t\t\t\tviews[view].current_view_handler && views[view].current_view_handler();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_dropdown_in_sidebar(view, items, default_action) {\n\t\tif (!this.sidebar) return;\n\t\tconst views_wrapper = this.sidebar.sidebar.find(\".views-section\");\n\t\tviews_wrapper.find(\".sidebar-label\").html(__(view));\n\t\tconst $dropdown = views_wrapper.find(\".views-dropdown\");\n\n\t\tlet placeholder = __(\"Select {0}\", [__(view)]);\n\t\tlet html = ``;\n\n\t\tif (!items || !items.length) {\n\t\t\thtml = `<div class=\"empty-state\">\n\t\t\t\t\t\t${__(\"No {0} Found\", [__(view)])}\n\t\t\t\t</div>`;\n\t\t} else {\n\t\t\tconst page_name = this.get_page_name();\n\t\t\titems.map((item) => {\n\t\t\t\tif (item.name.toLowerCase() == page_name.toLowerCase()) {\n\t\t\t\t\tplaceholder = item.name;\n\t\t\t\t} else {\n\t\t\t\t\thtml += `<li><a class=\"dropdown-item\" href=\"${item.route}\">${item.name}</a></li>`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tviews_wrapper.find(\".selected-view\").html(placeholder);\n\n\t\tif (default_action) {\n\t\t\tviews_wrapper.find(\".sidebar-action a\").html(default_action.label);\n\t\t\tviews_wrapper.find(\".sidebar-action a\").click(() => default_action.action());\n\t\t}\n\n\t\t$dropdown.html(html);\n\n\t\tviews_wrapper.removeClass(\"hide\");\n\t}\n\n\tsetup_kanban_switcher(kanbans) {\n\t\tconst kanban_switcher = this.page.add_custom_button_group(\n\t\t\t__(\"Select Kanban\"),\n\t\t\tnull,\n\t\t\tthis.list_view.$filter_section\n\t\t);\n\n\t\tkanbans.map((k) => {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\tk.name,\n\t\t\t\t() => this.set_route(\"kanban\", k.name),\n\t\t\t\tfalse\n\t\t\t);\n\t\t});\n\n\t\tlet perms = this.list_view.board_perms;\n\t\tlet can_create = perms ? perms.create : true;\n\t\tif (can_create) {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\t__(\"Create New Kanban Board\"),\n\t\t\t\t() => frappe.views.KanbanView.show_kanban_dialog(this.doctype),\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t}\n\n\tget_page_name() {\n\t\treturn frappe.utils.to_title_case(frappe.get_route().slice(-1)[0] || \"\");\n\t}\n\n\tget_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tlet added = [];\n\t\tlet reports_to_add = [];\n\n\t\tlet add_reports = (reports) => {\n\t\t\treports.map((r) => {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == this.doctype) {\n\t\t\t\t\tconst report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `/app/list/${r.ref_doctype}/report`\n\t\t\t\t\t\t\t: \"/app/query-report\";\n\n\t\t\t\t\tconst route = r.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\t\t\t\t\t\treports_to_add.push({\n\t\t\t\t\t\t\tname: __(r.title || r.name),\n\t\t\t\t\t\t\troute: route,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\n\t\treturn reports_to_add;\n\t}\n\n\tsetup_kanban_boards() {\n\t\tfunction fetch_kanban_board(doctype) {\n\t\t\tfrappe.db.get_value(\n\t\t\t\t\"Kanban Board\",\n\t\t\t\t{ reference_doctype: doctype },\n\t\t\t\t\"name\",\n\t\t\t\t(board) => {\n\t\t\t\t\tif (!$.isEmptyObject(board)) {\n\t\t\t\t\t\tfrappe.set_route(\"list\", doctype, \"kanban\", board.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.views.KanbanView.show_kanban_dialog(doctype);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tconst last_opened_kanban =\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"]?.last_kanban_board;\n\t\tif (!last_opened_kanban) {\n\t\t\tfetch_kanban_board(this.doctype);\n\t\t} else {\n\t\t\tfrappe.db.exists(\"Kanban Board\", last_opened_kanban).then((exists) => {\n\t\t\t\tif (exists) {\n\t\t\t\t\tfrappe.set_route(\"list\", this.doctype, \"kanban\", last_opened_kanban);\n\t\t\t\t} else {\n\t\t\t\t\tfetch_kanban_board(this.doctype);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tget_calendars() {\n\t\tconst doctype = this.doctype;\n\t\tlet calendars = [];\n\n\t\treturn frappe.db\n\t\t\t.get_list(\"Calendar View\", {\n\t\t\t\tfilters: {\n\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((result) => {\n\t\t\t\tif (!(result && Array.isArray(result) && result.length)) return;\n\n\t\t\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\t\t\t// has standard calendar view\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: \"Default\",\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/default`,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresult.map((calendar) => {\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: calendar.name,\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/${calendar.name}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn calendars;\n\t\t\t});\n\t}\n\n\tget_email_accounts() {\n\t\tlet accounts_to_add = [];\n\t\tlet accounts = frappe.boot.email_accounts;\n\t\taccounts.forEach((account) => {\n\t\t\tlet email_account =\n\t\t\t\taccount.email_id == \"All Accounts\" ? \"All Accounts\" : account.email_account;\n\t\t\tlet route = `/app/communication/view/inbox/${email_account}`;\n\t\t\tlet display_name = [\"All Accounts\", \"Sent Mail\", \"Spam\", \"Trash\"].includes(\n\t\t\t\taccount.email_id\n\t\t\t)\n\t\t\t\t? __(account.email_id)\n\t\t\t\t: account.email_account;\n\n\t\t\taccounts_to_add.push({\n\t\t\t\tname: display_name,\n\t\t\t\troute: route,\n\t\t\t});\n\t\t});\n\n\t\treturn accounts_to_add;\n\t}\n\n\tslug() {\n\t\treturn frappe.router.slug(frappe.router.doctype_layout || this.doctype);\n\t}\n};\n", "frappe.provide(\"frappe.ui\");\n\nexport default class ListFilter {\n\tconstructor({ wrapper, doctype }) {\n\t\tObject.assign(this, arguments[0]);\n\t\tthis.can_add_global = frappe.user.has_role([\"System Manager\", \"Administrator\"]);\n\t\tthis.filters = [];\n\t\tthis.make();\n\t\tthis.bind();\n\t\tthis.refresh();\n\t}\n\n\tmake() {\n\t\t// init dom\n\t\tthis.wrapper.html(`\n\t\t\t<li class=\"input-area\"></li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"saved-filters-preview\">${__(\"Show Saved\")}</a>\n\t\t\t</li>\n\t\t\t<div class=\"saved-filters\"></div>\n\t\t`);\n\n\t\tthis.$input_area = this.wrapper.find(\".input-area\");\n\t\tthis.$list_filters = this.wrapper.find(\".list-filters\");\n\t\tthis.$saved_filters = this.wrapper.find(\".saved-filters\").hide();\n\t\tthis.$saved_filters_preview = this.wrapper.find(\".saved-filters-preview\");\n\t\tthis.saved_filters_hidden = true;\n\t\tthis.toggle_saved_filters(true);\n\n\t\tthis.filter_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tplaceholder: __(\"Filter Name\"),\n\t\t\t\tinput_class: \"input-xs\",\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\n\t\tthis.is_global_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tlabel: __(\"Is Global\"),\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\t}\n\n\tbind() {\n\t\tthis.bind_save_filter();\n\t\tthis.bind_toggle_saved_filters();\n\t\tthis.bind_click_filter();\n\t\tthis.bind_remove_filter();\n\t}\n\n\trefresh() {\n\t\tthis.get_list_filters().then(() => {\n\t\t\tthis.filters.length\n\t\t\t\t? this.$saved_filters_preview.show()\n\t\t\t\t: this.$saved_filters_preview.hide();\n\t\t\tconst html = this.filters.map((filter) => this.filter_template(filter));\n\t\t\tthis.wrapper.find(\".filter-pill\").remove();\n\t\t\tthis.$saved_filters.append(html);\n\t\t});\n\t\tthis.is_global_input.toggle(false);\n\t\tthis.filter_input.set_description(\"\");\n\t}\n\n\tfilter_template(filter) {\n\t\treturn `<div class=\"list-link filter-pill list-sidebar-button btn btn-default\" data-name=\"${\n\t\t\tfilter.name\n\t\t}\">\n\t\t\t<a class=\"ellipsis filter-name\">${filter.filter_name}</a>\n\t\t\t<a class=\"remove\">${frappe.utils.icon(\"close\")}</a>\n\t\t</div>`;\n\t}\n\n\tbind_toggle_saved_filters() {\n\t\tthis.wrapper.find(\".saved-filters-preview\").click(() => {\n\t\t\tthis.toggle_saved_filters(this.saved_filters_hidden);\n\t\t});\n\t}\n\n\ttoggle_saved_filters(show) {\n\t\tthis.$saved_filters.toggle(show);\n\t\tconst label = show ? __(\"Hide Saved\") : __(\"Show Saved\");\n\t\tthis.wrapper.find(\".saved-filters-preview\").text(label);\n\t\tthis.saved_filters_hidden = !this.saved_filters_hidden;\n\t}\n\n\tbind_click_filter() {\n\t\tthis.wrapper.on(\"click\", \".filter-pill .filter-name\", (e) => {\n\t\t\tlet $filter = $(e.currentTarget).parent(\".filter-pill\");\n\t\t\tthis.set_applied_filter($filter);\n\t\t\tconst name = $filter.attr(\"data-name\");\n\t\t\tthis.list_view.filter_area.clear().then(() => {\n\t\t\t\tthis.list_view.filter_area.add(this.get_filters_values(name));\n\t\t\t});\n\t\t});\n\t}\n\n\tbind_remove_filter() {\n\t\tthis.wrapper.on(\"click\", \".filter-pill .remove\", (e) => {\n\t\t\tconst $li = $(e.currentTarget).closest(\".filter-pill\");\n\t\t\tconst filter_label = $li.text().trim();\n\n\t\t\tfrappe.confirm(\n\t\t\t\t__(\"Are you sure you want to remove the {0} filter?\", [filter_label.bold()]),\n\t\t\t\t() => {\n\t\t\t\t\tconst name = $li.attr(\"data-name\");\n\t\t\t\t\tconst applied_filters = this.get_filters_values(name);\n\t\t\t\t\t$li.remove();\n\t\t\t\t\tthis.remove_filter(name).then(() => this.refresh());\n\t\t\t\t\tthis.list_view.filter_area.remove_filters(applied_filters);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tbind_save_filter() {\n\t\tthis.filter_input.$input.keydown(\n\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\tconst value = this.filter_input.get_value();\n\t\t\t\tconst has_value = Boolean(value);\n\n\t\t\t\tif (e.which === frappe.ui.keyCode[\"ENTER\"]) {\n\t\t\t\t\tif (!has_value || this.filter_name_exists(value)) return;\n\n\t\t\t\t\tthis.filter_input.set_value(\"\");\n\t\t\t\t\tthis.save_filter(value).then(() => this.refresh());\n\t\t\t\t\tthis.toggle_saved_filters(true);\n\t\t\t\t} else {\n\t\t\t\t\tlet help_text = __(\"Press Enter to save\");\n\n\t\t\t\t\tif (this.filter_name_exists(value)) {\n\t\t\t\t\t\thelp_text = __(\"Duplicate Filter Name\");\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.filter_input.set_description(has_value ? help_text : \"\");\n\n\t\t\t\t\tif (this.can_add_global) {\n\t\t\t\t\t\tthis.is_global_input.toggle(has_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 300)\n\t\t);\n\t}\n\n\tsave_filter(filter_name) {\n\t\treturn frappe.db.insert({\n\t\t\tdoctype: \"List Filter\",\n\t\t\treference_doctype: this.list_view.doctype,\n\t\t\tfilter_name,\n\t\t\tfor_user: this.is_global_input.get_value() ? \"\" : frappe.session.user,\n\t\t\tfilters: JSON.stringify(this.get_current_filters()),\n\t\t});\n\t}\n\n\tremove_filter(name) {\n\t\tif (!name) return;\n\t\treturn frappe.db.delete_doc(\"List Filter\", name);\n\t}\n\n\tget_filters_values(name) {\n\t\tconst filter = this.filters.find((filter) => filter.name === name);\n\t\treturn JSON.parse(filter.filters || \"[]\");\n\t}\n\n\tget_current_filters() {\n\t\treturn this.list_view.filter_area.get();\n\t}\n\n\tfilter_name_exists(filter_name) {\n\t\treturn (this.filters || []).find((f) => f.filter_name === filter_name);\n\t}\n\n\tget_list_filters() {\n\t\tif (frappe.session.user === \"Guest\") return Promise.resolve();\n\t\treturn frappe.db\n\t\t\t.get_list(\"List Filter\", {\n\t\t\t\tfields: [\"name\", \"filter_name\", \"for_user\", \"filters\"],\n\t\t\t\tfilters: { reference_doctype: this.list_view.doctype },\n\t\t\t\tor_filters: [\n\t\t\t\t\t[\"for_user\", \"=\", frappe.session.user],\n\t\t\t\t\t[\"for_user\", \"=\", \"\"],\n\t\t\t\t],\n\t\t\t})\n\t\t\t.then((filters) => {\n\t\t\t\tthis.filters = filters || [];\n\t\t\t});\n\t}\n\n\tset_applied_filter($filter) {\n\t\tthis.$saved_filters\n\t\t\t.find(\".btn-primary-light\")\n\t\t\t.toggleClass(\"btn-primary-light btn-default\");\n\t\t$filter.toggleClass(\"btn-default btn-primary-light\");\n\t}\n}\n", "// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nimport ListFilter from \"./list_filter\";\nfrappe.provide(\"frappe.views\");\n\n// opts:\n// stats = list of fields\n// doctype\n// parent\n\nfrappe.views.ListSidebar = class ListSidebar {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tvar sidebar_content = frappe.render_template(\"list_sidebar\", { doctype: this.doctype });\n\n\t\tthis.sidebar = $('<div class=\"list-sidebar overlay-sidebar hidden-xs hidden-sm\"></div>')\n\t\t\t.html(sidebar_content)\n\t\t\t.appendTo(this.page.sidebar.empty());\n\n\t\tthis.setup_list_filter();\n\t\tthis.setup_list_group_by();\n\n\t\t// do not remove\n\t\t// used to trigger custom scripts\n\t\t$(document).trigger(\"list_sidebar_setup\");\n\n\t\tif (\n\t\t\tthis.list_view.list_view_settings &&\n\t\t\tthis.list_view.list_view_settings.disable_sidebar_stats\n\t\t) {\n\t\t\tthis.sidebar.find(\".list-tags\").remove();\n\t\t} else {\n\t\t\tthis.sidebar.find(\".list-stats\").on(\"click\", (e) => {\n\t\t\t\tthis.reload_stats();\n\t\t\t});\n\t\t}\n\n\t\tthis.add_insights_banner();\n\t}\n\n\tsetup_views() {\n\t\tvar show_list_link = false;\n\n\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Calendar\"]').removeClass(\"hide\");\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Gantt\"]').removeClass(\"hide\");\n\t\t\tshow_list_link = true;\n\t\t}\n\t\t//show link for kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"]').removeClass(\"hide\");\n\t\tif (this.doctype === \"Communication\" && frappe.boot.email_accounts.length) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Inbox\"]').removeClass(\"hide\");\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (frappe.treeview_settings[this.doctype] || frappe.get_meta(this.doctype).is_tree) {\n\t\t\tthis.sidebar.find(\".tree-link\").removeClass(\"hide\");\n\t\t}\n\n\t\tthis.current_view = \"List\";\n\t\tvar route = frappe.get_route();\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(route[2])) {\n\t\t\tthis.current_view = route[2];\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\n\t\t// disable link for current view\n\t\tthis.sidebar\n\t\t\t.find('.list-link[data-view=\"' + this.current_view + '\"] a')\n\t\t\t.attr(\"disabled\", \"disabled\")\n\t\t\t.addClass(\"disabled\");\n\n\t\t//enable link for Kanban view\n\t\tthis.sidebar\n\t\t\t.find('.list-link[data-view=\"Kanban\"] a, .list-link[data-view=\"Inbox\"] a')\n\t\t\t.attr(\"disabled\", null)\n\t\t\t.removeClass(\"disabled\");\n\n\t\t// show image link if image_view\n\t\tif (this.list_view.meta.image_field) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Image\"]').removeClass(\"hide\");\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (\n\t\t\tthis.list_view.settings.get_coords_method ||\n\t\t\t(this.list_view.meta.fields.find((i) => i.fieldname === \"latitude\") &&\n\t\t\t\tthis.list_view.meta.fields.find((i) => i.fieldname === \"longitude\")) ||\n\t\t\tthis.list_view.meta.fields.find(\n\t\t\t\t(i) => i.fieldname === \"location\" && i.fieldtype == \"Geolocation\"\n\t\t\t)\n\t\t) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Map\"]').removeClass(\"hide\");\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (show_list_link) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"List\"]').removeClass(\"hide\");\n\t\t}\n\t}\n\n\tsetup_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tvar me = this;\n\t\tvar added = [];\n\t\tvar dropdown = this.page.sidebar.find(\".reports-dropdown\");\n\t\tvar divider = false;\n\n\t\tvar add_reports = function (reports) {\n\t\t\t$.each(reports, function (name, r) {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == me.doctype) {\n\t\t\t\t\tvar report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `List/${r.ref_doctype}/Report`\n\t\t\t\t\t\t\t: \"query-report\";\n\n\t\t\t\t\tvar route = r.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\n\t\t\t\t\t\tif (!divider) {\n\t\t\t\t\t\t\tme.get_divider().appendTo(dropdown);\n\t\t\t\t\t\t\tdivider = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t'<li><a href=\"#' + route + '\">' + __(r.title || r.name) + \"</a></li>\"\n\t\t\t\t\t\t).appendTo(dropdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\t}\n\n\tsetup_list_filter() {\n\t\tthis.list_filter = new ListFilter({\n\t\t\twrapper: this.page.sidebar.find(\".list-filters\"),\n\t\t\tdoctype: this.doctype,\n\t\t\tlist_view: this.list_view,\n\t\t});\n\t}\n\n\tsetup_kanban_boards() {\n\t\tconst $dropdown = this.page.sidebar.find(\".kanban-dropdown\");\n\t\tfrappe.views.KanbanView.setup_dropdown_in_sidebar(this.doctype, $dropdown);\n\t}\n\n\tsetup_keyboard_shortcuts() {\n\t\tthis.sidebar.find(\".list-link > a, .list-link > .btn-group > a\").each((i, el) => {\n\t\t\tfrappe.ui.keys.get_shortcut_group(this.page).add($(el));\n\t\t});\n\t}\n\n\tsetup_list_group_by() {\n\t\tthis.list_group_by = new frappe.views.ListGroupBy({\n\t\t\tdoctype: this.doctype,\n\t\t\tsidebar: this,\n\t\t\tlist_view: this.list_view,\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tget_stats() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.desk.reportview.get_sidebar_stats\",\n\t\t\ttype: \"GET\",\n\t\t\targs: {\n\t\t\t\tstats: me.stats,\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\t// wait for list filter area to be generated before getting filters, or fallback to default filters\n\t\t\t\tfilters:\n\t\t\t\t\t(me.list_view.filter_area\n\t\t\t\t\t\t? me.list_view.get_filters_for_args()\n\t\t\t\t\t\t: me.default_filters) || [],\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tlet stats = (r.message.stats || {})[\"_user_tags\"] || [];\n\t\t\t\tme.render_stat(stats);\n\t\t\t\tlet stats_dropdown = me.sidebar.find(\".list-stats-dropdown\");\n\t\t\t\tfrappe.utils.setup_search(stats_dropdown, \".stat-link\", \".stat-label\");\n\t\t\t},\n\t\t});\n\t}\n\n\trender_stat(stats) {\n\t\tlet args = {\n\t\t\tstats: stats,\n\t\t\tlabel: __(\"Tags\"),\n\t\t};\n\n\t\tlet tag_list = $(frappe.render_template(\"list_sidebar_stat\", args)).on(\n\t\t\t\"click\",\n\t\t\t\".stat-link\",\n\t\t\t(e) => {\n\t\t\t\tlet fieldname = $(e.currentTarget).attr(\"data-field\");\n\t\t\t\tlet label = $(e.currentTarget).attr(\"data-label\");\n\t\t\t\tlet condition = \"like\";\n\t\t\t\tlet existing = this.list_view.filter_area.filter_list.get_filter(fieldname);\n\t\t\t\tif (existing) {\n\t\t\t\t\texisting.remove();\n\t\t\t\t}\n\t\t\t\tif (label == \"No Tags\") {\n\t\t\t\t\tlabel = \"%,%\";\n\t\t\t\t\tcondition = \"not like\";\n\t\t\t\t}\n\t\t\t\tthis.list_view.filter_area.add(this.doctype, fieldname, condition, label);\n\t\t\t}\n\t\t);\n\n\t\tthis.sidebar.find(\".list-stats-dropdown .stat-result\").html(tag_list);\n\t}\n\n\treload_stats() {\n\t\tthis.sidebar.find(\".stat-link\").remove();\n\t\tthis.sidebar.find(\".stat-no-records\").remove();\n\t\tthis.get_stats();\n\t}\n\n\tadd_insights_banner() {\n\t\ttry {\n\t\t\tif (this.list_view.view != \"Report\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (localStorage.getItem(\"show_insights_banner\") == \"false\") {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.insights_banner) {\n\t\t\t\tthis.insights_banner.remove();\n\t\t\t}\n\n\t\t\tconst message = \"Get more insights with\";\n\t\t\tconst link = \"https://frappe.io/s/insights\";\n\t\t\tconst cta = \"Frappe Insights\";\n\n\t\t\tthis.insights_banner = $(`\n\t\t\t\t<div style=\"position: relative;\">\n\t\t\t\t\t<div class=\"pr-3\">\n\t\t\t\t\t\t${message} <a href=\"${link}\" target=\"_blank\" style=\"color: var(--primary-color)\">${cta} &rarr; </a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style=\"position: absolute; top: -1px; right: -4px; cursor: pointer;\" title=\"Dismiss\"\n\t\t\t\t\t\tonclick=\"localStorage.setItem('show_insights_banner', 'false') || this.parentElement.remove()\">\n\t\t\t\t\t\t<svg class=\"icon  icon-sm\" style=\"\">\n\t\t\t\t\t\t\t<use class=\"\" href=\"#icon-close\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`).appendTo(this.sidebar);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n};\n", "\n\tfrappe.templates['list_sidebar'] = `<ul class=\"list-unstyled sidebar-menu user-actions hide\">\n\t<li class=\"divider\"></li>\n</ul>\n<ul class=\"list-unstyled sidebar-menu\">\n\t<div class=\"sidebar-section views-section hide\">\n\t\t<li class=\"sidebar-label\">\n\t\t</li>\n\t\t<div class=\"current-view\">\n\t\t\t<li class=\"list-link\">\n\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\"\n\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\thref=\"#\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"selected-view ellipsis\">\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<svg class=\"icon icon-xs\">\n\t\t\t\t\t\t\t<use href=\"#icon-select\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t\t<ul class=\"dropdown-menu views-dropdown\" role=\"menu\">\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"view-action\"></a>\n\t\t\t</li>\n\t\t</div>\n\t</div>\n\n\t<div class=\"sidebar-section filter-section\">\n\t\t<li class=\"sidebar-label\">\n\t\t\t{{ __(\"Filter By\") }}\n\t\t</li>\n\n\t\t<div class=\"list-group-by\">\n\t\t</div>\n\n\t\t<div class=\"list-tags\">\n\t\t\t<li class=\"list-stats list-link\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"btn btn-default btn-sm list-sidebar-button\"\n\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\thref=\"#\"\n\t\t\t\t>\n\t\t\t\t\t<span>{{ __(\"Tags\") }}</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<svg class=\"icon icon-xs\">\n\t\t\t\t\t\t\t<use href=\"#icon-select\"></use>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</span>\n\t\t\t\t</a>\n\t\t\t\t<ul class=\"dropdown-menu list-stats-dropdown\" role=\"menu\">\n\t\t\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t\t\t<input type=\"text\" placeholder={{__(\"Search\") }} data-element=\"search\" class=\"form-control input-xs\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"stat-result\">\n\t\t\t\t\t</div>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li class=\"sidebar-action show-tags\">\n\t\t\t\t<a class=\"list-tag-preview\">{{ __(\"Show Tags\") }}</a>\n\t\t\t</li>\n\t\t</div>\n\t</div>\n\n\t<div class=\"sidebar-section save-filter-section\">\n\t\t<li class=\"sidebar-label\">\n\t\t\t{{ __(\"Save Filter\") }}\n\t\t</li>\n\t\t<li class=\"list-filters list-link\"></li>\n</ul>\n`;\n", "\n\tfrappe.templates['list_sidebar_stat'] = `\n{% if (!stats.length) { %}\n<li class=\"stat-no-records text-muted\">{{ __(\"No records tagged.\") }}</li>\n{% } else {\n\tfor (var i=0, l=stats.length; i < l; i++) {\n\t\tvar stat_label = stats[i][0];\n\t\tvar stat_count = stats[i][1];\n%}\n<li>\n\t<a class=\"stat-link dropdown-item\" data-label=\"{{ stat_label %}\" data-field=\"_user_tags\" href=\"#\" onclick=\"return false;\">\n\t\t<span class=\"stat-label\">{{ __(stat_label) }}</span>\n\t\t<span>{{ stat_count }}</span>\n\t</a>\n</li>\n\t{% }\n} %}\n`;\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.ListGroupBy = class ListGroupBy {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make_wrapper();\n\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\t\tthis.group_by_fields = [\"assigned_to\", \"owner\"];\n\t\tif (this.user_settings.group_by_fields) {\n\t\t\tthis.group_by_fields = this.group_by_fields.concat(this.user_settings.group_by_fields);\n\t\t}\n\t\tthis.render_group_by_items();\n\t\tthis.make_group_by_fields_modal();\n\t\tthis.setup_dropdown();\n\t\tthis.setup_filter_by();\n\t}\n\n\tmake_group_by_fields_modal() {\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Select Filters\"),\n\t\t\tfields: this.get_group_by_dropdown_fields(),\n\t\t});\n\n\t\td.set_primary_action(__(\"Save\"), ({ group_by_fields }) => {\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype,\n\t\t\t\t\"group_by_fields\",\n\t\t\t\tgroup_by_fields || null\n\t\t\t);\n\t\t\tthis.group_by_fields = group_by_fields\n\t\t\t\t? [\"assigned_to\", \"owner\", ...group_by_fields]\n\t\t\t\t: [\"assigned_to\", \"owner\"];\n\t\t\tthis.render_group_by_items();\n\t\t\tthis.setup_dropdown();\n\t\t\td.hide();\n\t\t});\n\n\t\td.$body.prepend(`\n\t\t\t<div class=\"filters-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__(\"Search\")}\"\n\t\t\t\t\tdata-element=\"search\" class=\"form-control input-xs\">\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.page.sidebar.find(\".add-list-group-by a\").on(\"click\", () => {\n\t\t\tfrappe.utils.setup_search(d.$body, \".unit-checkbox\", \".label-area\");\n\t\t\td.show();\n\t\t});\n\t}\n\n\tmake_wrapper() {\n\t\tthis.$wrapper = this.sidebar.sidebar.find(\".list-group-by\");\n\t\tlet html = `\n\t\t\t<div class=\"list-group-by-fields\">\n\t\t\t</div>\n\t\t\t<li class=\"add-list-group-by sidebar-action\">\n\t\t\t\t<a class=\"add-group-by\">\n\t\t\t\t\t${__(\"Edit Filters\")}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`;\n\t\tthis.$wrapper.html(html);\n\t}\n\n\trender_group_by_items() {\n\t\tlet get_item_html = (fieldname) => {\n\t\t\tlet label, fieldtype;\n\t\t\tif (fieldname === \"assigned_to\") {\n\t\t\t\tlabel = __(\"Assigned To\");\n\t\t\t} else if (fieldname === \"owner\") {\n\t\t\t\tlabel = __(\"Created By\");\n\t\t\t} else {\n\t\t\t\tlabel = frappe.meta.get_label(this.doctype, fieldname);\n\t\t\t\tlet docfield = frappe.meta.get_docfield(this.doctype, fieldname);\n\t\t\t\tif (!docfield) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfieldtype = docfield.fieldtype;\n\t\t\t}\n\n\t\t\treturn `<li class=\"group-by-field list-link\">\n\t\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\" data-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\" aria-expanded=\"false\"\n\t\t\t\t\tdata-label=\"${label}\" data-fieldname=\"${fieldname}\" data-fieldtype=\"${fieldtype}\"\n\t\t\t\t\thref=\"#\" onclick=\"return false;\">\n\t\t\t\t\t\t<span class=\"ellipsis\">${__(label)}</span>\n\t\t\t\t\t\t<span>${frappe.utils.icon(\"select\", \"xs\")}</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul class=\"dropdown-menu group-by-dropdown\" role=\"menu\">\n\t\t\t\t\t</ul>\n\t\t\t</li>`;\n\t\t};\n\t\tlet html = this.group_by_fields.map(get_item_html).join(\"\");\n\t\tthis.$wrapper.find(\".list-group-by-fields\").html(html);\n\t}\n\n\tsetup_dropdown() {\n\t\tthis.$wrapper.find(\".group-by-field\").on(\"show.bs.dropdown\", (e) => {\n\t\t\tlet $dropdown = $(e.currentTarget).find(\".group-by-dropdown\");\n\t\t\tthis.set_loading_state($dropdown);\n\t\t\tlet fieldname = $(e.currentTarget).find(\"a\").attr(\"data-fieldname\");\n\t\t\tlet fieldtype = $(e.currentTarget).find(\"a\").attr(\"data-fieldtype\");\n\t\t\tthis.get_group_by_count(fieldname).then((field_count_list) => {\n\t\t\t\tif (field_count_list.length) {\n\t\t\t\t\tlet applied_filter = this.list_view.get_filter_value(\n\t\t\t\t\t\tfieldname == \"assigned_to\" ? \"_assign\" : fieldname\n\t\t\t\t\t);\n\t\t\t\t\tthis.render_dropdown_items(\n\t\t\t\t\t\tfield_count_list,\n\t\t\t\t\t\tfieldtype,\n\t\t\t\t\t\t$dropdown,\n\t\t\t\t\t\tapplied_filter\n\t\t\t\t\t);\n\t\t\t\t\tthis.setup_search($dropdown);\n\t\t\t\t} else {\n\t\t\t\t\tthis.set_empty_state($dropdown);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tset_loading_state($dropdown) {\n\t\t$dropdown.html(`<li>\n\t\t\t<div class=\"empty-state group-by-loading\">\n\t\t\t\t${__(\"Loading...\")}\n\t\t\t</div>\n\t\t</li>`);\n\t}\n\n\tset_empty_state($dropdown) {\n\t\t$dropdown.html(\n\t\t\t`<div class=\"empty-state group-by-empty\">\n\t\t\t\t${__(\"No filters found\")}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tsetup_search($dropdown) {\n\t\tfrappe.utils.setup_search($dropdown, \".group-by-item\", \".group-by-value\", \"data-name\");\n\t}\n\n\tget_group_by_dropdown_fields() {\n\t\tlet group_by_fields = [];\n\t\tlet fields = this.list_view.meta.fields.filter((f) =>\n\t\t\t[\"Select\", \"Link\", \"Data\", \"Int\", \"Check\"].includes(f.fieldtype)\n\t\t);\n\t\tgroup_by_fields.push({\n\t\t\tlabel: __(this.doctype),\n\t\t\tfieldname: \"group_by_fields\",\n\t\t\tfieldtype: \"MultiCheck\",\n\t\t\tcolumns: 2,\n\t\t\toptions: fields.map((df) => ({\n\t\t\t\tlabel: __(df.label),\n\t\t\t\tvalue: df.fieldname,\n\t\t\t\tchecked: this.group_by_fields.includes(df.fieldname),\n\t\t\t})),\n\t\t});\n\t\treturn group_by_fields;\n\t}\n\n\tget_group_by_count(field) {\n\t\tlet current_filters = this.list_view.get_filters_for_args();\n\n\t\t// remove filter of the current field\n\t\tcurrent_filters = current_filters.filter(\n\t\t\t(f_arr) => !f_arr.includes(field === \"assigned_to\" ? \"_assign\" : field)\n\t\t);\n\n\t\tlet args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tcurrent_filters: current_filters,\n\t\t\tfield: field,\n\t\t};\n\n\t\treturn frappe.call(\"frappe.desk.listview.get_group_by_count\", args).then((r) => {\n\t\t\tlet field_counts = r.message || [];\n\t\t\tfield_counts = field_counts.filter((f) => f.count !== 0);\n\t\t\tlet current_user = field_counts.find((f) => f.name === frappe.session.user);\n\t\t\tfield_counts = field_counts.filter(\n\t\t\t\t(f) => ![\"Guest\", \"Administrator\", frappe.session.user].includes(f.name)\n\t\t\t);\n\t\t\t// Set frappe.session.user on top of the list\n\t\t\tif (current_user) field_counts.unshift(current_user);\n\t\t\treturn field_counts;\n\t\t});\n\t}\n\n\trender_dropdown_items(fields, fieldtype, $dropdown, applied_filter) {\n\t\tlet standard_html = `\n\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__(\"Search\")}\"\n\t\t\t\t\tdata-element=\"search\"\n\t\t\t\t\tclass=\"dropdown-search-input form-control input-xs\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t`;\n\t\tlet applied_filter_html = \"\";\n\t\tlet dropdown_items_html = \"\";\n\n\t\tfields.map((field) => {\n\t\t\tif (field.name === applied_filter) {\n\t\t\t\tapplied_filter_html = this.get_dropdown_html(field, fieldtype, true);\n\t\t\t} else {\n\t\t\t\tdropdown_items_html += this.get_dropdown_html(field, fieldtype);\n\t\t\t}\n\t\t});\n\n\t\tlet dropdown_html = standard_html + applied_filter_html + dropdown_items_html;\n\t\t$dropdown.toggleClass(\"has-selected\", Boolean(applied_filter_html));\n\t\t$dropdown.html(dropdown_html);\n\t}\n\n\tget_dropdown_html(field, fieldtype, applied = false) {\n\t\tlet label = field.name == null ? __(\"Not Set\") : field.name;\n\t\tif (label === frappe.session.user) {\n\t\t\tlabel = __(\"Me\");\n\t\t} else if (fieldtype && fieldtype == \"Check\") {\n\t\t\tlabel = label == \"0\" ? __(\"No\") : __(\"Yes\");\n\t\t}\n\t\tlet value = field.name == null ? \"\" : encodeURIComponent(field.name);\n\n\t\tlet applied_html = applied\n\t\t\t? `<span class=\"applied\"> ${frappe.utils.icon(\"tick\", \"xs\")} </span>`\n\t\t\t: \"\";\n\t\treturn `<li class=\"group-by-item ${applied ? \"selected\" : \"\"}\" data-value=\"${value}\">\n\t\t\t<a class=\"dropdown-item\" href=\"#\" onclick=\"return false;\">\n\t\t\t\t${applied_html}\n\t\t\t\t<span class=\"group-by-value ellipsis\" data-name=\"${field.name}\">${label}</span>\n\t\t\t\t<span class=\"group-by-count\">${field.count}</span>\n\t\t\t</a>\n\t\t</li>`;\n\t}\n\n\tsetup_filter_by() {\n\t\tthis.$wrapper.on(\"click\", \".group-by-item\", (e) => {\n\t\t\tlet $target = $(e.currentTarget);\n\t\t\tlet is_selected = $target.hasClass(\"selected\");\n\n\t\t\tlet fieldname = $target.parents(\".group-by-field\").find(\"a\").data(\"fieldname\");\n\t\t\tlet value =\n\t\t\t\ttypeof $target.data(\"value\") === \"string\"\n\t\t\t\t\t? decodeURIComponent($target.data(\"value\").trim())\n\t\t\t\t\t: $target.data(\"value\");\n\t\t\tfieldname = fieldname === \"assigned_to\" ? \"_assign\" : fieldname;\n\n\t\t\treturn this.list_view.filter_area.remove(fieldname).then(() => {\n\t\t\t\tif (is_selected) return;\n\t\t\t\treturn this.apply_filter(fieldname, value);\n\t\t\t});\n\t\t});\n\t}\n\n\tapply_filter(fieldname, value) {\n\t\tlet operator = \"=\";\n\t\tif (value === \"\") {\n\t\t\toperator = \"is\";\n\t\t\tvalue = \"not set\";\n\t\t}\n\t\tif (fieldname === \"_assign\") {\n\t\t\toperator = \"like\";\n\t\t\tvalue = `%${value}%`;\n\t\t}\n\t\treturn this.list_view.filter_area.add(this.doctype, fieldname, operator, value);\n\t}\n};\n", "\n\tfrappe.templates['list_view_permission_restrictions'] = `<table class=\"table table-bordered\" style=\"margin: 0;\">\n\t<thead>\n\t\t<th>{{ __(\"Field\") }}</th>\n\t\t<th>{{ __(\"Value\") }}</th>\n\t</thead>\n\t<tbody>\n\t\t{% for (let condition of condition_list ) { %}\n\t\t\t{% for (let key in condition) { %}\n\t\t\t<tr>\n\t\t\t\t<td>{{ __(key) }}</td>\n\t\t\t\t<td>{{ frappe.utils.comma_or(condition[key]) }}</td>\n\t\t\t</tr>\n\t\t\t{% } %}\n\t\t{% } %}\n\t</tbody>\n</table>\n`;\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.GanttView = class GanttView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Gantt\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = this.page_title + \" \" + __(\"Gantt\");\n\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\n\t\t\tif (typeof this.calendar_settings.gantt == \"object\") {\n\t\t\t\tObject.assign(this.calendar_settings, this.calendar_settings.gantt);\n\t\t\t}\n\n\t\t\tif (this.calendar_settings.order_by) {\n\t\t\t\tthis.sort_by = this.calendar_settings.order_by;\n\t\t\t\tthis.sort_order = \"asc\";\n\t\t\t} else {\n\t\t\t\tthis.sort_by =\n\t\t\t\t\tthis.view_user_settings.sort_by || this.calendar_settings.field_map.start;\n\t\t\t\tthis.sort_order = this.view_user_settings.sort_order || \"asc\";\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_view() {}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.prepare_tasks();\n\t}\n\n\tprepare_tasks() {\n\t\tvar me = this;\n\t\tvar meta = this.meta;\n\t\tvar field_map = this.calendar_settings.field_map;\n\n\t\tthis.tasks = this.data.map(function (item) {\n\t\t\t// set progress\n\t\t\tvar progress = 0;\n\t\t\tif (field_map.progress && $.isFunction(field_map.progress)) {\n\t\t\t\tprogress = field_map.progress(item);\n\t\t\t} else if (field_map.progress) {\n\t\t\t\tprogress = item[field_map.progress];\n\t\t\t}\n\n\t\t\t// title\n\t\t\tvar label;\n\t\t\tif (meta.title_field) {\n\t\t\t\tlabel = item.progress\n\t\t\t\t\t? __(\"{0} ({1}) - {2}%\", [item[meta.title_field], item.name, item.progress])\n\t\t\t\t\t: __(\"{0} ({1})\", [item[meta.title_field], item.name]);\n\t\t\t} else {\n\t\t\t\tlabel = item[field_map.title];\n\t\t\t}\n\n\t\t\tvar r = {\n\t\t\t\tstart: item[field_map.start],\n\t\t\t\tend: item[field_map.end],\n\t\t\t\tname: label,\n\t\t\t\tid: item[field_map.id || \"name\"],\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\tprogress: progress,\n\t\t\t\tdependencies: item.depends_on_tasks || \"\",\n\t\t\t};\n\n\t\t\tif (item.color && frappe.ui.color.validate_hex(item.color)) {\n\t\t\t\tr[\"custom_class\"] = \"color-\" + item.color.substr(1);\n\t\t\t}\n\n\t\t\tif (item.is_milestone) {\n\t\t\t\tr[\"custom_class\"] = \"bar-milestone\";\n\t\t\t}\n\n\t\t\treturn r;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.load_lib.then(() => {\n\t\t\tthis.render_gantt();\n\t\t});\n\t}\n\n\trender_header() {}\n\n\trender_gantt() {\n\t\tconst me = this;\n\t\tconst gantt_view_mode = this.view_user_settings.gantt_view_mode || \"Day\";\n\t\tconst field_map = this.calendar_settings.field_map;\n\t\tconst date_format = \"YYYY-MM-DD\";\n\n\t\tthis.$result.empty();\n\t\tthis.$result.addClass(\"gantt-modern\");\n\n\t\tthis.gantt = new Gantt(this.$result[0], this.tasks, {\n\t\t\tbar_height: 35,\n\t\t\tbar_corner_radius: 4,\n\t\t\tresize_handle_width: 8,\n\t\t\tresize_handle_height: 28,\n\t\t\tresize_handle_corner_radius: 3,\n\t\t\tresize_handle_offset: 4,\n\t\t\tview_mode: gantt_view_mode,\n\t\t\tdate_format: \"YYYY-MM-DD\",\n\t\t\ton_click: (task) => {\n\t\t\t\tfrappe.set_route(\"Form\", task.doctype, task.id);\n\t\t\t},\n\t\t\ton_date_change: (task, start, end) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t[field_map.start]: moment(start).format(date_format),\n\t\t\t\t\t[field_map.end]: moment(end).format(date_format),\n\t\t\t\t});\n\t\t\t},\n\t\t\ton_progress_change: (task, progress) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tvar progress_fieldname = \"progress\";\n\n\t\t\t\tif ($.isFunction(field_map.progress)) {\n\t\t\t\t\tprogress_fieldname = null;\n\t\t\t\t} else if (field_map.progress) {\n\t\t\t\t\tprogress_fieldname = field_map.progress;\n\t\t\t\t}\n\n\t\t\t\tif (progress_fieldname) {\n\t\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t\t[progress_fieldname]: parseInt(progress),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\ton_view_change: (mode) => {\n\t\t\t\t// save view mode\n\t\t\t\tme.save_view_user_settings({\n\t\t\t\t\tgantt_view_mode: mode,\n\t\t\t\t});\n\t\t\t},\n\t\t\tcustom_popup_html: (task) => {\n\t\t\t\tvar item = me.get_item(task.id);\n\n\t\t\t\tvar html = `<div class=\"title\">${task.name}</div>\n\t\t\t\t\t<div class=\"subtitle\">${moment(task._start).format(\"MMM D\")} - ${moment(task._end).format(\n\t\t\t\t\t\"MMM D\"\n\t\t\t\t)}</div>`;\n\n\t\t\t\t// custom html in doctype settings\n\t\t\t\tvar custom = me.settings.gantt_custom_popup_html;\n\t\t\t\tif (custom && $.isFunction(custom)) {\n\t\t\t\t\tvar ganttobj = task;\n\t\t\t\t\thtml = custom(ganttobj, item);\n\t\t\t\t}\n\t\t\t\treturn '<div class=\"details-container\">' + html + \"</div>\";\n\t\t\t},\n\t\t});\n\t\tthis.setup_view_mode_buttons();\n\t\tthis.set_colors();\n\t}\n\n\tsetup_view_mode_buttons() {\n\t\t// view modes (for translation) __(\"Day\"), __(\"Week\"), __(\"Month\"),\n\t\t//__(\"Half Day\"), __(\"Quarter Day\")\n\n\t\tlet $btn_group = this.$paging_area.find(\".gantt-view-mode\");\n\t\tif ($btn_group.length > 0) return;\n\n\t\tconst view_modes = this.gantt.options.view_modes || [];\n\t\tconst active_class = (view_mode) => (this.gantt.view_is(view_mode) ? \"btn-info\" : \"\");\n\t\tconst html = `<div class=\"btn-group gantt-view-mode\">\n\t\t\t\t${view_modes\n\t\t\t\t\t.map(\n\t\t\t\t\t\t(value) => `<button type=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-default btn-sm btn-view-mode ${active_class(value)}\"\n\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t${__(value)}\n\t\t\t\t\t</button>`\n\t\t\t\t\t)\n\t\t\t\t\t.join(\"\")}\n\t\t\t</div>`;\n\n\t\tthis.$paging_area.find(\".level-left\").append(html);\n\n\t\t// change view mode asynchronously\n\t\tconst change_view_mode = (value) =>\n\t\t\tsetTimeout(() => this.gantt.change_view_mode(value), 0);\n\n\t\tthis.$paging_area.on(\"click\", \".btn-view-mode\", (e) => {\n\t\t\tconst $btn = $(e.currentTarget);\n\t\t\tthis.$paging_area.find(\".btn-view-mode\").removeClass(\"btn-info\");\n\t\t\t$btn.addClass(\"btn-info\");\n\n\t\t\tconst value = $btn.data().value;\n\t\t\tchange_view_mode(value);\n\t\t});\n\t}\n\n\tset_colors() {\n\t\tconst classes = this.tasks\n\t\t\t.map((t) => t.custom_class)\n\t\t\t.filter((c) => c && c.startsWith(\"color-\"));\n\n\t\tlet style = classes\n\t\t\t.map((c) => {\n\t\t\t\tconst class_name = c.replace(\"#\", \"\");\n\t\t\t\tconst bar_color = \"#\" + c.substr(6);\n\t\t\t\tconst progress_color = frappe.ui.color.get_contrast_color(bar_color);\n\t\t\t\treturn `\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar {\n\t\t\t\t\tfill: ${bar_color};\n\t\t\t\t}\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar-progress {\n\t\t\t\t\tfill: ${progress_color};\n\t\t\t\t}\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tstyle = `<style>${style}</style>`;\n\t\tthis.$result.prepend(style);\n\t}\n\n\tget_item(name) {\n\t\treturn this.data.find((item) => item.name === name);\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.css\",\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.min.js\",\n\t\t];\n\t}\n};\n", "// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.views.calendar\");\nfrappe.provide(\"frappe.views.calendars\");\n\nfrappe.views.CalendarView = class CalendarView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)[\"Calendar\"] || {};\n\t\t\troute.push(user_settings.last_calendar || \"default\");\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\ttoggle_result_area() {}\n\n\tget view_name() {\n\t\treturn \"Calendar\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"{0} Calendar\", [this.page_title]);\n\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\t\t\tthis.calendar_name = frappe.get_route()[3];\n\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_page_form = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tthis.save_view_user_settings({\n\t\t\tlast_calendar: this.calendar_name,\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.calendar) {\n\t\t\tthis.calendar.refresh();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.load_lib\n\t\t\t.then(() => this.get_calendar_preferences())\n\t\t\t.then((options) => {\n\t\t\t\tthis.calendar = new frappe.views.Calendar(options);\n\t\t\t});\n\t}\n\n\tget_calendar_preferences() {\n\t\tconst options = {\n\t\t\tdoctype: this.doctype,\n\t\t\tparent: this.$result,\n\t\t\tpage: this.page,\n\t\t\tlist_view: this,\n\t\t};\n\t\tconst calendar_name = this.calendar_name;\n\n\t\treturn new Promise((resolve) => {\n\t\t\tif (calendar_name === \"default\") {\n\t\t\t\tObject.assign(options, frappe.views.calendar[this.doctype]);\n\t\t\t\tresolve(options);\n\t\t\t} else {\n\t\t\t\tfrappe.model.with_doc(\"Calendar View\", calendar_name, () => {\n\t\t\t\t\tconst doc = frappe.get_doc(\"Calendar View\", calendar_name);\n\t\t\t\t\tif (!doc) {\n\t\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t\t__(\"{0} is not a valid Calendar. Redirecting to default Calendar.\", [\n\t\t\t\t\t\t\t\tcalendar_name.bold(),\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfrappe.set_route(\"List\", this.doctype, \"Calendar\", \"default\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(options, {\n\t\t\t\t\t\tfield_map: {\n\t\t\t\t\t\t\tid: \"name\",\n\t\t\t\t\t\t\tstart: doc.start_date_field,\n\t\t\t\t\t\t\tend: doc.end_date_field,\n\t\t\t\t\t\t\ttitle: doc.subject_field,\n\t\t\t\t\t\t\tallDay: doc.all_day ? 1 : 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tresolve(options);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\tlet assets = [\n\t\t\t\"assets/frappe/js/lib/fullcalendar/fullcalendar.min.css\",\n\t\t\t\"assets/frappe/js/lib/fullcalendar/fullcalendar.min.js\",\n\t\t];\n\t\tlet user_language = frappe.boot.user.language;\n\t\tif (user_language && user_language !== \"en\") {\n\t\t\tassets.push(\"assets/frappe/js/lib/fullcalendar/locale-all.js\");\n\t\t}\n\t\treturn assets;\n\t}\n};\n\nfrappe.views.Calendar = class Calendar {\n\tconstructor(options) {\n\t\t$.extend(this, options);\n\t\tthis.field_map = this.field_map || {\n\t\t\tid: \"name\",\n\t\t\tstart: \"start\",\n\t\t\tend: \"end\",\n\t\t\tallDay: \"all_day\",\n\t\t\tconvertToUserTz: \"convert_to_user_tz\",\n\t\t};\n\t\tthis.color_map = {\n\t\t\tdanger: \"red\",\n\t\t\tsuccess: \"green\",\n\t\t\twarning: \"orange\",\n\t\t\tdefault: \"blue\",\n\t\t};\n\t\tthis.get_default_options();\n\t}\n\tget_default_options() {\n\t\treturn new Promise((resolve) => {\n\t\t\tlet defaultView = localStorage.getItem(\"cal_defaultView\");\n\t\t\tlet weekends = localStorage.getItem(\"cal_weekends\");\n\t\t\tlet defaults = {\n\t\t\t\tdefaultView: defaultView ? defaultView : \"month\",\n\t\t\t\tweekends: weekends ? weekends : true,\n\t\t\t};\n\t\t\tresolve(defaults);\n\t\t}).then((defaults) => {\n\t\t\tthis.make_page();\n\t\t\tthis.setup_options(defaults);\n\t\t\tthis.make();\n\t\t\tthis.setup_view_mode_button(defaults);\n\t\t\tthis.bind();\n\t\t});\n\t}\n\tmake_page() {\n\t\tvar me = this;\n\n\t\t// add links to other calendars\n\t\tme.page.clear_user_actions();\n\t\t$.each(frappe.boot.calendars, function (i, doctype) {\n\t\t\tif (frappe.model.can_read(doctype)) {\n\t\t\t\tme.page.add_menu_item(__(doctype), function () {\n\t\t\t\t\tfrappe.set_route(\"List\", doctype, \"Calendar\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$(this.parent).on(\"show\", function () {\n\t\t\tme.$cal.fullCalendar(\"refetchEvents\");\n\t\t});\n\t}\n\n\tmake() {\n\t\tthis.$wrapper = this.parent;\n\t\tthis.$cal = $(\"<div>\").appendTo(this.$wrapper);\n\t\tthis.footnote_area = frappe.utils.set_footnote(\n\t\t\tthis.footnote_area,\n\t\t\tthis.$wrapper,\n\t\t\t__(\"Select or drag across time slots to create a new event.\")\n\t\t);\n\t\tthis.footnote_area.css({ \"border-top\": \"0px\" });\n\n\t\tthis.$cal.fullCalendar(this.cal_options);\n\t\tthis.set_css();\n\t}\n\tsetup_view_mode_button(defaults) {\n\t\tvar me = this;\n\t\t$(me.footnote_area).find(\".btn-weekend\").detach();\n\t\tlet btnTitle = defaults.weekends ? __(\"Hide Weekends\") : __(\"Show Weekends\");\n\t\tconst btn = `<button class=\"btn btn-default btn-xs btn-weekend\">${btnTitle}</button>`;\n\t\tme.footnote_area.append(btn);\n\t}\n\tset_localStorage_option(option, value) {\n\t\tlocalStorage.removeItem(option);\n\t\tlocalStorage.setItem(option, value);\n\t}\n\tbind() {\n\t\tconst me = this;\n\t\tlet btn_group = me.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.on(\"click\", \".btn\", function () {\n\t\t\tlet value = $(this).hasClass(\"fc-agendaWeek-button\")\n\t\t\t\t? \"agendaWeek\"\n\t\t\t\t: $(this).hasClass(\"fc-agendaDay-button\")\n\t\t\t\t? \"agendaDay\"\n\t\t\t\t: \"month\";\n\t\t\tme.set_localStorage_option(\"cal_defaultView\", value);\n\t\t});\n\n\t\tme.$wrapper.on(\"click\", \".btn-weekend\", function () {\n\t\t\tme.cal_options.weekends = !me.cal_options.weekends;\n\t\t\tme.$cal.fullCalendar(\"option\", \"weekends\", me.cal_options.weekends);\n\t\t\tme.set_localStorage_option(\"cal_weekends\", me.cal_options.weekends);\n\t\t\tme.set_css();\n\t\t\tme.setup_view_mode_button(me.cal_options);\n\t\t});\n\t}\n\tset_css() {\n\t\t// flatify buttons\n\t\tthis.$wrapper\n\t\t\t.find(\"button.fc-state-default\")\n\t\t\t.removeClass(\"fc-state-default\")\n\t\t\t.addClass(\"btn btn-default\");\n\n\t\tthis.$wrapper\n\t\t\t.find(\".fc-month-button, .fc-agendaWeek-button, .fc-agendaDay-button\")\n\t\t\t.wrapAll('<div class=\"btn-group\" />');\n\n\t\tthis.$wrapper\n\t\t\t.find(\".fc-prev-button span\")\n\t\t\t.attr(\"class\", \"\")\n\t\t\t.html(frappe.utils.icon(\"left\"));\n\t\tthis.$wrapper\n\t\t\t.find(\".fc-next-button span\")\n\t\t\t.attr(\"class\", \"\")\n\t\t\t.html(frappe.utils.icon(\"right\"));\n\n\t\tthis.$wrapper.find(\".fc-today-button\").prepend(frappe.utils.icon(\"today\"));\n\n\t\tthis.$wrapper.find(\".fc-day-number\").wrap('<div class=\"fc-day\"></div>');\n\n\t\tvar btn_group = this.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.find(\".fc-state-active\").addClass(\"active\");\n\n\t\tbtn_group.find(\".btn\").on(\"click\", function () {\n\t\t\tbtn_group.find(\".btn\").removeClass(\"active\");\n\t\t\t$(this).addClass(\"active\");\n\t\t});\n\t}\n\n\tget_system_datetime(date) {\n\t\tdate._offset = moment(date).tz(frappe.sys_defaults.time_zone)._offset;\n\t\treturn frappe.datetime.convert_to_system_tz(date);\n\t}\n\tsetup_options(defaults) {\n\t\tvar me = this;\n\t\tdefaults.meridiem = \"false\";\n\t\tthis.cal_options = {\n\t\t\tlocale: frappe.boot.user.language || \"en\",\n\t\t\theader: {\n\t\t\t\tleft: \"prev, title, next\",\n\t\t\t\tright: \"today, month, agendaWeek, agendaDay\",\n\t\t\t},\n\t\t\teditable: true,\n\t\t\tselectable: true,\n\t\t\tselectHelper: true,\n\t\t\tforceEventDuration: true,\n\t\t\tdisplayEventTime: true,\n\t\t\tdefaultView: defaults.defaultView,\n\t\t\tweekends: defaults.weekends,\n\t\t\tnowIndicator: true,\n\t\t\tevents: function (start, end, timezone, callback) {\n\t\t\t\treturn frappe.call({\n\t\t\t\t\tmethod: me.get_events_method || \"frappe.desk.calendar.get_events\",\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\targs: me.get_args(start, end),\n\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\tvar events = r.message || [];\n\t\t\t\t\t\tevents = me.prepare_events(events);\n\t\t\t\t\t\tcallback(events);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\tdisplayEventEnd: true,\n\t\t\teventRender: function (event, element) {\n\t\t\t\telement.attr(\"title\", event.tooltip);\n\t\t\t},\n\t\t\teventClick: function (event) {\n\t\t\t\t// edit event description or delete\n\t\t\t\tvar doctype = event.doctype || me.doctype;\n\t\t\t\tif (frappe.model.can_read(doctype)) {\n\t\t\t\t\tfrappe.set_route(\"Form\", doctype, event.name);\n\t\t\t\t}\n\t\t\t},\n\t\t\teventDrop: function (event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\teventResize: function (event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\tselect: function (startDate, endDate, jsEvent, view) {\n\t\t\t\tif (view.name === \"month\" && endDate - startDate === 86400000) {\n\t\t\t\t\t// detect single day click in month view\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar event = frappe.model.get_new_doc(me.doctype);\n\n\t\t\t\tevent[me.field_map.start] = me.get_system_datetime(startDate);\n\n\t\t\t\tif (me.field_map.end) event[me.field_map.end] = me.get_system_datetime(endDate);\n\n\t\t\t\tif (me.field_map.allDay) {\n\t\t\t\t\tvar all_day = startDate._ambigTime && endDate._ambigTime ? 1 : 0;\n\n\t\t\t\t\tevent[me.field_map.allDay] = all_day;\n\n\t\t\t\t\tif (all_day)\n\t\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(\n\t\t\t\t\t\t\tmoment(endDate).subtract(1, \"s\")\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfrappe.set_route(\"Form\", me.doctype, event.name);\n\t\t\t},\n\t\t\tdayClick: function (date, jsEvent, view) {\n\t\t\t\tif (view.name === \"month\") {\n\t\t\t\t\tconst $date_cell = $(\"td[data-date=\" + date.format(\"YYYY-MM-DD\") + \"]\");\n\n\t\t\t\t\tif ($date_cell.hasClass(\"date-clicked\")) {\n\t\t\t\t\t\tme.$cal.fullCalendar(\"changeView\", \"agendaDay\");\n\t\t\t\t\t\tme.$cal.fullCalendar(\"gotoDate\", date);\n\t\t\t\t\t\tme.$wrapper.find(\".date-clicked\").removeClass(\"date-clicked\");\n\n\t\t\t\t\t\t// update \"active view\" btn\n\t\t\t\t\t\tme.$wrapper.find(\".fc-month-button\").removeClass(\"active\");\n\t\t\t\t\t\tme.$wrapper.find(\".fc-agendaDay-button\").addClass(\"active\");\n\t\t\t\t\t}\n\n\t\t\t\t\tme.$wrapper.find(\".date-clicked\").removeClass(\"date-clicked\");\n\t\t\t\t\t$date_cell.addClass(\"date-clicked\");\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t};\n\n\t\tif (this.options) {\n\t\t\t$.extend(this.cal_options, this.options);\n\t\t}\n\t}\n\tget_args(start, end) {\n\t\tvar args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tstart: this.get_system_datetime(start),\n\t\t\tend: this.get_system_datetime(end),\n\t\t\tfields: this.fields,\n\t\t\tfilters: this.list_view.filter_area.get(),\n\t\t\tfield_map: this.field_map,\n\t\t};\n\t\treturn args;\n\t}\n\trefresh() {\n\t\tthis.$cal.fullCalendar(\"refetchEvents\");\n\t}\n\tprepare_events(events) {\n\t\tvar me = this;\n\n\t\treturn (events || []).map((d) => {\n\t\t\td.id = d.name;\n\t\t\td.editable = frappe.model.can_write(d.doctype || me.doctype);\n\n\t\t\t// do not allow submitted/cancelled events to be moved / extended\n\t\t\tif (d.docstatus && d.docstatus > 0) {\n\t\t\t\td.editable = false;\n\t\t\t}\n\n\t\t\t$.each(me.field_map, function (target, source) {\n\t\t\t\td[target] = d[source];\n\t\t\t});\n\n\t\t\tif (!me.field_map.allDay) d.allDay = 1;\n\t\t\tif (!me.field_map.convertToUserTz) d.convertToUserTz = 1;\n\n\t\t\t// convert to user tz\n\t\t\tif (d.convertToUserTz) {\n\t\t\t\td.start = frappe.datetime.convert_to_user_tz(d.start);\n\t\t\t\td.end = frappe.datetime.convert_to_user_tz(d.end);\n\t\t\t}\n\n\t\t\t// show event on single day if start or end date is invalid\n\t\t\tif (!frappe.datetime.validate(d.start) && d.end) {\n\t\t\t\td.start = frappe.datetime.add_days(d.end, -1);\n\t\t\t}\n\n\t\t\tif (d.start && !frappe.datetime.validate(d.end)) {\n\t\t\t\td.end = frappe.datetime.add_days(d.start, 1);\n\t\t\t}\n\n\t\t\tme.fix_end_date_for_event_render(d);\n\t\t\tme.prepare_colors(d);\n\n\t\t\td.title = frappe.utils.html2text(d.title);\n\n\t\t\treturn d;\n\t\t});\n\t}\n\tprepare_colors(d) {\n\t\tlet color, color_name;\n\t\tif (this.get_css_class) {\n\t\t\tcolor_name = this.color_map[this.get_css_class(d)] || \"blue\";\n\n\t\t\tif (color_name.startsWith(\"#\")) {\n\t\t\t\tcolor_name = frappe.ui.color.validate_hex(color_name) ? color_name : \"blue\";\n\t\t\t}\n\n\t\t\td.backgroundColor = frappe.ui.color.get(color_name, \"extra-light\");\n\t\t\td.textColor = frappe.ui.color.get(color_name, \"dark\");\n\t\t} else {\n\t\t\tcolor = d.color;\n\t\t\tif (!frappe.ui.color.validate_hex(color) || !color) {\n\t\t\t\tcolor = frappe.ui.color.get(\"blue\", \"extra-light\");\n\t\t\t}\n\t\t\td.backgroundColor = color;\n\t\t\td.textColor = frappe.ui.color.get_contrast_color(color);\n\t\t}\n\t\treturn d;\n\t}\n\tupdate_event(event, revertFunc) {\n\t\tvar me = this;\n\t\tfrappe.model.remove_from_locals(me.doctype, event.name);\n\t\treturn frappe.call({\n\t\t\tmethod: me.update_event_method || \"frappe.desk.calendar.update_event\",\n\t\t\targs: me.get_update_args(event),\n\t\t\tcallback: function (r) {\n\t\t\t\tif (r.exc) {\n\t\t\t\t\tfrappe.show_alert(__(\"Unable to update event\"));\n\t\t\t\t\trevertFunc();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\trevertFunc();\n\t\t\t},\n\t\t});\n\t}\n\tget_update_args(event) {\n\t\tvar me = this;\n\t\tvar args = {\n\t\t\tname: event[this.field_map.id],\n\t\t};\n\n\t\targs[this.field_map.start] = me.get_system_datetime(event.start);\n\n\t\tif (this.field_map.allDay)\n\t\t\targs[this.field_map.allDay] = event.start._ambigTime && event.end._ambigTime ? 1 : 0;\n\n\t\tif (this.field_map.end) {\n\t\t\tif (!event.end) {\n\t\t\t\tevent.end = event.start.add(1, \"hour\");\n\t\t\t}\n\n\t\t\targs[this.field_map.end] = me.get_system_datetime(event.end);\n\n\t\t\tif (args[this.field_map.allDay]) {\n\t\t\t\targs[this.field_map.end] = me.get_system_datetime(\n\t\t\t\t\tmoment(event.end).subtract(1, \"s\")\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\targs.doctype = event.doctype || this.doctype;\n\n\t\treturn { args: args, field_map: this.field_map };\n\t}\n\n\tfix_end_date_for_event_render(event) {\n\t\tif (event.allDay) {\n\t\t\t// We use inclusive end dates. This workaround fixes the rendering of events\n\t\t\tevent.start = event.start ? $.fullCalendar.moment(event.start).stripTime() : null;\n\t\t\tevent.end = event.end\n\t\t\t\t? $.fullCalendar.moment(event.end).add(1, \"day\").stripTime()\n\t\t\t\t: null;\n\t\t}\n\t}\n};\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.DashboardView = class DashboardView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Dashboard\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"{0} Dashboard\", [__(this.doctype)]);\n\t\t\tthis.dashboard_settings =\n\t\t\t\tfrappe.get_user_settings(this.doctype)[\"dashboard_settings\"] || null;\n\t\t});\n\t}\n\n\trender() {}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_filters = true;\n\t\tthis.hide_sort_selector = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.chart_group || this.number_card_group) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup_dashboard_page();\n\t\tthis.setup_dashboard_customization();\n\t\tthis.make_dashboard();\n\t}\n\n\tsetup_dashboard_customization() {\n\t\tthis.page.add_menu_item(__(\"Customize Dashboard\"), () => this.customize());\n\t\tthis.page.add_menu_item(__(\"Reset Dashboard Customizations\"), () =>\n\t\t\tthis.reset_dashboard_customization()\n\t\t);\n\t\tthis.add_customization_buttons();\n\t}\n\n\tsetup_dashboard_page() {\n\t\tconst chart_wrapper_html = `<div class=\"dashboard-view\"></div>`;\n\n\t\tthis.$frappe_list.html(chart_wrapper_html);\n\t\tthis.page.clear_secondary_action();\n\t\tthis.$dashboard_page = this.$page\n\t\t\t.find(\".layout-main-section-wrapper\")\n\t\t\t.addClass(\"dashboard-page\");\n\t\tthis.page.main.removeClass(\"frappe-card\");\n\n\t\tthis.$dashboard_wrapper = this.$page.find(\".dashboard-view\");\n\t\tthis.$chart_header = this.$page.find(\".dashboard-header\");\n\n\t\tfrappe.utils.bind_actions_with_object(this.$dashboard_page, this);\n\t}\n\n\tadd_customization_buttons() {\n\t\tthis.save_customizations_button = this.page.add_button(\n\t\t\t__(\"Save Customizations\"),\n\t\t\t() => {\n\t\t\t\tthis.save_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t},\n\t\t\t{ btn_class: \"btn-primary\" }\n\t\t);\n\n\t\tthis.discard_customizations_button = this.page.add_button(__(\"Discard\"), () => {\n\t\t\tthis.discard_dashboard_customization();\n\t\t\tthis.page.standard_actions.show();\n\t\t});\n\n\t\tthis.toggle_customization_buttons(false);\n\t}\n\n\tset_primary_action() {\n\t\t// Don't render Add doc button for dashboard view\n\t}\n\n\ttoggle_customization_buttons(show) {\n\t\tthis.save_customizations_button.toggle(show);\n\t\tthis.discard_customizations_button.toggle(show);\n\t}\n\n\tmake_dashboard() {\n\t\tif (this.dashboard_settings) {\n\t\t\tthis.charts = this.dashboard_settings.charts;\n\t\t\tthis.number_cards = this.dashboard_settings.number_cards;\n\t\t\tthis.render_dashboard();\n\t\t} else {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() =>\n\t\t\t\t\tthis.fetch_dashboard_items(\n\t\t\t\t\t\t\"Dashboard Chart\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchart_type: [\"in\", [\"Count\", \"Sum\", \"Group By\"]],\n\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"charts\"\n\t\t\t\t\t),\n\t\t\t\t() =>\n\t\t\t\t\tthis.fetch_dashboard_items(\n\t\t\t\t\t\t\"Number Card\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"number_cards\"\n\t\t\t\t\t),\n\t\t\t\t() => this.render_dashboard(),\n\t\t\t]);\n\t\t}\n\t}\n\n\trender_dashboard() {\n\t\tthis.$dashboard_wrapper.empty();\n\n\t\tfrappe.dashboard_utils.get_dashboard_settings().then((settings) => {\n\t\t\tthis.dashboard_chart_settings = settings.chart_config\n\t\t\t\t? JSON.parse(settings.chart_config)\n\t\t\t\t: {};\n\t\t\tthis.charts.map((chart) => {\n\t\t\t\tchart.label = chart.chart_name;\n\t\t\t\tchart.chart_settings = this.dashboard_chart_settings[chart.chart_name] || {};\n\t\t\t});\n\t\t\tthis.render_dashboard_charts();\n\t\t});\n\t\tthis.render_number_cards();\n\n\t\tif (!this.charts.length && !this.number_cards.length) {\n\t\t\tthis.render_empty_state();\n\t\t}\n\t}\n\n\tfetch_dashboard_items(doctype, filters, obj_name) {\n\t\treturn frappe.db\n\t\t\t.get_list(doctype, {\n\t\t\t\tfilters: filters,\n\t\t\t\tfields: [\"*\"],\n\t\t\t})\n\t\t\t.then((items) => {\n\t\t\t\tthis[obj_name] = items;\n\t\t\t});\n\t}\n\n\trender_number_cards() {\n\t\tthis.number_card_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"number_card\",\n\t\t\tcolumns: 3,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t},\n\t\t\tdefault_values: { doctype: this.doctype },\n\t\t\twidgets: this.number_cards || [],\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.number_card_group.customize();\n\t}\n\n\trender_dashboard_charts() {\n\t\tthis.chart_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"chart\",\n\t\t\tcolumns: 2,\n\t\t\theight: 240,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t\tallow_resize: true,\n\t\t\t},\n\t\t\tcustom_dialog: () => this.show_add_chart_dialog(),\n\t\t\twidgets: this.charts,\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.chart_group.customize();\n\t\tthis.chart_group.container.find(\".widget-group-head\").hide();\n\t}\n\n\trender_empty_state() {\n\t\tconst no_result_message_html = `<p>${__(\n\t\t\t\"You haven't added any Dashboard Charts or Number Cards yet.\"\n\t\t)}\n\t\t\t<br>${__(\"Click On Customize to add your first widget\")}</p>`;\n\n\t\tconst customize_button = `<p><button class=\"btn btn-primary btn-sm\" data-action=\"customize\">\n\t\t\t\t${__(\"Customize\")}\n\t\t\t</button></p>`;\n\n\t\tconst empty_state_image = \"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst empty_state_html = `<div class=\"msg-box no-border empty-dashboard\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t${no_result_message_html}\n\t\t\t${customize_button}\n\t\t</div>`;\n\n\t\tthis.$dashboard_wrapper.append(empty_state_html);\n\t\tthis.$empty_state = this.$dashboard_wrapper.find(\".empty-dashboard\");\n\t}\n\n\tcustomize() {\n\t\tif (this.in_customize_mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.page.standard_actions.hide();\n\n\t\tif (this.$empty_state) {\n\t\t\tthis.$empty_state.remove();\n\t\t}\n\n\t\tthis.toggle_customize(true);\n\t\tthis.in_customize_mode = true;\n\t\tthis.chart_group.customize();\n\t\tthis.number_card_group.customize();\n\t}\n\n\tget_widgets_to_save(widget_group) {\n\t\tconst config = widget_group.get_widget_config();\n\t\tlet widgets = [];\n\t\tconfig.order.map((widget_name) => {\n\t\t\twidgets.push(config.widgets[widget_name]);\n\t\t});\n\t\treturn this.remove_duplicates(widgets);\n\t}\n\n\tsave_dashboard_customization() {\n\t\tthis.toggle_customize(false);\n\n\t\tconst charts = this.get_widgets_to_save(this.chart_group);\n\t\tconst number_cards = this.get_widgets_to_save(this.number_card_group);\n\n\t\tthis.dashboard_settings = {\n\t\t\tcharts: charts,\n\t\t\tnumber_cards: number_cards,\n\t\t};\n\n\t\tfrappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\t\"dashboard_settings\",\n\t\t\tthis.dashboard_settings\n\t\t);\n\t\tthis.make_dashboard();\n\t}\n\n\tdiscard_dashboard_customization() {\n\t\tthis.dashboard_settings =\n\t\t\tfrappe.get_user_settings(this.doctype)[\"dashboard_settings\"] || null;\n\t\tthis.toggle_customize(false);\n\t\tthis.render_dashboard();\n\t}\n\n\treset_dashboard_customization() {\n\t\tfrappe.confirm(__(\"Are you sure you want to reset all customizations?\"), () => {\n\t\t\tthis.dashboard_settings = null;\n\t\t\tfrappe.model.user_settings\n\t\t\t\t.save(this.doctype, \"dashboard_settings\", this.dashboard_settings)\n\t\t\t\t.then(() => this.make_dashboard());\n\n\t\t\tthis.toggle_customize(false);\n\t\t});\n\t}\n\n\ttoggle_customize(show) {\n\t\tthis.toggle_customization_buttons(show);\n\t\tthis.in_customize_mode = show;\n\t}\n\n\tshow_add_chart_dialog() {\n\t\tlet fields = this.get_field_options();\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add a {0} Chart\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"new_or_existing\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tlabel: \"Choose an existing chart or create a new chart\",\n\t\t\t\t\toptions: [\"New Chart\", \"Existing Chart\"],\n\t\t\t\t\treqd: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart\",\n\t\t\t\t\tfieldname: \"chart\",\n\t\t\t\t\tfieldtype: \"Link\",\n\t\t\t\t\tget_query: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tquery: \"frappe.desk.doctype.dashboard_chart.dashboard_chart.get_charts_for_user\",\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\toptions: \"Dashboard Chart\",\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"Existing Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"sb_2\",\n\t\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart Label\",\n\t\t\t\t\tfieldname: \"label\",\n\t\t\t\t\tfieldtype: \"Data\",\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"cb_1\",\n\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart Type\",\n\t\t\t\t\tfieldname: \"chart_type\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: [\"Time Series\", \"Group By\"],\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"sb_2\",\n\t\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\t\tlabel: \"Chart Config\",\n\t\t\t\t\tdepends_on:\n\t\t\t\t\t\t'eval: doc.chart_type == \"Time Series\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Function\",\n\t\t\t\t\tfieldname: \"chart_function\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: [\"Count\", \"Sum\", \"Average\"],\n\t\t\t\t\tdefault: \"Count\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Timespan\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"timespan\",\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: [\"Last Year\", \"Last Quarter\", \"Last Month\", \"Last Week\"],\n\t\t\t\t\tdefault: \"Last Year\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"cb_2\",\n\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Value Based On\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"based_on\",\n\t\t\t\t\toptions: fields.value_fields,\n\t\t\t\t\tdepends_on: 'eval: doc.chart_function==\"Sum\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Time Series Based On\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"based_on\",\n\t\t\t\t\toptions: fields.date_fields,\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Time Interval\",\n\t\t\t\t\tfieldname: \"time_interval\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: [\"Yearly\", \"Quarterly\", \"Monthly\", \"Weekly\", \"Daily\"],\n\t\t\t\t\tdefault: \"Monthly\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"sb_2\",\n\t\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\t\tlabel: \"Chart Config\",\n\t\t\t\t\tdepends_on:\n\t\t\t\t\t\t'eval: doc.chart_type == \"Group By\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Group By Type\",\n\t\t\t\t\tfieldname: \"group_by_type\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: [\"Count\", \"Sum\", \"Average\"],\n\t\t\t\t\tdefault: \"Count\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Aggregate Function Based On\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"aggregate_function_based_on\",\n\t\t\t\t\toptions: fields.aggregate_function_fields,\n\t\t\t\t\tdepends_on: 'eval: [\"Sum\", \"Average\"].includes(doc.group_by_type)',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"cb_2\",\n\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Group By Based On\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\tfieldname: \"group_by_based_on\",\n\t\t\t\t\toptions: fields.group_by_fields,\n\t\t\t\t\tdefault: \"Last Year\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Number of Groups\",\n\t\t\t\t\tfieldtype: \"Int\",\n\t\t\t\t\tfieldname: \"number_of_groups\",\n\t\t\t\t\tdefault: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"sb_3\",\n\t\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart Type\",\n\t\t\t\t\tfieldname: \"type\",\n\t\t\t\t\tfieldtype: \"Select\",\n\t\t\t\t\toptions: [\"Line\", \"Bar\", \"Percentage\", \"Pie\"],\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"cb_1\",\n\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: \"Chart Color\",\n\t\t\t\t\tfieldname: \"color\",\n\t\t\t\t\tfieldtype: \"Color\",\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: (values) => {\n\t\t\t\tlet chart = values;\n\t\t\t\tif (chart.new_or_existing == \"New Chart\") {\n\t\t\t\t\tchart.chart_name = chart.label;\n\t\t\t\t\tchart.chart_type =\n\t\t\t\t\t\tchart.chart_type == \"Time Series\"\n\t\t\t\t\t\t\t? chart.chart_function\n\t\t\t\t\t\t\t: chart.chart_type;\n\t\t\t\t\tchart.document_type = this.doctype;\n\t\t\t\t\tchart.filters_json = \"[]\";\n\t\t\t\t\tfrappe\n\t\t\t\t\t\t.xcall(\n\t\t\t\t\t\t\t\"frappe.desk.doctype.dashboard_chart.dashboard_chart.create_dashboard_chart\",\n\t\t\t\t\t\t\t{ args: chart }\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then((doc) => {\n\t\t\t\t\t\t\tthis.chart_group.new_widget.on_create({\n\t\t\t\t\t\t\t\tchart_name: doc.chart_name,\n\t\t\t\t\t\t\t\tname: doc.chart_name,\n\t\t\t\t\t\t\t\tlabel: chart.label,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.chart_group.new_widget.on_create({\n\t\t\t\t\t\tchart_name: chart.chart,\n\t\t\t\t\t\tlabel: chart.chart,\n\t\t\t\t\t\tname: chart.chart,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_field_options() {\n\t\tlet date_fields = [\n\t\t\t{ label: __(\"Created On\"), value: \"creation\" },\n\t\t\t{ label: __(\"Last Modified On\"), value: \"modified\" },\n\t\t];\n\t\tlet value_fields = [];\n\t\tlet group_by_fields = [];\n\t\tlet aggregate_function_fields = [];\n\n\t\tfrappe.get_meta(this.doctype).fields.map((df) => {\n\t\t\tif ([\"Date\", \"Datetime\"].includes(df.fieldtype)) {\n\t\t\t\tdate_fields.push({ label: df.label, value: df.fieldname });\n\t\t\t}\n\t\t\tif (frappe.model.numeric_fieldtypes.includes(df.fieldtype)) {\n\t\t\t\tif (df.fieldtype == \"Currency\") {\n\t\t\t\t\tif (!df.options || df.options !== \"Company:company:default_currency\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue_fields.push({ label: df.label, value: df.fieldname });\n\t\t\t\taggregate_function_fields.push({ label: df.label, value: df.fieldname });\n\t\t\t}\n\t\t\tif ([\"Link\", \"Select\"].includes(df.fieldtype)) {\n\t\t\t\tgroup_by_fields.push({ label: df.label, value: df.fieldname });\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tdate_fields: date_fields,\n\t\t\tvalue_fields: value_fields,\n\t\t\tgroup_by_fields: group_by_fields,\n\t\t\taggregate_function_fields: aggregate_function_fields,\n\t\t};\n\t}\n\n\tremove_duplicates(items) {\n\t\treturn items.filter((item, index) => items.indexOf(item) === index);\n\t}\n};\n", "/**\n * frappe.views.ImageView\n */\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ImageView = class ImageView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Image\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = this.page_title + \" \" + __(\"Images\");\n\t\t});\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = [\n\t\t\t\"name\",\n\t\t\t...this.get_fields_in_list_view().map((el) => el.fieldname),\n\t\t\tthis.meta.title_field,\n\t\t\tthis.meta.image_field,\n\t\t\t\"_liked_by\",\n\t\t];\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.items = this.data.map((d) => {\n\t\t\t// absolute url if cordova, else relative\n\t\t\td._image_url = this.get_image_url(d);\n\t\t\treturn d;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.get_attached_images().then(() => {\n\t\t\tthis.render_image_view();\n\n\t\t\tif (!this.gallery) {\n\t\t\t\tthis.setup_gallery();\n\t\t\t} else {\n\t\t\t\tthis.gallery.prepare_pswp_items(this.items, this.images_map);\n\t\t\t}\n\t\t});\n\t}\n\n\trender_image_view() {\n\t\tvar html = this.items.map(this.item_html.bind(this)).join(\"\");\n\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"image-view\");\n\n\t\tthis.$result.html(`\n\t\t\t<div class=\"image-view-container\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.render_count();\n\t}\n\n\titem_details_html(item) {\n\t\t// TODO: Image view field in DocType\n\t\tlet info_fields = this.get_fields_in_list_view().map((el) => el.fieldname) || [];\n\t\tconst title_field = this.meta.title_field || \"name\";\n\t\tinfo_fields = info_fields.filter((field) => field !== title_field);\n\t\tlet info_html = `<div><ul class=\"list-unstyled image-view-info\">`;\n\t\tlet set = false;\n\t\tinfo_fields.forEach((field, index) => {\n\t\t\tif (item[field] && !set) {\n\t\t\t\tif (index == 0) info_html += `<li>${__(item[field])}</li>`;\n\t\t\t\telse info_html += `<li class=\"text-muted\">${__(item[field])}</li>`;\n\t\t\t\tset = true;\n\t\t\t}\n\t\t});\n\t\tinfo_html += `</ul></div>`;\n\t\treturn info_html;\n\t}\n\n\titem_html(item) {\n\t\titem._name = encodeURI(item.name);\n\t\tconst encoded_name = item._name;\n\t\tconst title = strip_html(item[this.meta.title_field || \"name\"]);\n\t\tconst escaped_title = frappe.utils.escape_html(title);\n\t\tconst _class = !item._image_url ? \"no-image\" : \"\";\n\t\tconst _html = item._image_url\n\t\t\t? `<img data-name=\"${encoded_name}\" src=\"${item._image_url}\" alt=\"${title}\">`\n\t\t\t: `<span class=\"placeholder-text\">\n\t\t\t\t${frappe.get_abbr(title)}\n\t\t\t</span>`;\n\n\t\tlet details = this.item_details_html(item);\n\n\t\tconst expand_button_html = item._image_url\n\t\t\t? `<div class=\"zoom-view\" data-name=\"${encoded_name}\">\n\t\t\t\t${frappe.utils.icon(\"expand\", \"xs\")}\n\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\treturn `\n\t\t\t<div class=\"image-view-item ellipsis\">\n\t\t\t\t<div class=\"image-view-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\"\n\t\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${escape(item.name)}\">\n\t\t\t\t\t\t${this.get_like_html(item)}\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-body ${_class}\">\n\t\t\t\t\t<a data-name=\"${encoded_name}\"\n\t\t\t\t\t\ttitle=\"${encoded_name}\"\n\t\t\t\t\t\thref=\"${this.get_form_link(item)}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"image-field\"\n\t\t\t\t\t\t\tdata-name=\"${encoded_name}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t${_html}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t${expand_button_html}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-footer\">\n\t\t\t\t\t<div class=\"image-title\">\n\t\t\t\t\t\t<span class=\"ellipsis\" title=\"${escaped_title}\">\n\t\t\t\t\t\t\t<a class=\"ellipsis\" href=\"${this.get_form_link(item)}\"\n\t\t\t\t\t\t\t\ttitle=\"${escaped_title}\" data-doctype=\"${this.doctype}\" data-name=\"${item.name}\">\n\t\t\t\t\t\t\t\t${title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${details}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_attached_images() {\n\t\treturn frappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.core.api.file.get_attached_images\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tnames: this.items.map((i) => i.name),\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tthis.images_map = Object.assign(this.images_map || {}, r.message);\n\t\t\t});\n\t}\n\n\tget_header_html() {\n\t\t// return this.get_header_html_skeleton(`\n\t\t// \t<div class=\"list-image-header\">\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"Select All\">\n\t\t// \t\t\t<div>${__(this.doctype)} &nbsp;</div>\n\t\t// \t\t\t(<span class=\"text-muted list-count\"></span>)\n\t\t// \t\t</div>\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<div class=\"level-item list-liked-by-me\">\n\t\t// \t\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t// \t\t\t</div>\n\t\t// \t\t\t<div>${__('Liked')}</div>\n\t\t// \t\t</div>\n\t\t// \t</div>\n\t\t// `);\n\t}\n\n\tsetup_gallery() {\n\t\tvar me = this;\n\t\tthis.gallery = new frappe.views.GalleryView({\n\t\t\tdoctype: this.doctype,\n\t\t\titems: this.items,\n\t\t\twrapper: this.$result,\n\t\t\timages_map: this.images_map,\n\t\t});\n\t\tthis.$result.on(\"click\", \".zoom-view\", function (e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tvar name = $(this).data().name;\n\t\t\tname = decodeURIComponent(name);\n\t\t\tme.gallery.show(name);\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nfrappe.views.GalleryView = class GalleryView {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tvar me = this;\n\n\t\tthis.lib_ready = this.load_lib();\n\t\tthis.lib_ready.then(function () {\n\t\t\tme.prepare();\n\t\t});\n\t}\n\tprepare() {\n\t\t// keep only one pswp dom element\n\t\tthis.pswp_root = $(\"body > .pswp\");\n\t\tif (this.pswp_root.length === 0) {\n\t\t\tvar pswp = frappe.render_template(\"photoswipe_dom\");\n\t\t\tthis.pswp_root = $(pswp).appendTo(\"body\");\n\t\t}\n\t}\n\tprepare_pswp_items(_items, _images_map) {\n\t\tvar me = this;\n\n\t\tif (_items) {\n\t\t\t// passed when more button clicked\n\t\t\tthis.items = this.items.concat(_items);\n\t\t\tthis.images_map = _images_map;\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tconst items = this.items.map(function (i) {\n\t\t\t\tconst query = 'img[data-name=\"' + i._name + '\"]';\n\t\t\t\tlet el = me.wrapper.find(query).get(0);\n\n\t\t\t\tlet width, height;\n\t\t\t\tif (el) {\n\t\t\t\t\twidth = el.naturalWidth;\n\t\t\t\t\theight = el.naturalHeight;\n\t\t\t\t}\n\n\t\t\t\tif (!el) {\n\t\t\t\t\tel = me.wrapper.find('.image-field[data-name=\"' + i._name + '\"]').get(0);\n\t\t\t\t\twidth = el.getBoundingClientRect().width;\n\t\t\t\t\theight = el.getBoundingClientRect().height;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsrc: i._image_url,\n\t\t\t\t\tmsrc: i._image_url,\n\t\t\t\t\tname: i.name,\n\t\t\t\t\tw: width,\n\t\t\t\t\th: height,\n\t\t\t\t\tel: el,\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.pswp_items = items;\n\t\t\tresolve();\n\t\t});\n\t}\n\tshow(docname) {\n\t\tthis.lib_ready.then(() => this.prepare_pswp_items()).then(() => this._show(docname));\n\t}\n\t_show(docname) {\n\t\tconst me = this;\n\t\tconst items = this.pswp_items;\n\t\tconst item_index = items.findIndex((item) => item.name === docname);\n\n\t\tvar options = {\n\t\t\tindex: item_index,\n\t\t\tgetThumbBoundsFn: function (index) {\n\t\t\t\tconst query = 'img[data-name=\"' + items[index]._name + '\"]';\n\t\t\t\tlet thumbnail = me.wrapper.find(query).get(0);\n\n\t\t\t\tif (!thumbnail) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n\t\t\t\t\trect = thumbnail.getBoundingClientRect();\n\n\t\t\t\treturn {\n\t\t\t\t\tx: rect.left,\n\t\t\t\t\ty: rect.top + pageYScroll,\n\t\t\t\t\tw: rect.width,\n\t\t\t\t};\n\t\t\t},\n\t\t\thistory: false,\n\t\t\tshareEl: false,\n\t\t\tshowHideOpacity: true,\n\t\t};\n\n\t\t// init\n\t\tthis.pswp = new PhotoSwipe(this.pswp_root.get(0), PhotoSwipeUI_Default, items, options);\n\t\tthis.browse_images();\n\t\tthis.pswp.init();\n\t}\n\tbrowse_images() {\n\t\tconst $more_items = this.pswp_root.find(\".pswp__more-items\");\n\t\tconst images_map = this.images_map;\n\t\tlet last_hide_timeout = null;\n\n\t\tthis.pswp.listen(\"afterChange\", function () {\n\t\t\tconst images = images_map[this.currItem.name];\n\t\t\tif (!images || images.length === 1) {\n\t\t\t\t$more_items.html(\"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thide_more_items_after_2s();\n\t\t\tconst html = images.map(img_html).join(\"\");\n\t\t\t$more_items.html(html);\n\t\t});\n\n\t\tthis.pswp.listen(\"beforeChange\", hide_more_items);\n\t\tthis.pswp.listen(\"initialZoomOut\", hide_more_items);\n\t\tthis.pswp.listen(\"destroy\", () => {\n\t\t\t$(document).off(\"mousemove\", hide_more_items_after_2s);\n\t\t});\n\n\t\t// Replace current image on click\n\t\t$more_items.on(\"click\", \".pswp__more-item\", (e) => {\n\t\t\tconst img_el = e.target;\n\t\t\tconst index = this.pswp.items.findIndex((i) => i.name === this.pswp.currItem.name);\n\n\t\t\tthis.pswp.goTo(index);\n\t\t\tthis.pswp.items.splice(index, 1, {\n\t\t\t\tsrc: img_el.src,\n\t\t\t\tw: img_el.naturalWidth,\n\t\t\t\th: img_el.naturalHeight,\n\t\t\t\tname: this.pswp.currItem.name,\n\t\t\t});\n\t\t\tthis.pswp.invalidateCurrItems();\n\t\t\tthis.pswp.updateSize(true);\n\t\t});\n\n\t\t// hide more-images 2s after mousemove\n\t\t$(document).on(\"mousemove\", hide_more_items_after_2s);\n\n\t\tfunction hide_more_items_after_2s() {\n\t\t\tclearTimeout(last_hide_timeout);\n\t\t\tshow_more_items();\n\t\t\tlast_hide_timeout = setTimeout(hide_more_items, 2000);\n\t\t}\n\n\t\tfunction show_more_items() {\n\t\t\t$more_items.show();\n\t\t}\n\n\t\tfunction hide_more_items() {\n\t\t\t$more_items.hide();\n\t\t}\n\n\t\tfunction img_html(src) {\n\t\t\treturn `<div class=\"pswp__more-item\">\n\t\t\t\t<img src=\"${src}\">\n\t\t\t</div>`;\n\t\t}\n\t}\n\tload_lib() {\n\t\treturn new Promise((resolve) => {\n\t\t\tvar asset_dir = \"assets/frappe/js/lib/photoswipe/\";\n\t\t\tfrappe.require(\n\t\t\t\t[\n\t\t\t\t\tasset_dir + \"photoswipe.css\",\n\t\t\t\t\tasset_dir + \"default-skin.css\",\n\t\t\t\t\tasset_dir + \"photoswipe.js\",\n\t\t\t\t\tasset_dir + \"photoswipe-ui-default.js\",\n\t\t\t\t],\n\t\t\t\tresolve\n\t\t\t);\n\t\t});\n\t}\n};\n", "/**\n * frappe.views.MapView\n */\nfrappe.provide(\"frappe.utils.utils\");\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.MapView = class MapView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Map\";\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\t\tthis.page_title = __(\"{0} Map\", [this.page_title]);\n\t}\n\n\tsetup_view() {}\n\n\ton_filter_change() {\n\t\tthis.get_coords();\n\t}\n\n\trender() {\n\t\tthis.get_coords().then(() => {\n\t\t\tthis.render_map_view();\n\t\t});\n\t\tthis.$paging_area.find(\".level-left\").append(\"<div></div>\");\n\t}\n\n\trender_map_view() {\n\t\tthis.map_id = frappe.dom.get_unique_id();\n\n\t\tthis.$result.html(`<div id=\"${this.map_id}\" class=\"map-view-container\"></div>`);\n\n\t\tL.Icon.Default.imagePath = \"/assets/frappe/images/leaflet/\";\n\t\tthis.map = L.map(this.map_id).setView(\n\t\t\tfrappe.utils.map_defaults.center,\n\t\t\tfrappe.utils.map_defaults.zoom\n\t\t);\n\n\t\tL.tileLayer(frappe.utils.map_defaults.tiles, frappe.utils.map_defaults.options).addTo(\n\t\t\tthis.map\n\t\t);\n\n\t\tL.control.scale().addTo(this.map);\n\t\tif (this.coords.features && this.coords.features.length) {\n\t\t\tthis.coords.features.forEach((coords) =>\n\t\t\t\tL.geoJSON(coords).bindPopup(coords.properties.name).addTo(this.map)\n\t\t\t);\n\t\t\tlet lastCoords = this.coords.features[0].geometry.coordinates.reverse();\n\t\t\tthis.map.panTo(lastCoords, 8);\n\t\t}\n\t}\n\n\tget_coords() {\n\t\tlet get_coords_method =\n\t\t\t(this.settings && this.settings.get_coords_method) || \"frappe.geo.utils.get_coords\";\n\n\t\tif (\n\t\t\tcur_list.meta.fields.find(\n\t\t\t\t(i) => i.fieldname === \"location\" && i.fieldtype === \"Geolocation\"\n\t\t\t)\n\t\t) {\n\t\t\tthis.type = \"location_field\";\n\t\t} else if (\n\t\t\tcur_list.meta.fields.find((i) => i.fieldname === \"latitude\") &&\n\t\t\tcur_list.meta.fields.find((i) => i.fieldname === \"longitude\")\n\t\t) {\n\t\t\tthis.type = \"coordinates\";\n\t\t}\n\t\treturn frappe\n\t\t\t.call({\n\t\t\t\tmethod: get_coords_method,\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tfilters: cur_list.filter_area.get(),\n\t\t\t\t\ttype: this.type,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tthis.coords = r.message;\n\t\t\t});\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.css\",\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.js\",\n\t\t];\n\t}\n};\n", "export default class KanbanSettings {\n\tconstructor({ kanbanview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw(__(\"DocType required\"));\n\t\t}\n\n\t\tthis.kanbanview = kanbanview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_fields();\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"show_labels\",\n\t\t\t\t\tlabel: __(\"Show Labels\"),\n\t\t\t\t\tfieldtype: \"Check\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields_html\",\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\thidden: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tthis.dialog.set_values(this.settings);\n\t\tthis.dialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\",\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.kanban_board.kanban_board.save_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tboard_name: this.settings.name,\n\t\t\t\t\tsettings: this.dialog.get_values(),\n\t\t\t\t},\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tthis.kanbanview.board = r.message;\n\t\t\t\t\tthis.kanbanview.render();\n\t\t\t\t\tthis.dialog.hide();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n\n\trefresh() {\n\t\tthis.setup_fields();\n\t\tthis.add_new_fields();\n\t\tthis.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tif (!this.settings.fields) {\n\t\t\tthis.update_fields();\n\t\t}\n\n\t\tthis.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tconst fields_html = this.dialog.get_field(\"fields_html\");\n\t\tconst wrapper = fields_html.$wrapper[0];\n\t\tlet fields = \"\";\n\n\t\tfor (let fieldname of this.fields) {\n\t\t\tlet field = this.get_docfield(fieldname);\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order sortable\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\"\n\t\t\t\t\tdata-fieldname=\"${field.fieldname}\"\n\t\t\t\t\tdata-label=\"${field.label}\"\n\t\t\t\t\tdata-type=\"${field.type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${__(field.label)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${field.fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: \".sortable-handle\",\n\t\t\tdraggable: \".sortable\",\n\t\t\tonUpdate: (params) => {\n\t\t\t\tthis.fields.splice(params.newIndex, 0, this.fields.splice(params.oldIndex, 1)[0]);\n\t\t\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\t\t\tthis.refresh();\n\t\t\t},\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet add_new_fields =\n\t\t\tthis.get_dialog_fields_wrapper().getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => this.show_column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet remove_fields =\n\t\t\tthis.get_dialog_fields_wrapper().getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () =>\n\t\t\t\tthis.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tget_dialog_fields_wrapper() {\n\t\treturn this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t}\n\n\tremove_fields(fieldname) {\n\t\tthis.fields = this.fields.filter((field) => field !== fieldname);\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\tthis.refresh();\n\t}\n\n\tupdate_fields() {\n\t\tconst wrapper = this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tthis.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tthis.fields.push(fields_order.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t}\n\n\tshow_column_selector() {\n\t\tlet dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: this.get_multiselect_fields(),\n\t\t\t\t\tcolumns: 2,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t\tdialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tthis.fields = dialog.get_values().fields || [];\n\t\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\t\tthis.refresh();\n\t\t\tdialog.hide();\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_fields() {\n\t\tthis.fields = this.settings.fields;\n\t\tthis.fields.uniqBy((f) => f.fieldname);\n\t}\n\n\tget_docfield(field_name) {\n\t\treturn (\n\t\t\tfrappe.meta.get_docfield(this.doctype, field_name) ||\n\t\t\tfrappe.model.get_std_field(field_name)\n\t\t);\n\t}\n\n\tget_multiselect_fields() {\n\t\tconst ignore_fields = [\n\t\t\t\"idx\",\n\t\t\t\"lft\",\n\t\t\t\"rgt\",\n\t\t\t\"old_parent\",\n\t\t\t\"_user_tags\",\n\t\t\t\"_liked_by\",\n\t\t\t\"_comments\",\n\t\t\t\"_assign\",\n\t\t\tthis.meta.title_field || \"name\",\n\t\t];\n\n\t\tconst ignore_fieldtypes = [\n\t\t\t\"Attach Image\",\n\t\t\t\"Text Editor\",\n\t\t\t\"HTML Editor\",\n\t\t\t\"Code\",\n\t\t\t\"Color\",\n\t\t\t...frappe.model.no_value_type,\n\t\t];\n\n\t\treturn frappe.model.std_fields\n\t\t\t.concat(this.kanbanview.get_fields_in_list_view())\n\t\t\t.filter(\n\t\t\t\t(field) =>\n\t\t\t\t\t!ignore_fields.includes(field.fieldname) &&\n\t\t\t\t\t!ignore_fieldtypes.includes(field.fieldtype)\n\t\t\t)\n\t\t\t.map((field) => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: __(field.label),\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: this.fields.includes(field.fieldname),\n\t\t\t\t};\n\t\t\t});\n\t}\n}\n", "import KanbanSettings from \"./kanban_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.KanbanView = class KanbanView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)[\"Kanban\"] || {};\n\t\t\tif (!user_settings.last_kanban_board) {\n\t\t\t\treturn new frappe.views.KanbanView({ doctype: doctype });\n\t\t\t}\n\n\t\t\troute.push(user_settings.last_kanban_board);\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget view_name() {\n\t\treturn \"Kanban\";\n\t}\n\n\tshow() {\n\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then((kanbans) => {\n\t\t\tif (!kanbans.length) {\n\t\t\t\treturn frappe.views.KanbanView.show_kanban_dialog(this.doctype, true);\n\t\t\t} else if (kanbans.length && frappe.get_route().length !== 4) {\n\t\t\t\treturn frappe.views.KanbanView.show_kanban_dialog(this.doctype, true);\n\t\t\t} else {\n\t\t\t\tthis.kanbans = kanbans;\n\n\t\t\t\treturn frappe.run_serially([\n\t\t\t\t\t() => this.show_skeleton(),\n\t\t\t\t\t() => this.fetch_meta(),\n\t\t\t\t\t() => this.hide_skeleton(),\n\t\t\t\t\t() => this.check_permissions(),\n\t\t\t\t\t() => this.init(),\n\t\t\t\t\t() => this.before_refresh(),\n\t\t\t\t\t() => this.refresh(),\n\t\t\t\t]);\n\t\t\t}\n\t\t});\n\t}\n\n\tinit() {\n\t\treturn super.init().then(() => {\n\t\t\tlet menu_length = this.page.menu.find(\".dropdown-item\").length;\n\t\t\tif (menu_length === 1) {\n\t\t\t\t// Only 'Refresh' (hidden) is present (always), dropdown is visibly empty\n\t\t\t\tthis.page.hide_menu();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tlet get_board_name = () => {\n\t\t\t\treturn this.kanbans.length && this.kanbans[0].name;\n\t\t\t};\n\n\t\t\tthis.board_name = frappe.get_route()[3] || get_board_name() || null;\n\t\t\tthis.page_title = __(this.board_name);\n\t\t\tthis.card_meta = this.get_card_meta();\n\t\t\tthis.page_length = 0;\n\n\t\t\treturn frappe.run_serially([\n\t\t\t\t() => this.set_board_perms_and_push_menu_items(),\n\t\t\t\t() => this.get_board(),\n\t\t\t]);\n\t\t});\n\t}\n\n\tset_board_perms_and_push_menu_items() {\n\t\t// needs server-side call as client-side document instance is absent before kanban render\n\t\treturn frappe.call({\n\t\t\tmethod: \"frappe.client.get_doc_permissions\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Kanban Board\",\n\t\t\t\tdocname: this.board_name,\n\t\t\t},\n\t\t\tcallback: (result) => {\n\t\t\t\tthis.board_perms = result.message.permissions || {};\n\t\t\t\tthis.push_menu_items();\n\t\t\t},\n\t\t});\n\t}\n\n\tpush_menu_items() {\n\t\tif (this.board_perms.write) {\n\t\t\tthis.menu_items.push({\n\t\t\t\tlabel: __(\"Save filters\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tthis.save_kanban_board_filters();\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tif (this.board_perms.delete) {\n\t\t\tthis.menu_items.push({\n\t\t\t\tlabel: __(\"Delete Kanban Board\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.confirm(\"Are you sure you want to proceed?\", () => {\n\t\t\t\t\t\tfrappe.db.delete_doc(\"Kanban Board\", this.board_name).then(() => {\n\t\t\t\t\t\t\tfrappe.show_alert(`Kanban Board ${this.board_name} deleted.`);\n\t\t\t\t\t\t\tfrappe.set_route(\"List\", this.doctype, \"List\");\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_paging_area() {\n\t\t// pass\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t}\n\n\tget_board() {\n\t\treturn frappe.db.get_doc(\"Kanban Board\", this.board_name).then((board) => {\n\t\t\tthis.board = board;\n\t\t\tthis.board.filters_array = JSON.parse(this.board.filters || \"[]\");\n\t\t\tthis.board.fields = JSON.parse(this.board.fields || \"[]\");\n\t\t\tthis.filters = this.board.filters_array;\n\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_card_layout = true;\n\t\tthis.hide_sort_selector = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.board.columns.length > 5) {\n\t\t\tthis.page.container.addClass(\"full-width\");\n\t\t}\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tsuper.set_fields();\n\t\tthis._add_field(this.card_meta.title_field);\n\t}\n\n\tbefore_render() {\n\t\tfrappe.model.user_settings.save(this.doctype, \"last_view\", this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_kanban_board: this.board_name,\n\t\t});\n\t}\n\n\trender_list() {}\n\n\ton_filter_change() {\n\t\tif (!this.board_perms.write) return; // avoid misleading ux\n\n\t\tif (JSON.stringify(this.board.filters_array) !== JSON.stringify(this.filter_area.get())) {\n\t\t\tthis.page.set_indicator(__(\"Not Saved\"), \"orange\");\n\t\t} else {\n\t\t\tthis.page.clear_indicator();\n\t\t}\n\t}\n\n\tsave_kanban_board_filters() {\n\t\tconst filters = this.filter_area.get();\n\n\t\tfrappe.db.set_value(\"Kanban Board\", this.board_name, \"filters\", filters).then((r) => {\n\t\t\tif (r.exc) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tindicator: \"red\",\n\t\t\t\t\tmessage: __(\"There was an error saving filters\"),\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfrappe.show_alert({\n\t\t\t\tindicator: \"green\",\n\t\t\t\tmessage: __(\"Filters saved\"),\n\t\t\t});\n\n\t\t\tthis.board.filters_array = filters;\n\t\t\tthis.on_filter_change();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\tthis.fields.push([this.board.field_name, this.board.reference_doctype]);\n\t\treturn super.get_fields();\n\t}\n\n\trender() {\n\t\tconst board_name = this.board_name;\n\t\tif (!this.kanban) {\n\t\t\tthis.kanban = new frappe.views.KanbanBoard({\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tboard: this.board,\n\t\t\t\tboard_name: board_name,\n\t\t\t\tcards: this.data,\n\t\t\t\tcard_meta: this.card_meta,\n\t\t\t\twrapper: this.$result,\n\t\t\t\tcur_list: this,\n\t\t\t\tuser_settings: this.view_user_settings,\n\t\t\t});\n\t\t} else if (board_name === this.kanban.board_name) {\n\t\t\tthis.kanban.update(this.data);\n\t\t}\n\t}\n\n\tget_card_meta() {\n\t\tvar meta = frappe.get_meta(this.doctype);\n\t\t// preserve route options erased by new doc\n\t\tlet route_options = { ...frappe.route_options };\n\t\tvar doc = frappe.model.get_new_doc(this.doctype);\n\t\tfrappe.route_options = route_options;\n\t\tvar title_field = null;\n\t\tvar quick_entry = false;\n\n\t\tif (this.meta.title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, this.meta.title_field);\n\t\t}\n\n\t\tthis.meta.fields.forEach((df) => {\n\t\t\tconst is_valid_field =\n\t\t\t\tin_list([\"Data\", \"Text\", \"Small Text\", \"Text Editor\"], df.fieldtype) && !df.hidden;\n\n\t\t\tif (is_valid_field && !title_field) {\n\t\t\t\t// can be mapped to textarea\n\t\t\t\ttitle_field = df;\n\t\t\t}\n\t\t});\n\n\t\t// quick entry\n\t\tvar mandatory = meta.fields.filter((df) => df.reqd && !doc[df.fieldname]);\n\n\t\tif (\n\t\t\tmandatory.some((df) => frappe.model.table_fields.includes(df.fieldtype)) ||\n\t\t\tmandatory.length > 1\n\t\t) {\n\t\t\tquick_entry = true;\n\t\t}\n\n\t\tif (!title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, \"name\");\n\t\t}\n\n\t\treturn {\n\t\t\tquick_entry: quick_entry,\n\t\t\ttitle_field: title_field,\n\t\t};\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"Kanban Settings\", null, \"Button in kanban view menu\"),\n\t\t\taction: () => this.show_kanban_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_kanban_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew KanbanSettings({\n\t\t\t\tkanbanview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.board,\n\t\t\t\tmeta: frappe.get_meta(this.doctype),\n\t\t\t});\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\treturn \"kanban_board.bundle.js\";\n\t}\n};\n\nfrappe.views.KanbanView.get_kanbans = function (doctype) {\n\tlet kanbans = [];\n\n\treturn get_kanban_boards().then((kanban_boards) => {\n\t\tif (kanban_boards) {\n\t\t\tkanban_boards.forEach((board) => {\n\t\t\t\tlet route = `/app/${frappe.router.slug(board.reference_doctype)}/view/kanban/${\n\t\t\t\t\tboard.name\n\t\t\t\t}`;\n\t\t\t\tkanbans.push({ name: board.name, route: route });\n\t\t\t});\n\t\t}\n\n\t\treturn kanbans;\n\t});\n\n\tfunction get_kanban_boards() {\n\t\treturn frappe\n\t\t\t.call(\"frappe.desk.doctype.kanban_board.kanban_board.get_kanban_boards\", { doctype })\n\t\t\t.then((r) => r.message);\n\t}\n};\n\nfrappe.views.KanbanView.show_kanban_dialog = function (doctype) {\n\tlet dialog = new_kanban_dialog();\n\tdialog.show();\n\n\tfunction make_kanban_board(board_name, field_name, project) {\n\t\treturn frappe.call({\n\t\t\tmethod: \"frappe.desk.doctype.kanban_board.kanban_board.quick_kanban_board\",\n\t\t\targs: {\n\t\t\t\tdoctype,\n\t\t\t\tboard_name,\n\t\t\t\tfield_name,\n\t\t\t\tproject,\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tvar kb = r.message;\n\t\t\t\tif (kb.filters) {\n\t\t\t\t\tfrappe.provide(\"frappe.kanban_filters\");\n\t\t\t\t\tfrappe.kanban_filters[kb.kanban_board_name] = kb.filters;\n\t\t\t\t}\n\t\t\t\tfrappe.set_route(\"List\", doctype, \"Kanban\", kb.kanban_board_name);\n\t\t\t},\n\t\t});\n\t}\n\n\tfunction new_kanban_dialog() {\n\t\t/* Kanban dialog can show either \"Save\" or \"Customize Form\" option depending if any Select fields exist in the DocType for Kanban creation\n\t\t */\n\n\t\tconst select_fields = frappe.get_meta(doctype).fields.filter((df) => {\n\t\t\treturn df.fieldtype === \"Select\" && df.fieldname !== \"kanban_column\";\n\t\t});\n\t\tconst dialog_fields = get_fields_for_dialog(select_fields);\n\t\tconst to_save = select_fields.length > 0;\n\t\tconst primary_action_label = to_save ? __(\"Save\") : __(\"Customize Form\");\n\t\tconst dialog_title = to_save ? __(\"New Kanban Board\") : __(\"No Select Field Found\");\n\n\t\tlet primary_action = () => {\n\t\t\tif (to_save) {\n\t\t\t\tconst values = dialog.get_values();\n\t\t\t\tmake_kanban_board(values.board_name, values.field_name, values.project).then(\n\t\t\t\t\t() => dialog.hide(),\n\t\t\t\t\t(err) => frappe.msgprint(err)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tfrappe.set_route(\"Form\", \"Customize Form\", { doc_type: doctype });\n\t\t\t}\n\t\t};\n\n\t\treturn new frappe.ui.Dialog({\n\t\t\ttitle: dialog_title,\n\t\t\tfields: dialog_fields,\n\t\t\tprimary_action_label,\n\t\t\tprimary_action,\n\t\t});\n\t}\n\n\tfunction get_fields_for_dialog(select_fields) {\n\t\tif (!select_fields.length) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t\toptions: `\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p class=\"text-medium\">\n\t\t\t\t\t\t${__(\n\t\t\t\t\t\t\t'No fields found that can be used as a Kanban Column. Use the Customize Form to add a Custom Field of type \"Select\".'\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tfieldname: \"board_name\",\n\t\t\t\tlabel: __(\"Kanban Board Name\"),\n\t\t\t\treqd: 1,\n\t\t\t\tdescription: [\"Note\", \"ToDo\"].includes(doctype)\n\t\t\t\t\t? __(\"This Kanban Board will be private\")\n\t\t\t\t\t: \"\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"field_name\",\n\t\t\t\tlabel: __(\"Columns based on\"),\n\t\t\t\toptions: select_fields.map((df) => ({ label: df.label, value: df.fieldname })),\n\t\t\t\tdefault: select_fields[0],\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t];\n\n\t\tif (doctype === \"Task\") {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tfieldname: \"project\",\n\t\t\t\tlabel: __(\"Project\"),\n\t\t\t\toptions: \"Project\",\n\t\t\t});\n\t\t}\n\n\t\treturn fields;\n\t}\n};\n", "/**\n * frappe.views.InboxView\n */\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.InboxView = class InboxView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (!route[3] && frappe.boot.email_accounts.length) {\n\t\t\tlet email_account;\n\t\t\tif (frappe.boot.email_accounts[0].email_id == \"All Accounts\") {\n\t\t\t\temail_account = \"All Accounts\";\n\t\t\t} else {\n\t\t\t\temail_account = frappe.boot.email_accounts[0].email_account;\n\t\t\t}\n\t\t\tfrappe.set_route(\"List\", \"Communication\", \"Inbox\", email_account);\n\t\t\treturn true;\n\t\t} else if (!route[3] || (route[3] !== \"All Accounts\" && !is_valid(route[3]))) {\n\t\t\tfrappe.throw(\n\t\t\t\t__(\n\t\t\t\t\t\"No email account associated with the User. Please add an account under User > Email Inbox.\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\n\t\tfunction is_valid(email_account) {\n\t\t\treturn frappe.boot.email_accounts.find((d) => d.email_account === email_account);\n\t\t}\n\t}\n\n\tget view_name() {\n\t\treturn \"Inbox\";\n\t}\n\n\tshow() {\n\t\tsuper.show();\n\t\t// save email account in user_settings\n\t\tthis.save_view_user_settings({\n\t\t\tlast_email_account: this.current_email_account,\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || \"communication_date\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || \"desc\";\n\n\t\tthis.email_account = frappe.get_route()[3];\n\t\tthis.page_title = this.email_account;\n\t\tthis.filters = this.get_inbox_filters();\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\t\tthis.columns.push({\n\t\t\ttype: \"Subject\",\n\t\t\tdf: {\n\t\t\t\tlabel: __(\"Subject\"),\n\t\t\t\tfieldname: \"subject\",\n\t\t\t},\n\t\t});\n\t\tthis.columns.push({\n\t\t\ttype: \"Field\",\n\t\t\tdf: {\n\t\t\t\tlabel: this.is_sent_emails ? __(\"To\") : __(\"From\"),\n\t\t\t\tfieldname: this.is_sent_emails ? \"recipients\" : \"sender\",\n\t\t\t},\n\t\t});\n\t}\n\n\tget_seen_class(doc) {\n\t\tconst seen =\n\t\t\tBoolean(doc.seen) || JSON.parse(doc._seen || \"[]\").includes(frappe.session.user)\n\t\t\t\t? \"\"\n\t\t\t\t: \"bold\";\n\t\treturn seen;\n\t}\n\n\tget is_sent_emails() {\n\t\tconst f = this.filter_area.get().find((filter) => filter[1] === \"sent_or_received\");\n\t\treturn f && f[3] === \"Sent\";\n\t}\n\n\trender_header() {\n\t\tthis.$result.find(\".list-row-head\").remove();\n\t\tthis.$result.prepend(this.get_header_html());\n\t}\n\n\trender() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_list();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\tget_meta_html(email) {\n\t\tconst attachment = email.has_attachment\n\t\t\t? `<span class=\"fa fa-paperclip fa-large\" title=\"${__(\"Has Attachments\")}\"></span>`\n\t\t\t: \"\";\n\n\t\tlet link = \"\";\n\t\tif (email.reference_doctype && email.reference_doctype !== this.doctype) {\n\t\t\tlink = `<a class=\"text-muted grey\"\n\t\t\t\thref=\"${frappe.utils.get_form_link(email.reference_doctype, email.reference_name)}\"\n\t\t\t\ttitle=\"${__(\"Linked with {0}\", [email.reference_doctype])}\">\n\t\t\t\t<i class=\"fa fa-link fa-large\"></i>\n\t\t\t</a>`;\n\t\t}\n\n\t\tconst communication_date = comment_when(email.communication_date, true);\n\t\tconst status =\n\t\t\temail.status == \"Closed\"\n\t\t\t\t? `<span class=\"fa fa-check fa-large\" title=\"${__(email.status)}\"></span>`\n\t\t\t\t: email.status == \"Replied\"\n\t\t\t\t? `<span class=\"fa fa-mail-reply fa-large\" title=\"${__(email.status)}\"></span>`\n\t\t\t\t: \"\";\n\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${link}\n\t\t\t\t${attachment}\n\t\t\t\t${status}\n\t\t\t\t${communication_date}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_inbox_filters() {\n\t\tvar email_account = this.email_account;\n\t\tvar default_filters = [\n\t\t\t[\"Communication\", \"communication_type\", \"=\", \"Communication\", true],\n\t\t\t[\"Communication\", \"communication_medium\", \"=\", \"Email\", true],\n\t\t];\n\t\tvar filters = [];\n\t\tif (email_account === \"Sent\") {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Sent\", true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t} else if (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"email_status\", \"=\", email_account, true],\n\t\t\t\t[\"Communication\", \"email_account\", \"in\", frappe.boot.all_accounts, true],\n\t\t\t]);\n\t\t} else {\n\t\t\tvar op = \"=\";\n\t\t\tif (email_account == \"All Accounts\") {\n\t\t\t\top = \"in\";\n\t\t\t\temail_account = frappe.boot.all_accounts;\n\t\t\t}\n\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Received\", true],\n\t\t\t\t[\"Communication\", \"status\", \"=\", \"Open\", true],\n\t\t\t\t[\"Communication\", \"email_account\", op, email_account, true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tget_no_result_message() {\n\t\tvar email_account = this.email_account;\n\t\tvar args;\n\t\tif (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\treturn __(\"No {0} mail\", [email_account]);\n\t\t} else if (!email_account && !frappe.boot.email_accounts.length) {\n\t\t\t// email account is not configured\n\t\t\targs = {\n\t\t\t\tdoctype: \"Email Account\",\n\t\t\t\tmsg: __(\"No Email Account\"),\n\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t};\n\t\t} else {\n\t\t\t// no sent mail\n\t\t\targs = {\n\t\t\t\tdoctype: \"Communication\",\n\t\t\t\tmsg: __(\"No Emails\"),\n\t\t\t\tlabel: __(\"Compose Email\"),\n\t\t\t};\n\t\t}\n\n\t\tconst html = frappe.model.can_create(args.doctype)\n\t\t\t? `<p>${args.msg}</p>\n\t\t\t<p>\n\t\t\t\t<button class=\"btn btn-primary btn-sm btn-new-doc\">\n\t\t\t\t\t${args.label}\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t`\n\t\t\t: `<p>${__(\"No Email Accounts Assigned\")}</p>`;\n\n\t\treturn `\n\t\t\t<div class=\"msg-box no-border\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tmake_new_doc() {\n\t\tif (!this.email_account && !frappe.boot.email_accounts.length) {\n\t\t\tfrappe.route_options = {\n\t\t\t\temail_id: frappe.session.user_email,\n\t\t\t};\n\t\t\tfrappe.new_doc(\"Email Account\");\n\t\t} else {\n\t\t\tnew frappe.views.CommunicationComposer();\n\t\t}\n\t}\n};\n", "frappe.provide(\"frappe.views\");\n\nfrappe.views.FileView = class FileView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 2) {\n\t\t\tconst view_user_settings = frappe.get_user_settings(\"File\", \"File\");\n\t\t\tfrappe.set_route(\n\t\t\t\t\"List\",\n\t\t\t\t\"File\",\n\t\t\t\tview_user_settings.last_folder || frappe.boot.home_folder\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn redirect_to_home_if_invalid_route();\n\t}\n\n\tget view_name() {\n\t\treturn \"File\";\n\t}\n\n\tshow() {\n\t\tif (!redirect_to_home_if_invalid_route()) {\n\t\t\tsuper.show();\n\t\t}\n\t}\n\n\tsetup_view() {\n\t\tthis.render_header();\n\t\tthis.setup_events();\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"file-view\");\n\t\tthis.add_file_action_buttons();\n\t\tthis.page.add_button(__(\"Toggle Grid View\"), () => {\n\t\t\tfrappe.views.FileView.grid_view = !frappe.views.FileView.grid_view;\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`<div class=\"no-result\">\n\t\t\t<div class=\"breadcrumbs\">${this.get_breadcrumbs_html()}</div>\n\t\t\t<div class=\"text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t</div>`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tget_args() {\n\t\tlet args = super.get_args();\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tObject.assign(args, {\n\t\t\t\torder_by: `is_folder desc, ${this.sort_by} ${this.sort_order}`,\n\t\t\t});\n\t\t}\n\t\treturn args;\n\t}\n\n\tset_breadcrumbs() {\n\t\tconst route = frappe.get_route();\n\t\troute.splice(-1);\n\t\tconst last_folder = route[route.length - 1];\n\t\tif (last_folder === \"File\") return;\n\n\t\tfrappe.breadcrumbs.add({\n\t\t\ttype: \"Custom\",\n\t\t\tlabel: __(\"Home\"),\n\t\t\troute: \"/app/List/File/Home\",\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"File Manager\");\n\n\t\t\tconst route = frappe.get_route();\n\t\t\tthis.current_folder = route.slice(2).join(\"/\") || \"Home\";\n\t\t\tthis.filters = [[\"File\", \"folder\", \"=\", this.current_folder, true]];\n\t\t\tthis.order_by = this.view_user_settings.order_by || \"file_name asc\";\n\n\t\t\tthis.menu_items = this.menu_items.concat(this.file_menu_items());\n\t\t});\n\t}\n\n\tfile_menu_items() {\n\t\tconst items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Home\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"New Folder\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.prompt(\n\t\t\t\t\t\t__(\"Name\"),\n\t\t\t\t\t\t(values) => {\n\t\t\t\t\t\t\tif (values.value.indexOf(\"/\") > -1) {\n\t\t\t\t\t\t\t\tfrappe.throw(__(\"Folder name should not include '/' (slash)\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\tfile_name: values.value,\n\t\t\t\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod: \"frappe.core.api.file.create_new_folder\",\n\t\t\t\t\t\t\t\targs: data,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t__(\"Enter folder name\"),\n\t\t\t\t\t\t__(\"Create\")\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Import Zip\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t\t\trestrictions: {\n\t\t\t\t\t\t\tallowed_file_types: [\".zip\"],\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton_success: (file) => {\n\t\t\t\t\t\t\tfrappe.show_alert(__(\"Unzipping files...\"));\n\t\t\t\t\t\t\tfrappe\n\t\t\t\t\t\t\t\t.call(\"frappe.core.api.file.unzip_file\", {\n\t\t\t\t\t\t\t\t\tname: file.name,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\t\t\tfrappe.show_alert(__(\"Unzipped {0} files\", [r.message]));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\treturn items;\n\t}\n\n\tadd_file_action_buttons() {\n\t\tthis.$cut_button = this.page\n\t\t\t.add_button(__(\"Cut\"), () => {\n\t\t\t\tfrappe.file_manager.cut(this.get_checked_items(), this.current_folder);\n\t\t\t\tthis.$checks.parents(\".file-wrapper\").addClass(\"cut\");\n\t\t\t})\n\t\t\t.hide();\n\n\t\tthis.$paste_btn = this.page\n\t\t\t.add_button(__(\"Paste\"), () => frappe.file_manager.paste(this.current_folder))\n\t\t\t.hide();\n\n\t\tthis.page.add_actions_menu_item(__(\"Export as zip\"), () => {\n\t\t\tlet docnames = this.get_checked_items(true);\n\t\t\tif (docnames.length) {\n\t\t\t\topen_url_post(\"/api/method/frappe.core.api.file.zip_files\", {\n\t\t\t\t\tfiles: JSON.stringify(docnames),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_fields() {\n\t\tthis.fields = this.meta.fields\n\t\t\t.filter((df) => frappe.model.is_value_type(df.fieldtype) && !df.hidden)\n\t\t\t.map((df) => df.fieldname)\n\t\t\t.concat([\"name\", \"modified\", \"creation\"]);\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\n\t\tthis.data = this.data.map((d) => this.prepare_datum(d));\n\n\t\t// Bring folders to the top\n\t\tconst { sort_by } = this.sort_selector;\n\t\tif (sort_by === \"file_name\") {\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tif (a.is_folder && !b.is_folder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (!a.is_folder && b.is_folder) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tprepare_datum(d) {\n\t\tlet icon_class = \"\";\n\t\tlet type = \"\";\n\t\tif (d.is_folder) {\n\t\t\ticon_class = \"folder-normal\";\n\t\t\ttype = \"folder\";\n\t\t} else if (frappe.utils.is_image_file(d.file_name)) {\n\t\t\ticon_class = \"image\";\n\t\t\ttype = \"image\";\n\t\t} else {\n\t\t\ticon_class = \"file\";\n\t\t\ttype = \"file\";\n\t\t}\n\n\t\tlet title = d.file_name || d.file_url;\n\t\ttitle = title.slice(0, 60);\n\t\td._title = title;\n\t\td.icon_class = icon_class;\n\t\td._type = type;\n\n\t\td.subject_html = `\n\t\t\t${frappe.utils.icon(icon_class)}\n\t\t\t<span>${title}</span>\n\t\t\t${d.is_private ? '<i class=\"fa fa-lock fa-fw text-warning\"></i>' : \"\"}\n\t\t`;\n\t\treturn d;\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tfrappe.model.user_settings.save(\"File\", \"grid_view\", frappe.views.FileView.grid_view);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_folder: this.current_folder,\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.$result.empty().removeClass(\"file-grid-view\");\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render();\n\t\t\tthis.render_header();\n\t\t}\n\t}\n\n\tafter_render() {}\n\n\trender_list() {\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render_list();\n\t\t}\n\t}\n\n\trender_grid_view() {\n\t\tlet html = this.data\n\t\t\t.map((d) => {\n\t\t\t\tconst icon_class = d.icon_class + \"-large\";\n\t\t\t\tlet file_body_html =\n\t\t\t\t\td._type == \"image\"\n\t\t\t\t\t\t? `<div class=\"file-image\"><img src=\"${d.file_url}\" alt=\"${d.file_name}\"></div>`\n\t\t\t\t\t\t: frappe.utils.icon(icon_class, {\n\t\t\t\t\t\t\t\twidth: \"40px\",\n\t\t\t\t\t\t\t\theight: \"45px\",\n\t\t\t\t\t\t  });\n\t\t\t\tconst name = escape(d.name);\n\t\t\t\tconst draggable = d.type == \"Folder\" ? false : true;\n\t\t\t\treturn `\n\t\t\t\t<a href=\"${this.get_route_url(d)}\"\n\t\t\t\t\tdraggable=\"${draggable}\" class=\"file-wrapper ellipsis\" data-name=\"${name}\">\n\t\t\t\t\t<div class=\"file-header\">\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\" type=\"checkbox\" data-name=\"${name}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-body\">\n\t\t\t\t\t\t${file_body_html}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-footer\">\n\t\t\t\t\t\t<div class=\"file-title ellipsis\">${d._title}</div>\n\t\t\t\t\t\t<div class=\"file-creation\">${this.get_creation_date(d)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tthis.$result.addClass(\"file-grid-view\");\n\t\tthis.$result.empty().html(\n\t\t\t`<div class=\"file-grid\">\n\t\t\t\t${html}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tget_breadcrumbs_html() {\n\t\tconst route = frappe.get_route();\n\t\tconst folders = route.slice(2);\n\n\t\treturn folders\n\t\t\t.map((folder, i) => {\n\t\t\t\tif (i === folders.length - 1) {\n\t\t\t\t\treturn `<span>${folder}</span>`;\n\t\t\t\t}\n\t\t\t\tconst route = folders.reduce((acc, curr, j) => {\n\t\t\t\t\tif (j <= i) {\n\t\t\t\t\t\tacc += \"/\" + curr;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, \"/app/file/view\");\n\n\t\t\t\treturn `<a href=\"${route}\">${folder}</a>`;\n\t\t\t})\n\t\t\t.join(\"&nbsp;/&nbsp;\");\n\t}\n\n\tget_header_html() {\n\t\tconst breadcrumbs_html = this.get_breadcrumbs_html();\n\n\t\tlet header_selector_html = !frappe.views.FileView.grid_view\n\t\t\t? `<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"${__(\n\t\t\t\t\t\"Select All\"\n\t\t\t  )}\">`\n\t\t\t: \"\";\n\n\t\tlet header_columns_html = !frappe.views.FileView.grid_view\n\t\t\t? `<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Size\")}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Created\")}</span>\n\t\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\tlet subject_html = `\n\t\t\t<div class=\"list-row-col list-subject level\">\n\t\t\t\t${header_selector_html}\n\t\t\t\t<span class=\"level-item\">${breadcrumbs_html}</span>\n\t\t\t</div>\n\t\t\t${header_columns_html}\n\t\t`;\n\n\t\treturn this.get_header_html_skeleton(subject_html, '<span class=\"list-count\"></span>');\n\t}\n\n\tget_route_url(file) {\n\t\treturn file.is_folder ? \"/app/List/File/\" + file.name : this.get_form_link(file);\n\t}\n\n\tget_creation_date(file) {\n\t\tconst [date] = file.creation.split(\" \");\n\t\tlet created_on;\n\t\tif (date === frappe.datetime.now_date()) {\n\t\t\tcreated_on = comment_when(file.creation);\n\t\t} else {\n\t\t\tcreated_on = frappe.datetime.str_to_user(date);\n\t\t}\n\t\treturn created_on;\n\t}\n\n\tget_left_html(file) {\n\t\tfile = this.prepare_datum(file);\n\t\tconst file_size = file.file_size ? frappe.form.formatters.FileSize(file.file_size) : \"\";\n\t\tconst route_url = this.get_route_url(file);\n\n\t\treturn `\n\t\t\t<div class=\"list-row-col ellipsis list-subject level\">\n\t\t\t\t<span class=\"level-item file-select\">\n\t\t\t\t\t<input class=\"list-row-checkbox\"\n\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${file.name}\">\n\t\t\t\t</span>\n\t\t\t\t<span class=\"level-item  ellipsis\" title=\"${file.file_name}\">\n\t\t\t\t\t<a class=\"ellipsis\" href=\"${route_url}\" title=\"${file.file_name}\">\n\t\t\t\t\t\t${file.subject_html}\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${file_size}</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${this.get_creation_date(file)}</span>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_right_html(file) {\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${comment_when(file.modified)}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tsetup_events() {\n\t\tsuper.setup_events();\n\t\tthis.setup_drag_events();\n\t}\n\n\tsetup_drag_events() {\n\t\tthis.$result.on(\"dragstart\", \".files .file-wrapper\", (e) => {\n\t\t\te.stopPropagation();\n\t\t\te.originalEvent.dataTransfer.setData(\"Text\", $(e.currentTarget).attr(\"data-name\"));\n\t\t\te.target.style.opacity = \"0.4\";\n\t\t\tfrappe.file_manager.cut(\n\t\t\t\t[{ name: $(e.currentTarget).attr(\"data-name\") }],\n\t\t\t\tthis.current_folder\n\t\t\t);\n\t\t});\n\n\t\tthis.$result.on(\n\t\t\t\"dragover\",\n\t\t\t(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis.$result.on(\"dragend\", \".files .file-wrapper\", (e) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.target.style.opacity = \"1\";\n\t\t});\n\n\t\tthis.$result.on(\"drop\", (e) => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconst $el = $(e.target).parents(\".file-wrapper\");\n\n\t\t\tlet dataTransfer = e.originalEvent.dataTransfer;\n\t\t\tif (!dataTransfer) return;\n\n\t\t\tif (dataTransfer.files && dataTransfer.files.length > 0) {\n\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\tfiles: dataTransfer.files,\n\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t});\n\t\t\t} else if (dataTransfer.getData(\"Text\")) {\n\t\t\t\tif ($el.parents(\".folders\").length !== 0) {\n\t\t\t\t\tconst file_name = dataTransfer.getData(\"Text\");\n\t\t\t\t\tconst folder_name = decodeURIComponent($el.attr(\"data-name\"));\n\t\t\t\t\tfrappe.file_manager.paste(folder_name);\n\t\t\t\t\tfrappe.show_alert(`File ${file_name} moved to ${folder_name}`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ton_row_checked() {\n\t\tsuper.on_row_checked();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ttoggle_cut_paste_buttons() {\n\t\tconst hide_paste_btn =\n\t\t\t!frappe.file_manager.can_paste ||\n\t\t\tfrappe.file_manager.old_folder === this.current_folder;\n\t\tconst hide_cut_btn = !(this.$checks && this.$checks.length > 0);\n\n\t\tthis.$paste_btn.toggle(!hide_paste_btn);\n\t\tthis.$cut_button.toggle(!hide_cut_btn);\n\t}\n};\n\nfrappe.views.FileView.grid_view = frappe.get_user_settings(\"File\").grid_view || false;\n\nfunction redirect_to_home_if_invalid_route() {\n\tconst route = frappe.get_route();\n\tif (route[2] === \"List\") {\n\t\t// if the user somehow redirects to List/File/List\n\t\t// redirect back to Home\n\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "import \"./frappe/ui/listing.html\";\n\nimport \"./frappe/model/indicator.js\";\nimport \"./frappe/ui/filters/filter.js\";\nimport \"./frappe/ui/filters/filter_list.js\";\nimport \"./frappe/ui/filters/field_select.js\";\nimport \"./frappe/ui/filters/edit_filter.html\";\nimport \"./frappe/ui/tags.js\";\nimport \"./frappe/ui/tag_editor.js\";\nimport \"./frappe/ui/like.js\";\n// import \"./frappe/ui/liked_by.html\";\nimport \"../html/print_template.html\";\n\nimport \"./frappe/list/base_list.js\";\nimport \"./frappe/list/list_view.js\";\nimport \"./frappe/list/list_factory.js\";\n\nimport \"./frappe/list/list_view_select.js\";\nimport \"./frappe/list/list_sidebar.js\";\nimport \"./frappe/list/list_sidebar.html\";\nimport \"./frappe/list/list_sidebar_stat.html\";\nimport \"./frappe/list/list_sidebar_group_by.js\";\nimport \"./frappe/list/list_view_permission_restrictions.html\";\n\nimport \"./frappe/views/gantt/gantt_view.js\";\nimport \"./frappe/views/calendar/calendar.js\";\nimport \"./frappe/views/dashboard/dashboard_view.js\";\nimport \"./frappe/views/image/image_view.js\";\nimport \"./frappe/views/map/map_view.js\";\nimport \"./frappe/views/kanban/kanban_view.js\";\nimport \"./frappe/views/inbox/inbox_view.js\";\nimport \"./frappe/views/file/file_view.js\";\n\nimport \"./frappe/views/treeview.js\";\nimport \"./frappe/views/interaction.js\";\n\nimport \"./frappe/views/image/image_view_item_row.html\";\nimport \"./frappe/views/image/photoswipe_dom.html\";\n\nimport \"./frappe/views/kanban/kanban_board.html\";\nimport \"./frappe/views/kanban/kanban_column.html\";\nimport \"./frappe/views/kanban/kanban_card.html\";\n", "// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nfrappe.provide(\"frappe.views\");\nfrappe.provide(\"frappe.interaction_settings\");\n\nfrappe.views.InteractionComposer = class InteractionComposer {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: me.title || me.subject || __(\"New Activity\"),\n\t\t\tno_submit_on_enter: true,\n\t\t\tfields: me.get_fields(),\n\t\t\tprimary_action_label: __(\"Create\"),\n\t\t\tprimary_action: function () {\n\t\t\t\tme.create_action();\n\t\t\t},\n\t\t});\n\n\t\t$(document).on(\"upload_complete\", function (event, attachment) {\n\t\t\tif (me.dialog.display) {\n\t\t\t\tlet wrapper = $(me.dialog.fields_dict.select_attachments.wrapper);\n\n\t\t\t\t// find already checked items\n\t\t\t\tlet checked_items = wrapper.find(\"[data-file-name]:checked\").map(function () {\n\t\t\t\t\treturn $(this).attr(\"data-file-name\");\n\t\t\t\t});\n\n\t\t\t\t// reset attachment list\n\t\t\t\tme.render_attach();\n\n\t\t\t\t// check latest added\n\t\t\t\tchecked_items.push(attachment.name);\n\n\t\t\t\t$.each(checked_items, function (i, filename) {\n\t\t\t\t\twrapper.find('[data-file-name=\"' + filename + '\"]').prop(\"checked\", true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tme.prepare();\n\t\tme.dialog.show();\n\t}\n\n\tget_fields() {\n\t\tlet me = this;\n\t\tlet interaction_docs = Object.keys(get_doc_mappings());\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Reference\"),\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"interaction_type\",\n\t\t\t\toptions: interaction_docs,\n\t\t\t\treqd: 1,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet values = me.get_values();\n\t\t\t\t\tme.get_fields().forEach((field) => {\n\t\t\t\t\t\tif (field.fieldname != \"interaction_type\") {\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"reqd\", 0);\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"hidden\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tme.set_reqd_hidden_fields(values);\n\t\t\t\t\tme.get_event_categories();\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Category\"),\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"category\",\n\t\t\t\toptions: \"\",\n\t\t\t\thidden: 1,\n\t\t\t},\n\t\t\t{ label: __(\"Public\"), fieldtype: \"Check\", fieldname: \"public\", default: \"1\" },\n\t\t\t{ fieldtype: \"Column Break\" },\n\t\t\t{ label: __(\"Date\"), fieldtype: \"Datetime\", fieldname: \"due_date\" },\n\t\t\t{\n\t\t\t\tlabel: __(\"Assigned To\"),\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tfieldname: \"assigned_to\",\n\t\t\t\toptions: \"User\",\n\t\t\t},\n\t\t\t{ fieldtype: \"Section Break\" },\n\t\t\t{ label: __(\"Summary\"), fieldtype: \"Data\", fieldname: \"summary\" },\n\t\t\t{ fieldtype: \"Section Break\" },\n\t\t\t{ fieldtype: \"Text Editor\", fieldname: \"description\" },\n\t\t\t{ fieldtype: \"Section Break\" },\n\t\t\t{\n\t\t\t\tlabel: __(\"Select Attachments\"),\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\tfieldname: \"select_attachments\",\n\t\t\t},\n\t\t];\n\n\t\treturn fields;\n\t}\n\n\tget_event_categories() {\n\t\tlet me = this;\n\t\tfrappe.model.with_doctype(\"Event\", () => {\n\t\t\tlet categories = frappe.meta\n\t\t\t\t.get_docfield(\"Event\", \"event_category\")\n\t\t\t\t.options.split(\"\\n\");\n\t\t\tme.dialog.get_input(\"category\").empty().add_options(categories);\n\t\t});\n\t}\n\n\tprepare() {\n\t\tthis.setup_attach();\n\t}\n\n\tset_reqd_hidden_fields(values) {\n\t\tlet me = this;\n\t\tif (values && \"interaction_type\" in values) {\n\t\t\tlet doc_mapping = get_doc_mappings();\n\t\t\tdoc_mapping[values.interaction_type][\"reqd_fields\"].forEach((value) => {\n\t\t\t\tme.dialog.set_df_property(value, \"reqd\", 1);\n\t\t\t});\n\n\t\t\tdoc_mapping[values.interaction_type][\"hidden_fields\"].forEach((value) => {\n\t\t\t\tme.dialog.set_df_property(value, \"hidden\", 1);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_attach() {\n\t\tvar fields = this.dialog.fields_dict;\n\t\tvar attach = $(fields.select_attachments.wrapper);\n\n\t\tif (!this.attachments) {\n\t\t\tthis.attachments = [];\n\t\t}\n\n\t\tlet args = {\n\t\t\tfolder: \"Home/Attachments\",\n\t\t\ton_success: (attachment) => this.attachments.push(attachment),\n\t\t};\n\n\t\tif (this.frm) {\n\t\t\targs = {\n\t\t\t\tdoctype: this.frm.doctype,\n\t\t\t\tdocname: this.frm.docname,\n\t\t\t\tfolder: \"Home/Attachments\",\n\t\t\t\ton_success: (attachment) => {\n\t\t\t\t\tthis.frm.attachments.attachment_uploaded(attachment);\n\t\t\t\t\tthis.render_attach();\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\t$(\n\t\t\t\"<h6 class='text-muted add-attachment' style='margin-top: 12px; cursor:pointer;'>\" +\n\t\t\t\t__(\"Select Attachments\") +\n\t\t\t\t\"</h6><div class='attach-list'></div>\\\n\t\t\t<p class='add-more-attachments'>\\\n\t\t\t<a class='text-muted small'><i class='octicon octicon-plus' style='font-size: 12px'></i> \" +\n\t\t\t\t__(\"Add Attachment\") +\n\t\t\t\t\"</a></p>\"\n\t\t).appendTo(attach.empty());\n\t\tattach.find(\".add-more-attachments a\").on(\"click\", () => new frappe.ui.FileUploader(args));\n\t\tthis.render_attach();\n\t}\n\n\trender_attach() {\n\t\tlet fields = this.dialog.fields_dict;\n\t\tlet attach = $(fields.select_attachments.wrapper).find(\".attach-list\").empty();\n\n\t\tlet files = [];\n\t\tif (this.attachments && this.attachments.length) {\n\t\t\tfiles = files.concat(this.attachments);\n\t\t}\n\t\tif (cur_frm) {\n\t\t\tfiles = files.concat(cur_frm.get_files());\n\t\t}\n\n\t\tif (files.length) {\n\t\t\t$.each(files, function (i, f) {\n\t\t\t\tif (!f.file_name) return;\n\t\t\t\tf.file_url = frappe.urllib.get_full_url(f.file_url);\n\n\t\t\t\t$(\n\t\t\t\t\trepl(\n\t\t\t\t\t\t'<p class=\"checkbox\">' +\n\t\t\t\t\t\t\t'<label><span><input type=\"checkbox\" data-file-name=\"%(name)s\"></input></span>' +\n\t\t\t\t\t\t\t'<span class=\"small\">%(file_name)s</span>' +\n\t\t\t\t\t\t\t' <a href=\"%(file_url)s\" target=\"_blank\" class=\"text-muted small\">' +\n\t\t\t\t\t\t\t'<i class=\"fa fa-share\" style=\"vertical-align: middle; margin-left: 3px;\"></i>' +\n\t\t\t\t\t\t\t\"</label></p>\",\n\t\t\t\t\t\tf\n\t\t\t\t\t)\n\t\t\t\t).appendTo(attach);\n\t\t\t});\n\t\t}\n\t}\n\n\tcreate_action() {\n\t\tlet me = this;\n\t\tlet btn = me.dialog.get_primary_btn();\n\n\t\tlet form_values = this.get_values();\n\t\tif (!form_values) return;\n\n\t\tlet selected_attachments = $.map(\n\t\t\t$(me.dialog.wrapper).find(\"[data-file-name]:checked\"),\n\t\t\tfunction (element) {\n\t\t\t\treturn $(element).attr(\"data-file-name\");\n\t\t\t}\n\t\t);\n\n\t\tme.create_interaction(btn, form_values, selected_attachments);\n\t}\n\n\tget_values() {\n\t\tlet me = this;\n\t\tlet values = this.dialog.get_values(true);\n\t\tif (values) {\n\t\t\tvalues[\"reference_doctype\"] = me.frm.doc.doctype;\n\t\t\tvalues[\"reference_document\"] = me.frm.doc.name;\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tcreate_interaction(btn, form_values, selected_attachments) {\n\t\tlet me = this;\n\t\tme.dialog.hide();\n\n\t\tlet field_map = get_doc_mappings();\n\t\tlet interaction_values = {};\n\t\tObject.keys(form_values).forEach((value) => {\n\t\t\tinteraction_values[field_map[form_values.interaction_type][\"field_map\"][value]] =\n\t\t\t\tform_values[value];\n\t\t});\n\n\t\tif (\"event_type\" in interaction_values) {\n\t\t\tinteraction_values[\"event_type\"] = form_values.public == 1 ? \"Public\" : \"Private\";\n\t\t}\n\t\tif (interaction_values[\"doctype\"] == \"Event\") {\n\t\t\tinteraction_values[\"event_participants\"] = [\n\t\t\t\t{\n\t\t\t\t\treference_doctype: form_values.reference_doctype,\n\t\t\t\t\treference_docname: form_values.reference_document,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\t\tif (!(\"owner\" in interaction_values)) {\n\t\t\tinteraction_values[\"owner\"] = frappe.session.user;\n\t\t}\n\t\tif (!(\"assigned_by\" in interaction_values) && interaction_values[\"doctype\"] == \"ToDo\") {\n\t\t\tinteraction_values[\"assigned_by\"] = frappe.session.user;\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod: \"frappe.client.insert\",\n\t\t\targs: { doc: interaction_values },\n\t\t\tbtn: btn,\n\t\t\tcallback: function (r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"{0} created successfully\", [form_values.interaction_type]),\n\t\t\t\t\t\tindicator: \"green\",\n\t\t\t\t\t});\n\t\t\t\t\tif (\"assigned_to\" in form_values) {\n\t\t\t\t\t\tme.assign_document(r.message, form_values[\"assigned_to\"]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selected_attachments) {\n\t\t\t\t\t\tme.add_attachments(r.message, selected_attachments);\n\t\t\t\t\t}\n\t\t\t\t\tif (cur_frm) {\n\t\t\t\t\t\tcur_frm.reload_doc();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(\n\t\t\t\t\t\t__(\"There were errors while creating the document. Please try again.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\n\tassign_document(doc, assignee) {\n\t\tif (doc.doctype != \"ToDo\") {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.form.assign_to.add\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: doc.doctype,\n\t\t\t\t\tname: doc.name,\n\t\t\t\t\tassign_to: JSON.stringify([assignee]),\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tif (!r.exc) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document has been assigned to {0}\", [assignee]),\n\t\t\t\t\t\t\tindicator: \"green\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document could not be correctly assigned\"),\n\t\t\t\t\t\t\tindicator: \"orange\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tadd_attachments(doc, attachments) {\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.utils.file_manager.add_attachments\",\n\t\t\targs: {\n\t\t\t\tdoctype: doc.doctype,\n\t\t\t\tname: doc.name,\n\t\t\t\tattachments: JSON.stringify(attachments),\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\n\t\t\t\t\t\t\t\"The attachments could not be correctly linked to the new document\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tindicator: \"orange\",\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n};\n\nfunction get_doc_mappings() {\n\tconst doc_map = {\n\t\tEvent: {\n\t\t\tfield_map: {\n\t\t\t\tinteraction_type: \"doctype\",\n\t\t\t\tsummary: \"subject\",\n\t\t\t\tdescription: \"description\",\n\t\t\t\tcategory: \"event_category\",\n\t\t\t\tdue_date: \"starts_on\",\n\t\t\t\tpublic: \"event_type\",\n\t\t\t},\n\t\t\treqd_fields: [\"summary\", \"due_date\"],\n\t\t\thidden_fields: [],\n\t\t},\n\t\tToDo: {\n\t\t\tfield_map: {\n\t\t\t\tinteraction_type: \"doctype\",\n\t\t\t\tdescription: \"description\",\n\t\t\t\tdue_date: \"date\",\n\t\t\t\treference_doctype: \"reference_type\",\n\t\t\t\treference_document: \"reference_name\",\n\t\t\t\tassigned_to: \"owner\",\n\t\t\t},\n\t\t\treqd_fields: [\"description\"],\n\t\t\thidden_fields: [\"public\", \"category\"],\n\t\t},\n\t};\n\n\treturn doc_map;\n}\n", "\n\tfrappe.templates['image_view_item_row'] = `<div class=\"image-view-item has-checkbox ellipsis\">\n\t<div class=\"image-view-header doclist-row\">\n\t\t<div class=\"list-value\">\n\t\t{{ subject }}\n\t\t</div>\n\t</div>\n\t<!-- Image -->\n\t<div class=\"image-view-body\">\n\t\t<a  data-name=\"{{ data.name }}\"\n\t\t\ttitle=\"{{ data.name }}\"\n\t\t\thref=\"/app/Form/{{ data.doctype }}/{{ data.name }}\"\n\t\t>\n\t\t\t<div class=\"image-field\"\n\t\t\t\tdata-name=\"{{ data.name }}\"\n\t\t\t\tstyle=\"\n\t\t\t\t{% if (!data._image_url) { %}\n\t\t\t\t\tbackground-color: {{ color }};\n\t\t\t\t{% } %}\n\t\t\t\tborder: 0px;\"\n\t\t\t>\n\t\t\t\t{% if (!data._image_url) { %}\n\t\t\t\t<span class=\"placeholder-text\">\n\t\t\t\t\t{%= frappe.get_abbr(data._title) %}\n\t\t\t\t</span>\n\t\t\t\t{% } %}\n\t\t\t\t{% if (data._image_url) { %}\n\t\t\t\t<img data-name=\"{{ data.name }}\" src=\"{{ data._image_url }}\" alt=\"{{data.title}}\">\n\t\t\t\t{% } %}\n\t\t\t\t<button class=\"btn btn-default zoom-view\" data-name=\"{{data.name}}\">\n\t\t\t\t\t<i class=\"fa fa-search-plus\"></i>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</a>\n\t</div>\n</div>\n`;\n", "\n\tfrappe.templates['photoswipe_dom'] = `\n\n<!-- http://photoswipe.com/documentation/getting-started.html -->\n<!-- Root element of PhotoSwipe. -->\n<div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n\n\t<!-- Background of PhotoSwipe.\n\t\t It's a separate element as animating opacity is faster than rgba(). -->\n\t<div class=\"pswp__bg\"></div>\n\n\t<!-- Slides wrapper with overflow:hidden. -->\n\t<div class=\"pswp__scroll-wrap\">\n\n\t\t<!-- Container that holds slides.\n\t\t\tPhotoSwipe keeps only 3 of them in the DOM to save memory.\n\t\t\tDon't modify these 3 pswp__item elements, data is added later on. -->\n\t\t<div class=\"pswp__container\">\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t\t<div class=\"pswp__item\"></div>\n\t\t</div>\n\n\t\t<div class=\"pswp__more-items\">\n\n\t\t</div>\n\n\t\t<!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->\n\t\t<div class=\"pswp__ui pswp__ui--hidden\">\n\n\t\t\t<div class=\"pswp__top-bar\">\n\n\t\t\t\t<!--  Controls are self-explanatory. Order can be changed. -->\n\n\t\t\t\t<div class=\"pswp__counter\"></div>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--share\" title=\"Share\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\"></button>\n\n\t\t\t\t<button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\"></button>\n\n\t\t\t\t<!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR -->\n\t\t\t\t<!-- element will get class pswp__preloader--active when preloader is running -->\n\t\t\t\t<div class=\"pswp__preloader\">\n\t\t\t\t\t<div class=\"pswp__preloader__icn\">\n\t\t\t\t\t  <div class=\"pswp__preloader__cut\">\n\t\t\t\t\t\t<div class=\"pswp__preloader__donut\"></div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\">\n\t\t\t\t<div class=\"pswp__share-tooltip\"></div>\n\t\t\t</div>\n\n\t\t\t<button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\">\n\t\t\t</button>\n\n\t\t\t<button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\">\n\t\t\t</button>\n\n\t\t\t<div class=\"pswp__caption\">\n\t\t\t\t<div class=\"pswp__caption__center\"></div>\n\t\t\t</div>\n\n\t\t</div>\n\n\t</div>\n\n</div>`;\n", "\n\tfrappe.templates['kanban_board'] = `<div class=\"kanban\">\n\t<div class=\"kanban-column add-new-column\">\n\t\t<div class=\"kanban-column-title compose-column\">\n\t\t\t<a> + {{ __(\"Add Column\") }}</a>\n\t\t</div>\n\t\t<form class=\"compose-column-form kanban-column-title\">\n\t\t\t<input class=\"new-column-title\" name=\"title\" type=\"text\" autocomplete=\"off\">\n\t\t</form>\n\t</div>\n\t<div class=\"kanban-empty-state text-muted text-center\" style=\"display: none;\">\n\t\t{{ __(\"Loading...\") }}\n\t</div>\n</div>`;\n", "\n\tfrappe.templates['kanban_column'] = `<div class=\"kanban-column\" data-column-value=\"{{title}}\">\n\t<div class=\"kanban-column-header\">\n\t\t<span class=\"kanban-column-title\">\n\t\t\t<span class=\"indicator-pill {{indicator}}\"></span>\n\t\t\t<span class=\"kanban-title ellipsis\" title=\"{{title}}\">{{ __(title) }}</span>\n\t\t</span>\n\t\t<div class=\"column-options dropdown pull-right\">\n\t\t\t<a data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t<svg class=\"icon icon-sm\">\n\t\t\t\t\t<use href=\"#icon-dot-horizontal\"></use>\n\t\t\t\t</svg>\n\t\t\t</a>\n\t\t\t<ul class=\"dropdown-menu\" style=\"max-height: 300px; overflow-y: auto;\">\n\t\t\t\t<li><a class=\"dropdown-item\" data-action=\"archive\">{{ __(\"Archive\") }}</a></li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<div class=\"add-card\">\n\t\t<div class=\"ellipsis\">\n\t\t\t+ {{ __(\"Add {0}\", [__(doctype)]) }}\n\t\t</div>\n\t</div>\n\t<div class=\"kanban-card new-card-area\">\n\t\t<textarea name=\"title\"></textarea>\n\t</div>\n\t<div class=\"kanban-cards\">\n\t</div>\n</div>`;\n", "\n\tfrappe.templates['kanban_card'] = `<div class=\"kanban-card-wrapper {{ disable_click }}\" data-name=\"{{encodeURIComponent(name)}}\">\n\t<div class=\"kanban-card content\">\n\t\t{% if(image_url) { %}\n\t\t<div class=\"kanban-image\">\n\t\t\t<img  src=\"{{image_url}}\" alt=\"{{title}}\">\n\t\t</div>\n\t\t{% } %}\n\t\t<div class=\"kanban-card-body\">\n\t\t\t<div class=\"kanban-title-area\">\n\t\t\t\t<a href=\"{{ form_link }}\">\n\t\t\t\t\t<div class=\"kanban-card-title ellipsis\" title=\"{{title}}\">\n\t\t\t\t\t\t{{ title }}\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t\t<br>\n\t\t\t\t<div class=\"kanban-card-doc text-muted\">\n\t\t\t\t\t{{ doc_content }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"kanban-card-meta\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`;\n"],
  "mappings": "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AC,CAAC,EAC/C,OAAQ,CACP,CACC,UAAW,kBACX,UAAW,SACX,MAAO,iDACP,QAAS,CAAC,YAAa,gBAAgB,EACvC,KAAM,CACP,EACA,CACC,MAAO,QACP,UAAW,QACX,UAAW,OACX,UAAW,IACH,EACN,MAAO,0EACP,QAAS,CACR,cAAe,KAAK,OACrB,CACD,GAED,QAAS,kBACT,WAAY,+CACb,EACA,CACC,UAAW,OACX,UAAW,gBACX,WAAY,0CACb,EACA,CACC,MAAO,cACP,UAAW,QACX,UAAW,OACX,qBAAsB,0CACvB,EACA,CACC,UAAW,OACX,UAAW,cACZ,EACA,CACC,MAAO,aACP,UAAW,aACX,UAAW,SACX,QAAS,CAAC,cAAe,UAAU,EACnC,qBAAsB,0CACvB,EACA,CACC,UAAW,OACX,UAAW,gBACX,MAAO,eACP,WACC,6EACF,EACA,CACC,MAAO,WACP,UAAW,iBACX,UAAW,SACX,QAAS,CAAC,QAAS,MAAO,SAAS,EACnC,QAAS,OACV,EACA,CACC,MAAO,WACP,UAAW,SACX,UAAW,WACX,WAAY,wCACZ,QAAS,CAAC,YAAa,eAAgB,aAAc,WAAW,EAChE,QAAS,WACV,EACA,CACC,UAAW,OACX,UAAW,cACZ,EACA,CACC,MAAO,iBACP,UAAW,SACX,UAAW,WACX,QAAS,EAAO,aAChB,WAAY,iCACb,EACA,CACC,MAAO,uBACP,UAAW,SACX,UAAW,WACX,QAAS,EAAO,YAChB,qBAAsB,uCACvB,EACA,CACC,MAAO,gBACP,UAAW,gBACX,UAAW,SACX,WAAY,wCACZ,QAAS,CAAC,SAAU,YAAa,UAAW,SAAU,OAAO,EAC7D,QAAS,SACV,EACA,CACC,UAAW,OACX,UAAW,gBACX,MAAO,eACP,WACC,0EACF,EACA,CACC,MAAO,gBACP,UAAW,gBACX,UAAW,SACX,QAAS,CAAC,QAAS,MAAO,SAAS,EACnC,QAAS,OACV,EACA,CACC,MAAO,8BACP,UAAW,SACX,UAAW,8BACX,QAAS,EAAO,0BAChB,WAAY,sDACb,EACA,CACC,UAAW,OACX,UAAW,cACZ,EACA,CACC,MAAO,oBACP,UAAW,SACX,UAAW,oBACX,QAAS,EAAO,gBAChB,QAAS,WACV,EACA,CACC,MAAO,mBACP,UAAW,MACX,UAAW,mBACX,QAAS,CACV,EACA,CACC,UAAW,OACX,UAAW,gBACX,WAAY,0CACb,EACA,CACC,MAAO,aACP,UAAW,OACX,UAAW,SACX,QAAS,CAAC,OAAQ,MAAO,aAAc,KAAK,EAC5C,WAAY,0CACb,EACA,CACC,UAAW,OACX,UAAW,cACZ,EACA,CACC,MAAO,cACP,UAAW,QACX,UAAW,QACX,WAAY,0CACb,CACD,EACA,qBAAsB,GAAG,KAAK,EAC9B,eAAgB,AAAC,GAAW,CAC3B,GAAI,GAAQ,EACZ,AAAI,EAAM,iBAAmB,YAC5B,GAAM,WAAa,EAAM,MACzB,EAAM,WACL,EAAM,YAAc,cACjB,EAAM,eACN,EAAM,WACV,EAAM,cAAgB,KAAK,QAC3B,EAAM,aAAe,KACrB,OACE,MACA,6EACA,CAAE,KAAM,CAAM,CACf,EACC,KAAK,AAAC,GAAQ,CACd,KAAK,YAAY,WAAW,UAAU,CACrC,WAAY,EAAI,WAChB,KAAM,EAAI,WACV,MAAO,EAAM,KACd,CAAC,CACF,CAAC,GAEF,KAAK,YAAY,WAAW,UAAU,CACrC,WAAY,EAAM,MAClB,MAAO,EAAM,MACb,KAAM,EAAM,KACb,CAAC,EAEF,EAAO,KAAK,CACb,CACD,CAAC,EACD,EAAO,KAAK,CACb,CAEA,mBAAoB,CACnB,GAAI,GAAc,CACjB,CAAE,MAAO,GAAG,YAAY,EAAG,MAAO,UAAW,EAC7C,CAAE,MAAO,GAAG,kBAAkB,EAAG,MAAO,UAAW,CACpD,EACI,EAAe,CAAC,EAChB,EAAkB,CAAC,EACnB,EAA4B,CAAC,EAEjC,cAAO,SAAS,KAAK,OAAO,EAAE,OAAO,IAAI,AAAC,GAAO,CAIhD,GAHI,CAAC,OAAQ,UAAU,EAAE,SAAS,EAAG,SAAS,GAC7C,EAAY,KAAK,CAAE,MAAO,EAAG,MAAO,MAAO,EAAG,SAAU,CAAC,EAEtD,OAAO,MAAM,mBAAmB,SAAS,EAAG,SAAS,EAAG,CAC3D,GAAI,EAAG,WAAa,YACf,EAAC,EAAG,SAAW,EAAG,UAAY,oCACjC,OAGF,EAAa,KAAK,CAAE,MAAO,EAAG,MAAO,MAAO,EAAG,SAAU,CAAC,EAC1D,EAA0B,KAAK,CAAE,MAAO,EAAG,MAAO,MAAO,EAAG,SAAU,CAAC,CACxE,CACA,AAAI,CAAC,OAAQ,QAAQ,EAAE,SAAS,EAAG,SAAS,GAC3C,EAAgB,KAAK,CAAE,MAAO,EAAG,MAAO,MAAO,EAAG,SAAU,CAAC,CAE/D,CAAC,EAEM,CACN,YAAa,EACb,aAAc,EACd,gBAAiB,EACjB,0BAA2B,CAC5B,CACD,CAEA,kBAAkB,EAAO,CACxB,MAAO,GAAM,OAAO,CAAC,EAAM,IAAU,EAAM,QAAQ,CAAI,IAAM,CAAK,CACnE,CACD,EC9fA,OAAO,QAAQ,cAAc,EAE7B,OAAO,MAAM,UAAY,aAAwB,QAAO,MAAM,QAAS,IAClE,YAAY,CACf,MAAO,OACR,CAEA,gBAAiB,CAChB,MAAO,OAAM,eAAe,EAAE,KAAK,IAAM,CACxC,KAAK,WAAa,KAAK,WAAa,IAAM,GAAG,QAAQ,CACtD,CAAC,CACF,CAEA,YAAa,CACZ,KAAK,cAAc,EACnB,KAAK,mBAAmB,EACxB,KAAK,WAAW,CACjB,CAEA,YAAa,CACZ,KAAK,OAAS,CACb,OACA,GAAG,KAAK,wBAAwB,EAAE,IAAI,AAAC,GAAO,EAAG,SAAS,EAC1D,KAAK,KAAK,YACV,KAAK,KAAK,YACV,WACD,CACD,CAEA,aAAa,EAAM,CAClB,MAAM,aAAa,CAAI,EACvB,KAAK,MAAQ,KAAK,KAAK,IAAI,AAAC,GAE3B,GAAE,WAAa,KAAK,cAAc,CAAC,EAC5B,EACP,CACF,CAEA,QAAS,CACR,KAAK,oBAAoB,EAAE,KAAK,IAAM,CACrC,KAAK,kBAAkB,EAEvB,AAAK,KAAK,QAGT,KAAK,QAAQ,mBAAmB,KAAK,MAAO,KAAK,UAAU,EAF3D,KAAK,cAAc,CAIrB,CAAC,CACF,CAEA,mBAAoB,CACnB,GAAI,GAAO,KAAK,MAAM,IAAI,KAAK,UAAU,KAAK,IAAI,CAAC,EAAE,KAAK,EAAE,EAE5D,KAAK,MAAM,KAAK,8BAA8B,EAAE,SAAS,YAAY,EAErE,KAAK,QAAQ,KAAK;AAAA;AAAA,MAEd;AAAA;AAAA,GAEH,EAED,KAAK,aAAa,CACnB,CAEA,kBAAkB,EAAM,CAEvB,GAAI,GAAc,KAAK,wBAAwB,EAAE,IAAI,AAAC,GAAO,EAAG,SAAS,GAAK,CAAC,EACzE,EAAc,KAAK,KAAK,aAAe,OAC7C,EAAc,EAAY,OAAO,AAAC,GAAU,IAAU,CAAW,EACjE,GAAI,GAAY,kDACZ,EAAM,GACV,SAAY,QAAQ,CAAC,EAAO,IAAU,CACrC,AAAI,EAAK,IAAU,CAAC,GACnB,CAAI,GAAS,EAAG,GAAa,OAAO,GAAG,EAAK,EAAM,SAC7C,GAAa,0BAA0B,GAAG,EAAK,EAAM,SAC1D,EAAM,GAER,CAAC,EACD,GAAa,cACN,CACR,CAEA,UAAU,EAAM,CACf,EAAK,MAAQ,UAAU,EAAK,IAAI,EAChC,GAAM,GAAe,EAAK,MACpB,EAAQ,WAAW,EAAK,KAAK,KAAK,aAAe,OAAO,EACxD,EAAgB,OAAO,MAAM,YAAY,CAAK,EAC9C,EAAS,AAAC,EAAK,WAA0B,GAAb,WAC5B,EAAQ,EAAK,WAChB,mBAAmB,WAAsB,EAAK,oBAAoB,MAClE;AAAA,MACC,OAAO,SAAS,CAAK;AAAA,YAGrB,EAAU,KAAK,kBAAkB,CAAI,EAEnC,EAAqB,EAAK,WAC7B,qCAAqC;AAAA,MACpC,OAAO,MAAM,KAAK,SAAU,IAAI;AAAA,WAEjC,GAEH,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA,oCAK2B,OAAO,EAAK,IAAI;AAAA,QAC5C,KAAK,cAAc,CAAI;AAAA;AAAA;AAAA;AAAA,kCAIG;AAAA,qBACb;AAAA,eACN;AAAA,cACD,KAAK,cAAc,CAAI;AAAA;AAAA;AAAA,oBAGjB;AAAA;AAAA,SAEX;AAAA;AAAA;AAAA,OAGF;AAAA;AAAA;AAAA;AAAA,sCAI+B;AAAA,mCACH,KAAK,cAAc,CAAI;AAAA,iBACzC,oBAAgC,KAAK,uBAAuB,EAAK;AAAA,UACxE;AAAA;AAAA;AAAA;AAAA,OAIH;AAAA;AAAA;AAAA,GAIN,CAEA,qBAAsB,CACrB,MAAO,QACL,KAAK,CACL,OAAQ,2CACR,KAAM,CACL,QAAS,KAAK,QACd,MAAO,KAAK,MAAM,IAAI,AAAC,GAAM,EAAE,IAAI,CACpC,CACD,CAAC,EACA,KAAK,AAAC,GAAM,CACZ,KAAK,WAAa,OAAO,OAAO,KAAK,YAAc,CAAC,EAAG,EAAE,OAAO,CACjE,CAAC,CACH,CAEA,iBAAkB,CAgBlB,CAEA,eAAgB,CACf,GAAI,GAAK,KACT,KAAK,QAAU,GAAI,QAAO,MAAM,YAAY,CAC3C,QAAS,KAAK,QACd,MAAO,KAAK,MACZ,QAAS,KAAK,QACd,WAAY,KAAK,UAClB,CAAC,EACD,KAAK,QAAQ,GAAG,QAAS,aAAc,SAAU,EAAG,CACnD,EAAE,eAAe,EACjB,EAAE,gBAAgB,EAClB,GAAI,GAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAC1B,SAAO,mBAAmB,CAAI,EAC9B,EAAG,QAAQ,KAAK,CAAI,EACb,EACR,CAAC,CACF,CACD,EAEA,OAAO,MAAM,YAAc,KAAkB,CAC5C,YAAY,EAAM,CACjB,EAAE,OAAO,KAAM,CAAI,EACnB,GAAI,GAAK,KAET,KAAK,UAAY,KAAK,SAAS,EAC/B,KAAK,UAAU,KAAK,UAAY,CAC/B,EAAG,QAAQ,CACZ,CAAC,CACF,CACA,SAAU,CAGT,GADA,KAAK,UAAY,EAAE,cAAc,EAC7B,KAAK,UAAU,SAAW,EAAG,CAChC,GAAI,GAAO,OAAO,gBAAgB,gBAAgB,EAClD,KAAK,UAAY,EAAE,CAAI,EAAE,SAAS,MAAM,CACzC,CACD,CACA,mBAAmB,EAAQ,EAAa,CACvC,GAAI,GAAK,KAET,MAAI,IAEH,MAAK,MAAQ,KAAK,MAAM,OAAO,CAAM,EACrC,KAAK,WAAa,GAGZ,GAAI,SAAQ,AAAC,GAAY,CAC/B,GAAM,GAAQ,KAAK,MAAM,IAAI,SAAU,EAAG,CACzC,GAAM,GAAQ,kBAAoB,EAAE,MAAQ,KACxC,EAAK,EAAG,QAAQ,KAAK,CAAK,EAAE,IAAI,CAAC,EAEjC,EAAO,EACX,MAAI,IACH,GAAQ,EAAG,aACX,EAAS,EAAG,eAGR,GACJ,GAAK,EAAG,QAAQ,KAAK,2BAA6B,EAAE,MAAQ,IAAI,EAAE,IAAI,CAAC,EACvE,EAAQ,EAAG,sBAAsB,EAAE,MACnC,EAAS,EAAG,sBAAsB,EAAE,QAG9B,CACN,IAAK,EAAE,WACP,KAAM,EAAE,WACR,KAAM,EAAE,KACR,EAAG,EACH,EAAG,EACH,GAAI,CACL,CACD,CAAC,EACD,KAAK,WAAa,EAClB,EAAQ,CACT,CAAC,CACF,CACA,KAAK,EAAS,CACb,KAAK,UAAU,KAAK,IAAM,KAAK,mBAAmB,CAAC,EAAE,KAAK,IAAM,KAAK,MAAM,CAAO,CAAC,CACpF,CACA,MAAM,EAAS,CACd,GAAM,GAAK,KACL,EAAQ,KAAK,WAGnB,GAAI,GAAU,CACb,MAHkB,EAAM,UAAU,AAAC,GAAS,EAAK,OAAS,CAAO,EAIjE,iBAAkB,SAAU,EAAO,CAClC,GAAM,GAAQ,kBAAoB,EAAM,GAAO,MAAQ,KACnD,EAAY,EAAG,QAAQ,KAAK,CAAK,EAAE,IAAI,CAAC,EAE5C,GAAI,EAAC,EAIL,IAAI,GAAc,OAAO,aAAe,SAAS,gBAAgB,UAChE,EAAO,EAAU,sBAAsB,EAExC,MAAO,CACN,EAAG,EAAK,KACR,EAAG,EAAK,IAAM,EACd,EAAG,EAAK,KACT,EACD,EACA,QAAS,GACT,QAAS,GACT,gBAAiB,EAClB,EAGA,KAAK,KAAO,GAAI,YAAW,KAAK,UAAU,IAAI,CAAC,EAAG,qBAAsB,EAAO,CAAO,EACtF,KAAK,cAAc,EACnB,KAAK,KAAK,KAAK,CAChB,CACA,eAAgB,CACf,GAAM,GAAc,KAAK,UAAU,KAAK,mBAAmB,EACrD,EAAa,KAAK,WACpB,EAAoB,KAExB,KAAK,KAAK,OAAO,cAAe,UAAY,CAC3C,GAAM,GAAS,EAAW,KAAK,SAAS,MACxC,GAAI,CAAC,GAAU,EAAO,SAAW,EAAG,CACnC,EAAY,KAAK,EAAE,EACnB,MACD,CAEA,EAAyB,EACzB,GAAM,GAAO,EAAO,IAAI,CAAQ,EAAE,KAAK,EAAE,EACzC,EAAY,KAAK,CAAI,CACtB,CAAC,EAED,KAAK,KAAK,OAAO,eAAgB,CAAe,EAChD,KAAK,KAAK,OAAO,iBAAkB,CAAe,EAClD,KAAK,KAAK,OAAO,UAAW,IAAM,CACjC,EAAE,QAAQ,EAAE,IAAI,YAAa,CAAwB,CACtD,CAAC,EAGD,EAAY,GAAG,QAAS,mBAAoB,AAAC,GAAM,CAClD,GAAM,GAAS,EAAE,OACX,EAAQ,KAAK,KAAK,MAAM,UAAU,AAAC,GAAM,EAAE,OAAS,KAAK,KAAK,SAAS,IAAI,EAEjF,KAAK,KAAK,KAAK,CAAK,EACpB,KAAK,KAAK,MAAM,OAAO,EAAO,EAAG,CAChC,IAAK,EAAO,IACZ,EAAG,EAAO,aACV,EAAG,EAAO,cACV,KAAM,KAAK,KAAK,SAAS,IAC1B,CAAC,EACD,KAAK,KAAK,oBAAoB,EAC9B,KAAK,KAAK,WAAW,EAAI,CAC1B,CAAC,EAGD,EAAE,QAAQ,EAAE,GAAG,YAAa,CAAwB,EAEpD,YAAoC,CACnC,aAAa,CAAiB,EAC9B,EAAgB,EAChB,EAAoB,WAAW,EAAiB,GAAI,CACrD,CAEA,YAA2B,CAC1B,EAAY,KAAK,CAClB,CAEA,YAA2B,CAC1B,EAAY,KAAK,CAClB,CAEA,WAAkB,EAAK,CACtB,MAAO;AAAA,gBACM;AAAA,UAEd,CACD,CACA,UAAW,CACV,MAAO,IAAI,SAAQ,AAAC,GAAY,CAC/B,GAAI,GAAY,mCAChB,OAAO,QACN,CACC,EAAY,iBACZ,EAAY,mBACZ,EAAY,gBACZ,EAAY,0BACb,EACA,CACD,CACD,CAAC,CACF,CACD,ECzWA,OAAO,QAAQ,oBAAoB,EACnC,OAAO,QAAQ,cAAc,EAE7B,OAAO,MAAM,QAAU,aAAsB,QAAO,MAAM,QAAS,IAC9D,YAAY,CACf,MAAO,KACR,CAEA,gBAAiB,CAChB,MAAM,eAAe,EACrB,KAAK,WAAa,GAAG,UAAW,CAAC,KAAK,UAAU,CAAC,CAClD,CAEA,YAAa,CAAC,CAEd,kBAAmB,CAClB,KAAK,WAAW,CACjB,CAEA,QAAS,CACR,KAAK,WAAW,EAAE,KAAK,IAAM,CAC5B,KAAK,gBAAgB,CACtB,CAAC,EACD,KAAK,aAAa,KAAK,aAAa,EAAE,OAAO,aAAa,CAC3D,CAEA,iBAAkB,CAgBjB,GAfA,KAAK,OAAS,OAAO,IAAI,cAAc,EAEvC,KAAK,QAAQ,KAAK,YAAY,KAAK,2CAA2C,EAE9E,EAAE,KAAK,QAAQ,UAAY,iCAC3B,KAAK,IAAM,EAAE,IAAI,KAAK,MAAM,EAAE,QAC7B,OAAO,MAAM,aAAa,OAC1B,OAAO,MAAM,aAAa,IAC3B,EAEA,EAAE,UAAU,OAAO,MAAM,aAAa,MAAO,OAAO,MAAM,aAAa,OAAO,EAAE,MAC/E,KAAK,GACN,EAEA,EAAE,QAAQ,MAAM,EAAE,MAAM,KAAK,GAAG,EAC5B,KAAK,OAAO,UAAY,KAAK,OAAO,SAAS,OAAQ,CACxD,KAAK,OAAO,SAAS,QAAQ,AAAC,GAC7B,EAAE,QAAQ,CAAM,EAAE,UAAU,EAAO,WAAW,IAAI,EAAE,MAAM,KAAK,GAAG,CACnE,EACA,GAAI,GAAa,KAAK,OAAO,SAAS,GAAG,SAAS,YAAY,QAAQ,EACtE,KAAK,IAAI,MAAM,EAAY,CAAC,CAC7B,CACD,CAEA,YAAa,CACZ,GAAI,GACF,KAAK,UAAY,KAAK,SAAS,mBAAsB,8BAEvD,MACC,UAAS,KAAK,OAAO,KACpB,AAAC,GAAM,EAAE,YAAc,YAAc,EAAE,YAAc,aACtD,EAEA,KAAK,KAAO,iBAEZ,SAAS,KAAK,OAAO,KAAK,AAAC,GAAM,EAAE,YAAc,UAAU,GAC3D,SAAS,KAAK,OAAO,KAAK,AAAC,GAAM,EAAE,YAAc,WAAW,GAE5D,MAAK,KAAO,eAEN,OACL,KAAK,CACL,OAAQ,EACR,KAAM,CACL,QAAS,KAAK,QACd,QAAS,SAAS,YAAY,IAAI,EAClC,KAAM,KAAK,IACZ,CACD,CAAC,EACA,KAAK,AAAC,GAAM,CACZ,KAAK,OAAS,EAAE,OACjB,CAAC,CACH,IAEI,gBAAgB,CACnB,MAAO,CACN,2CACA,yCACD,CACD,CACD,EC1FA,WAAoC,CACnC,YAAY,CAAE,aAAY,UAAS,OAAM,YAAY,CACpD,AAAK,GACJ,OAAO,MAAM,GAAG,kBAAkB,CAAC,EAGpC,KAAK,WAAa,EAClB,KAAK,QAAU,EACf,KAAK,KAAO,EACZ,KAAK,SAAW,EAChB,KAAK,OAAS,KACd,KAAK,OAAS,KAAK,UAAY,KAAK,SAAS,OAE7C,OAAO,MAAM,aAAa,qBAAsB,IAAM,CACrD,KAAK,KAAK,EACV,KAAK,WAAW,EAChB,KAAK,aAAa,EAClB,KAAK,oBAAoB,EACzB,KAAK,eAAe,EACpB,KAAK,YAAY,CAClB,CAAC,CACF,CAEA,MAAO,CACN,KAAK,OAAS,GAAI,QAAO,GAAG,OAAO,CAClC,MAAO,GAAG,eAAgB,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,EAC5C,OAAQ,CACP,CACC,UAAW,cACX,MAAO,GAAG,aAAa,EACvB,UAAW,OACZ,EACA,CACC,UAAW,cACX,UAAW,MACZ,EACA,CACC,UAAW,SACX,UAAW,OACX,OAAQ,CACT,CACD,CACD,CAAC,EACD,KAAK,OAAO,WAAW,KAAK,QAAQ,EACpC,KAAK,OAAO,mBAAmB,GAAG,MAAM,EAAG,IAAM,CAChD,OAAO,WAAW,CACjB,QAAS,GAAG,QAAQ,EACpB,UAAW,OACZ,CAAC,EAED,OAAO,KAAK,CACX,OAAQ,8DACR,KAAM,CACL,WAAY,KAAK,SAAS,KAC1B,SAAU,KAAK,OAAO,WAAW,CAClC,EACA,SAAU,AAAC,GAAM,CAChB,KAAK,WAAW,MAAQ,EAAE,QAC1B,KAAK,WAAW,OAAO,EACvB,KAAK,OAAO,KAAK,CAClB,CACD,CAAC,CACF,CAAC,CACF,CAEA,SAAU,CACT,KAAK,aAAa,EAClB,KAAK,eAAe,EACpB,KAAK,oBAAoB,CAC1B,CAEA,aAAc,CACb,AAAK,KAAK,SAAS,QAClB,KAAK,cAAc,EAGpB,KAAK,OAAO,KAAK,CAClB,CAEA,cAAe,CACd,GAAM,GAAc,KAAK,OAAO,UAAU,aAAa,EACjD,EAAU,EAAY,SAAS,GACjC,EAAS,GAEb,OAAS,KAAa,MAAK,OAAQ,CAClC,GAAI,GAAQ,KAAK,aAAa,CAAS,EAEvC,GAAU;AAAA;AAAA;AAAA,uBAGU,EAAM;AAAA,mBACV,EAAM;AAAA,kBACP,EAAM;AAAA;AAAA;AAAA;AAAA,SAIf,OAAO,MAAM,KAAK,OAAQ,KAAM,GAAI,GAAI,iBAAiB;AAAA;AAAA;AAAA,SAGzD,GAAG,EAAM,KAAK;AAAA;AAAA;AAAA,4DAGqC,EAAM;AAAA,UACxD,OAAO,MAAM,KAAK,SAAU,IAAI;AAAA;AAAA;AAAA;AAAA,WAKxC,CAEA,EAAY,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQH,EAED,GAAI,UAAS,EAAQ,uBAAuB,uBAAuB,EAAE,GAAI,CACxE,OAAQ,mBACR,UAAW,YACX,SAAU,AAAC,GAAW,CACrB,KAAK,OAAO,OAAO,EAAO,SAAU,EAAG,KAAK,OAAO,OAAO,EAAO,SAAU,CAAC,EAAE,EAAE,EAChF,KAAK,OAAO,UAAU,SAAU,KAAK,UAAU,KAAK,MAAM,CAAC,EAC3D,KAAK,QAAQ,CACd,CACD,CAAC,CACF,CAEA,gBAAiB,CAChB,GAAI,GACH,KAAK,0BAA0B,EAAE,uBAAuB,gBAAgB,EAAE,GAC3E,EAAe,QAAU,IAAM,KAAK,qBAAqB,CAC1D,CAEA,qBAAsB,CACrB,GAAI,GACH,KAAK,0BAA0B,EAAE,uBAAuB,cAAc,EAEvE,OAAS,GAAM,EAAG,EAAM,EAAc,OAAQ,IAC7C,EAAc,KAAK,CAAG,EAAE,QAAU,IACjC,KAAK,cAAc,EAAc,KAAK,CAAG,EAAE,aAAa,gBAAgB,CAAC,CAE5E,CAEA,2BAA4B,CAC3B,MAAO,MAAK,OAAO,UAAU,aAAa,EAAE,SAAS,EACtD,CAEA,cAAc,EAAW,CACxB,KAAK,OAAS,KAAK,OAAO,OAAO,AAAC,GAAU,IAAU,CAAS,EAC/D,KAAK,OAAO,UAAU,SAAU,KAAK,UAAU,KAAK,MAAM,CAAC,EAC3D,KAAK,QAAQ,CACd,CAEA,eAAgB,CAEf,GAAI,GAAe,AADH,KAAK,OAAO,UAAU,aAAa,EAAE,SAAS,GACnC,uBAAuB,cAAc,EAChE,KAAK,OAAS,CAAC,EAEf,OAAS,GAAM,EAAG,EAAM,EAAa,OAAQ,IAC5C,KAAK,OAAO,KAAK,EAAa,KAAK,CAAG,EAAE,aAAa,gBAAgB,CAAC,EAGvE,KAAK,OAAO,UAAU,SAAU,KAAK,UAAU,KAAK,MAAM,CAAC,CAC5D,CAEA,sBAAuB,CACtB,GAAI,GAAS,GAAI,QAAO,GAAG,OAAO,CACjC,MAAO,GAAG,aAAc,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,EAC1C,OAAQ,CACP,CACC,MAAO,GAAG,eAAe,EACzB,UAAW,aACX,UAAW,SACX,QAAS,KAAK,uBAAuB,EACrC,QAAS,CACV,CACD,CACD,CAAC,EACD,EAAO,mBAAmB,GAAG,MAAM,EAAG,IAAM,CAC3C,KAAK,OAAS,EAAO,WAAW,EAAE,QAAU,CAAC,EAC7C,KAAK,OAAO,UAAU,SAAU,KAAK,UAAU,KAAK,MAAM,CAAC,EAC3D,KAAK,QAAQ,EACb,EAAO,KAAK,CACb,CAAC,EACD,EAAO,KAAK,CACb,CAEA,YAAa,CACZ,KAAK,OAAS,KAAK,SAAS,OAC5B,KAAK,OAAO,OAAO,AAAC,GAAM,EAAE,SAAS,CACtC,CAEA,aAAa,EAAY,CACxB,MACC,QAAO,KAAK,aAAa,KAAK,QAAS,CAAU,GACjD,OAAO,MAAM,cAAc,CAAU,CAEvC,CAEA,wBAAyB,CACxB,GAAM,GAAgB,CACrB,MACA,MACA,MACA,aACA,aACA,YACA,YACA,UACA,KAAK,KAAK,aAAe,MAC1B,EAEM,EAAoB,CACzB,eACA,cACA,cACA,OACA,QACA,GAAG,OAAO,MAAM,aACjB,EAEA,MAAO,QAAO,MAAM,WAClB,OAAO,KAAK,WAAW,wBAAwB,CAAC,EAChD,OACA,AAAC,GACA,CAAC,EAAc,SAAS,EAAM,SAAS,GACvC,CAAC,EAAkB,SAAS,EAAM,SAAS,CAC7C,EACC,IAAI,AAAC,GACE,EACN,MAAO,GAAG,EAAM,KAAK,EACrB,MAAO,EAAM,UACb,QAAS,KAAK,OAAO,SAAS,EAAM,SAAS,CAC9C,EACA,CACH,CACD,ECpPA,OAAO,QAAQ,cAAc,EAE7B,OAAO,MAAM,WAAa,aAAyB,QAAO,MAAM,QAAS,OACjE,iBAAiB,CACvB,GAAM,GAAQ,OAAO,UAAU,EAC/B,GAAI,EAAM,SAAW,EAAG,CACvB,GAAM,GAAU,EAAM,GAChB,EAAgB,OAAO,kBAAkB,CAAO,EAAE,QAAa,CAAC,EACtE,MAAK,GAAc,kBAInB,GAAM,KAAK,EAAc,iBAAiB,EAC1C,OAAO,UAAU,CAAK,EACf,IALC,GAAI,QAAO,MAAM,WAAW,CAAE,QAAS,CAAQ,CAAC,CAMzD,CACA,MAAO,EACR,IAEI,YAAY,CACf,MAAO,QACR,CAEA,MAAO,CACN,OAAO,MAAM,WAAW,YAAY,KAAK,OAAO,EAAE,KAAK,AAAC,GAClD,EAAQ,OAEF,EAAQ,QAAU,OAAO,UAAU,EAAE,SAAW,EACnD,OAAO,MAAM,WAAW,mBAAmB,KAAK,QAAS,EAAI,EAEpE,MAAK,QAAU,EAER,OAAO,aAAa,CAC1B,IAAM,KAAK,cAAc,EACzB,IAAM,KAAK,WAAW,EACtB,IAAM,KAAK,cAAc,EACzB,IAAM,KAAK,kBAAkB,EAC7B,IAAM,KAAK,KAAK,EAChB,IAAM,KAAK,eAAe,EAC1B,IAAM,KAAK,QAAQ,CACpB,CAAC,GAdM,OAAO,MAAM,WAAW,mBAAmB,KAAK,QAAS,EAAI,CAgBrE,CACF,CAEA,MAAO,CACN,MAAO,OAAM,KAAK,EAAE,KAAK,IAAM,CAE9B,AAAI,AADc,KAAK,KAAK,KAAK,KAAK,gBAAgB,EAAE,SACpC,GAEnB,KAAK,KAAK,UAAU,CAEtB,CAAC,CACF,CAEA,gBAAiB,CAChB,MAAO,OAAM,eAAe,EAAE,KAAK,IAAM,CACxC,GAAI,GAAiB,IACb,KAAK,QAAQ,QAAU,KAAK,QAAQ,GAAG,KAG/C,YAAK,WAAa,OAAO,UAAU,EAAE,IAAM,EAAe,GAAK,KAC/D,KAAK,WAAa,GAAG,KAAK,UAAU,EACpC,KAAK,UAAY,KAAK,cAAc,EACpC,KAAK,YAAc,EAEZ,OAAO,aAAa,CAC1B,IAAM,KAAK,oCAAoC,EAC/C,IAAM,KAAK,UAAU,CACtB,CAAC,CACF,CAAC,CACF,CAEA,qCAAsC,CAErC,MAAO,QAAO,KAAK,CAClB,OAAQ,oCACR,KAAM,CACL,QAAS,eACT,QAAS,KAAK,UACf,EACA,SAAU,AAAC,GAAW,CACrB,KAAK,YAAc,EAAO,QAAQ,aAAe,CAAC,EAClD,KAAK,gBAAgB,CACtB,CACD,CAAC,CACF,CAEA,iBAAkB,CACjB,AAAI,KAAK,YAAY,OACpB,KAAK,WAAW,KAAK,CACpB,MAAO,GAAG,cAAc,EACxB,OAAQ,IAAM,CACb,KAAK,0BAA0B,CAChC,CACD,CAAC,EAGE,KAAK,YAAY,QACpB,KAAK,WAAW,KAAK,CACpB,MAAO,GAAG,qBAAqB,EAC/B,OAAQ,IAAM,CACb,OAAO,QAAQ,oCAAqC,IAAM,CACzD,OAAO,GAAG,WAAW,eAAgB,KAAK,UAAU,EAAE,KAAK,IAAM,CAChE,OAAO,WAAW,gBAAgB,KAAK,qBAAqB,EAC5D,OAAO,UAAU,OAAQ,KAAK,QAAS,MAAM,CAC9C,CAAC,CACF,CAAC,CACF,CACD,CAAC,CAEH,CAEA,mBAAoB,CAEpB,CAEA,oBAAqB,CACpB,KAAK,QAAQ,OAAO,KAAK,KAAK,OAAS,CAAC,CACzC,CAEA,WAAY,CACX,MAAO,QAAO,GAAG,QAAQ,eAAgB,KAAK,UAAU,EAAE,KAAK,AAAC,GAAU,CACzE,KAAK,MAAQ,EACb,KAAK,MAAM,cAAgB,KAAK,MAAM,KAAK,MAAM,SAAW,IAAI,EAChE,KAAK,MAAM,OAAS,KAAK,MAAM,KAAK,MAAM,QAAU,IAAI,EACxD,KAAK,QAAU,KAAK,MAAM,aAC3B,CAAC,CACF,CAEA,YAAa,CACZ,KAAK,aAAe,GACpB,KAAK,eAAiB,GACtB,KAAK,iBAAmB,GACxB,KAAK,mBAAqB,GAC1B,MAAM,WAAW,CAClB,CAEA,YAAa,CACZ,AAAI,KAAK,MAAM,QAAQ,OAAS,GAC/B,KAAK,KAAK,UAAU,SAAS,YAAY,EAE1C,KAAK,uBAAuB,EAC5B,KAAK,WAAW,CACjB,CAEA,YAAa,CACZ,MAAM,WAAW,EACjB,KAAK,WAAW,KAAK,UAAU,WAAW,CAC3C,CAEA,eAAgB,CACf,OAAO,MAAM,cAAc,KAAK,KAAK,QAAS,YAAa,KAAK,SAAS,EACzE,KAAK,wBAAwB,CAC5B,kBAAmB,KAAK,UACzB,CAAC,CACF,CAEA,aAAc,CAAC,CAEf,kBAAmB,CAClB,AAAI,CAAC,KAAK,YAAY,OAEtB,CAAI,KAAK,UAAU,KAAK,MAAM,aAAa,IAAM,KAAK,UAAU,KAAK,YAAY,IAAI,CAAC,EACrF,KAAK,KAAK,cAAc,GAAG,WAAW,EAAG,QAAQ,EAEjD,KAAK,KAAK,gBAAgB,EAE5B,CAEA,2BAA4B,CAC3B,GAAM,GAAU,KAAK,YAAY,IAAI,EAErC,OAAO,GAAG,UAAU,eAAgB,KAAK,WAAY,UAAW,CAAO,EAAE,KAAK,AAAC,GAAM,CACpF,GAAI,EAAE,IAAK,CACV,OAAO,WAAW,CACjB,UAAW,MACX,QAAS,GAAG,mCAAmC,CAChD,CAAC,EACD,MACD,CACA,OAAO,WAAW,CACjB,UAAW,QACX,QAAS,GAAG,eAAe,CAC5B,CAAC,EAED,KAAK,MAAM,cAAgB,EAC3B,KAAK,iBAAiB,CACvB,CAAC,CACF,CAEA,YAAa,CACZ,YAAK,OAAO,KAAK,CAAC,KAAK,MAAM,WAAY,KAAK,MAAM,iBAAiB,CAAC,EAC/D,MAAM,WAAW,CACzB,CAEA,QAAS,CACR,GAAM,GAAa,KAAK,WACxB,AAAK,KAAK,OAWC,IAAe,KAAK,OAAO,YACrC,KAAK,OAAO,OAAO,KAAK,IAAI,EAX5B,KAAK,OAAS,GAAI,QAAO,MAAM,YAAY,CAC1C,QAAS,KAAK,QACd,MAAO,KAAK,MACZ,WAAY,EACZ,MAAO,KAAK,KACZ,UAAW,KAAK,UAChB,QAAS,KAAK,QACd,SAAU,KACV,cAAe,KAAK,kBACrB,CAAC,CAIH,CAEA,eAAgB,CACf,GAAI,GAAO,OAAO,SAAS,KAAK,OAAO,EAEvC,GAAI,GAAgB,KAAK,OAAO,eAChC,GAAI,GAAM,OAAO,MAAM,YAAY,KAAK,OAAO,EAC/C,OAAO,cAAgB,EACvB,GAAI,GAAc,KACd,EAAc,GAElB,AAAI,KAAK,KAAK,aACb,GAAc,OAAO,KAAK,UAAU,KAAK,QAAS,KAAK,KAAK,WAAW,GAGxE,KAAK,KAAK,OAAO,QAAQ,AAAC,GAAO,CAIhC,AAAI,AAFH,QAAQ,CAAC,OAAQ,OAAQ,aAAc,aAAa,EAAG,EAAG,SAAS,GAAK,CAAC,EAAG,QAEvD,CAAC,GAEtB,GAAc,EAEhB,CAAC,EAGD,GAAI,GAAY,EAAK,OAAO,OAAO,AAAC,GAAO,EAAG,MAAQ,CAAC,EAAI,EAAG,UAAU,EAExE,MACC,GAAU,KAAK,AAAC,GAAO,OAAO,MAAM,aAAa,SAAS,EAAG,SAAS,CAAC,GACvE,EAAU,OAAS,IAEnB,GAAc,IAGV,GACJ,GAAc,OAAO,KAAK,UAAU,KAAK,QAAS,MAAM,GAGlD,CACN,YAAa,EACb,YAAa,CACd,CACD,CAEA,mBAAoB,CACnB,MAAO,CACN,MAAO,GAAG,kBAAmB,KAAM,4BAA4B,EAC/D,OAAQ,IAAM,KAAK,qBAAqB,EACxC,SAAU,EACX,CACD,CAEA,sBAAuB,CACtB,OAAO,MAAM,aAAa,KAAK,QAAS,IAAM,CAC7C,GAAI,GAAe,CAClB,WAAY,KACZ,QAAS,KAAK,QACd,SAAU,KAAK,MACf,KAAM,OAAO,SAAS,KAAK,OAAO,CACnC,CAAC,CACF,CAAC,CACF,IAEI,gBAAgB,CACnB,MAAO,wBACR,CACD,EAEA,OAAO,MAAM,WAAW,YAAc,SAAU,EAAS,CACxD,GAAI,GAAU,CAAC,EAEf,MAAO,GAAkB,EAAE,KAAK,AAAC,GAC5B,IACH,EAAc,QAAQ,AAAC,GAAU,CAChC,GAAI,GAAQ,QAAQ,OAAO,OAAO,KAAK,EAAM,iBAAiB,iBAC7D,EAAM,OAEP,EAAQ,KAAK,CAAE,KAAM,EAAM,KAAM,MAAO,CAAM,CAAC,CAChD,CAAC,EAGK,EACP,EAED,YAA6B,CAC5B,MAAO,QACL,KAAK,kEAAmE,CAAE,SAAQ,CAAC,EACnF,KAAK,AAAC,GAAM,EAAE,OAAO,CACxB,CACD,EAEA,OAAO,MAAM,WAAW,mBAAqB,SAAU,EAAS,CAC/D,GAAI,GAAS,EAAkB,EAC/B,EAAO,KAAK,EAEZ,WAA2B,EAAY,EAAY,EAAS,CAC3D,MAAO,QAAO,KAAK,CAClB,OAAQ,mEACR,KAAM,CACL,UACA,aACA,aACA,SACD,EACA,SAAU,SAAU,EAAG,CACtB,GAAI,GAAK,EAAE,QACX,AAAI,EAAG,SACN,QAAO,QAAQ,uBAAuB,EACtC,OAAO,eAAe,EAAG,mBAAqB,EAAG,SAElD,OAAO,UAAU,OAAQ,EAAS,SAAU,EAAG,iBAAiB,CACjE,CACD,CAAC,CACF,CAEA,YAA6B,CAI5B,GAAM,GAAgB,OAAO,SAAS,CAAO,EAAE,OAAO,OAAO,AAAC,GACtD,EAAG,YAAc,UAAY,EAAG,YAAc,eACrD,EACK,EAAgB,EAAsB,CAAa,EACnD,EAAU,EAAc,OAAS,EACjC,EAAuB,EAAU,GAAG,MAAM,EAAI,GAAG,gBAAgB,EACjE,EAAe,EAAU,GAAG,kBAAkB,EAAI,GAAG,uBAAuB,EAE9E,EAAiB,IAAM,CAC1B,GAAI,EAAS,CACZ,GAAM,GAAS,EAAO,WAAW,EACjC,EAAkB,EAAO,WAAY,EAAO,WAAY,EAAO,OAAO,EAAE,KACvE,IAAM,EAAO,KAAK,EAClB,AAAC,GAAQ,OAAO,SAAS,CAAG,CAC7B,CACD,KACC,QAAO,UAAU,OAAQ,iBAAkB,CAAE,SAAU,CAAQ,CAAC,CAElE,EAEA,MAAO,IAAI,QAAO,GAAG,OAAO,CAC3B,MAAO,EACP,OAAQ,EACR,uBACA,gBACD,CAAC,CACF,CAEA,WAA+B,EAAe,CAC7C,GAAI,CAAC,EAAc,OAClB,MAAO,CACN,CACC,UAAW,OACX,QAAS;AAAA;AAAA;AAAA,QAGN,GACD,qHACD;AAAA;AAAA;AAAA,KAIF,CACD,EAGD,GAAI,GAAS,CACZ,CACC,UAAW,OACX,UAAW,aACX,MAAO,GAAG,mBAAmB,EAC7B,KAAM,EACN,YAAa,CAAC,OAAQ,MAAM,EAAE,SAAS,CAAO,EAC3C,GAAG,mCAAmC,EACtC,EACJ,EACA,CACC,UAAW,SACX,UAAW,aACX,MAAO,GAAG,kBAAkB,EAC5B,QAAS,EAAc,IAAI,AAAC,GAAQ,EAAE,MAAO,EAAG,MAAO,MAAO,EAAG,SAAU,EAAE,EAC7E,QAAS,EAAc,GACvB,KAAM,CACP,CACD,EAEA,MAAI,KAAY,QACf,EAAO,KAAK,CACX,UAAW,OACX,UAAW,UACX,MAAO,GAAG,SAAS,EACnB,QAAS,SACV,CAAC,EAGK,CACR,CACD,ECvZA,OAAO,QAAQ,cAAc,EAE7B,OAAO,MAAM,UAAY,aAAwB,QAAO,MAAM,QAAS,OAC/D,iBAAiB,CACvB,GAAM,GAAQ,OAAO,UAAU,EAC/B,GAAI,CAAC,EAAM,IAAM,OAAO,KAAK,eAAe,OAAQ,CACnD,GAAI,GACJ,MAAI,QAAO,KAAK,eAAe,GAAG,UAAY,eAC7C,EAAgB,eAEhB,EAAgB,OAAO,KAAK,eAAe,GAAG,cAE/C,OAAO,UAAU,OAAQ,gBAAiB,QAAS,CAAa,EACzD,EACR,KAAO,AAAI,EAAC,EAAM,IAAO,EAAM,KAAO,gBAAkB,CAAC,EAAS,EAAM,EAAE,IACzE,OAAO,MACN,GACC,4FACD,CACD,EAED,MAAO,GAEP,WAAkB,EAAe,CAChC,MAAO,QAAO,KAAK,eAAe,KAAK,AAAC,GAAM,EAAE,gBAAkB,CAAa,CAChF,CACD,IAEI,YAAY,CACf,MAAO,OACR,CAEA,MAAO,CACN,MAAM,KAAK,EAEX,KAAK,wBAAwB,CAC5B,mBAAoB,KAAK,qBAC1B,CAAC,CACF,CAEA,gBAAiB,CAChB,MAAM,eAAe,EAGrB,KAAK,QAAU,KAAK,mBAAmB,SAAW,qBAClD,KAAK,WAAa,KAAK,mBAAmB,YAAc,OAExD,KAAK,cAAgB,OAAO,UAAU,EAAE,GACxC,KAAK,WAAa,KAAK,cACvB,KAAK,QAAU,KAAK,kBAAkB,CACvC,CAEA,eAAgB,CAEf,KAAK,QAAU,CAAC,EAChB,KAAK,QAAQ,KAAK,CACjB,KAAM,UACN,GAAI,CACH,MAAO,GAAG,SAAS,EACnB,UAAW,SACZ,CACD,CAAC,EACD,KAAK,QAAQ,KAAK,CACjB,KAAM,QACN,GAAI,CACH,MAAO,KAAK,eAAiB,GAAG,IAAI,EAAI,GAAG,MAAM,EACjD,UAAW,KAAK,eAAiB,aAAe,QACjD,CACD,CAAC,CACF,CAEA,eAAe,EAAK,CAKnB,MAHC,SAAQ,EAAI,IAAI,GAAK,KAAK,MAAM,EAAI,OAAS,IAAI,EAAE,SAAS,OAAO,QAAQ,IAAI,EAC5E,GACA,MAEL,IAEI,iBAAiB,CACpB,GAAM,GAAI,KAAK,YAAY,IAAI,EAAE,KAAK,AAAC,GAAW,EAAO,KAAO,kBAAkB,EAClF,MAAO,IAAK,EAAE,KAAO,MACtB,CAEA,eAAgB,CACf,KAAK,QAAQ,KAAK,gBAAgB,EAAE,OAAO,EAC3C,KAAK,QAAQ,QAAQ,KAAK,gBAAgB,CAAC,CAC5C,CAEA,QAAS,CACR,KAAK,cAAc,EACnB,KAAK,cAAc,EACnB,KAAK,YAAY,EACjB,KAAK,eAAe,EACpB,KAAK,aAAa,CACnB,CAEA,cAAc,EAAO,CACpB,GAAM,GAAa,EAAM,eACtB,iDAAiD,GAAG,iBAAiB,aACrE,GAEC,EAAO,GACX,AAAI,EAAM,mBAAqB,EAAM,oBAAsB,KAAK,SAC/D,GAAO;AAAA,YACE,OAAO,MAAM,cAAc,EAAM,kBAAmB,EAAM,cAAc;AAAA,aACvE,GAAG,kBAAmB,CAAC,EAAM,iBAAiB,CAAC;AAAA;AAAA,UAK1D,GAAM,GAAqB,aAAa,EAAM,mBAAoB,EAAI,EAChE,EACL,EAAM,QAAU,SACb,6CAA6C,GAAG,EAAM,MAAM,aAC5D,EAAM,QAAU,UAChB,kDAAkD,GAAG,EAAM,MAAM,aACjE,GAEJ,MAAO;AAAA;AAAA,MAEH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,GAGL,CAEA,mBAAoB,CACnB,GAAI,GAAgB,KAAK,cACrB,EAAkB,CACrB,CAAC,gBAAiB,qBAAsB,IAAK,gBAAiB,EAAI,EAClE,CAAC,gBAAiB,uBAAwB,IAAK,QAAS,EAAI,CAC7D,EACI,EAAU,CAAC,EACf,GAAI,IAAkB,OACrB,EAAU,EAAgB,OAAO,CAChC,CAAC,gBAAiB,mBAAoB,IAAK,OAAQ,EAAI,EACvD,CAAC,gBAAiB,eAAgB,SAAU,aAAc,EAAI,CAC/D,CAAC,UACS,QAAQ,CAAC,OAAQ,OAAO,EAAG,CAAa,EAClD,EAAU,EAAgB,OAAO,CAChC,CAAC,gBAAiB,eAAgB,IAAK,EAAe,EAAI,EAC1D,CAAC,gBAAiB,gBAAiB,KAAM,OAAO,KAAK,aAAc,EAAI,CACxE,CAAC,MACK,CACN,GAAI,GAAK,IACT,AAAI,GAAiB,gBACpB,GAAK,KACL,EAAgB,OAAO,KAAK,cAG7B,EAAU,EAAgB,OAAO,CAChC,CAAC,gBAAiB,mBAAoB,IAAK,WAAY,EAAI,EAC3D,CAAC,gBAAiB,SAAU,IAAK,OAAQ,EAAI,EAC7C,CAAC,gBAAiB,gBAAiB,EAAI,EAAe,EAAI,EAC1D,CAAC,gBAAiB,eAAgB,SAAU,aAAc,EAAI,CAC/D,CAAC,CACF,CAEA,MAAO,EACR,CAEA,uBAAwB,CACvB,GAAI,GAAgB,KAAK,cACrB,EACJ,MAAI,SAAQ,CAAC,OAAQ,OAAO,EAAG,CAAa,EACpC,GAAG,cAAe,CAAC,CAAa,CAAC,EAClC,CAAI,CAAC,GAAiB,CAAC,OAAO,KAAK,eAAe,OAExD,EAAO,CACN,QAAS,gBACT,IAAK,GAAG,kBAAkB,EAC1B,MAAO,GAAG,mBAAmB,CAC9B,EAGA,EAAO,CACN,QAAS,gBACT,IAAK,GAAG,WAAW,EACnB,MAAO,GAAG,eAAe,CAC1B,EAaM;AAAA;AAAA,MAVM,OAAO,MAAM,WAAW,EAAK,OAAO,EAC9C,MAAM,EAAK;AAAA;AAAA;AAAA,OAGT,EAAK;AAAA;AAAA;AAAA,KAIP,MAAM,GAAG,4BAA4B;AAAA;AAAA,IAOzC,CAEA,cAAe,CACd,AAAI,CAAC,KAAK,eAAiB,CAAC,OAAO,KAAK,eAAe,OACtD,QAAO,cAAgB,CACtB,SAAU,OAAO,QAAQ,UAC1B,EACA,OAAO,QAAQ,eAAe,GAE9B,GAAI,QAAO,MAAM,qBAEnB,CACD,ECxNA,OAAO,QAAQ,cAAc,EAE7B,OAAO,MAAM,SAAW,aAAuB,QAAO,MAAM,QAAS,OAC7D,iBAAiB,CAEvB,GAAI,AADU,OAAO,UAAU,EACrB,SAAW,EAAG,CACvB,GAAM,GAAqB,OAAO,kBAAkB,OAAQ,MAAM,EAClE,cAAO,UACN,OACA,OACA,EAAmB,aAAe,OAAO,KAAK,WAC/C,EACO,EACR,CACA,MAAO,GAAkC,CAC1C,IAEI,YAAY,CACf,MAAO,MACR,CAEA,MAAO,CACN,AAAK,EAAkC,GACtC,MAAM,KAAK,CAEb,CAEA,YAAa,CACZ,KAAK,cAAc,EACnB,KAAK,aAAa,EAClB,KAAK,MAAM,KAAK,8BAA8B,EAAE,SAAS,WAAW,EACpE,KAAK,wBAAwB,EAC7B,KAAK,KAAK,WAAW,GAAG,kBAAkB,EAAG,IAAM,CAClD,OAAO,MAAM,SAAS,UAAY,CAAC,OAAO,MAAM,SAAS,UACzD,KAAK,QAAQ,CACd,CAAC,CACF,CAEA,sBAAuB,CACtB,KAAK,WAAa,EAAE;AAAA,8BACQ,KAAK,qBAAqB;AAAA;AAAA,MAElD,KAAK,sBAAsB;AAAA;AAAA,SAExB,EAAE,KAAK,EACd,KAAK,aAAa,OAAO,KAAK,UAAU,CACzC,CAEA,UAAW,CACV,GAAI,GAAO,MAAM,SAAS,EAC1B,MAAI,QAAO,MAAM,SAAS,WACzB,OAAO,OAAO,EAAM,CACnB,SAAU,mBAAmB,KAAK,WAAW,KAAK,YACnD,CAAC,EAEK,CACR,CAEA,iBAAkB,CACjB,GAAM,GAAQ,OAAO,UAAU,EAG/B,AAFA,EAAM,OAAO,EAAE,EAEX,AADgB,EAAM,EAAM,OAAS,KACrB,QAEpB,OAAO,YAAY,IAAI,CACtB,KAAM,SACN,MAAO,GAAG,MAAM,EAChB,MAAO,qBACR,CAAC,CACF,CAEA,gBAAiB,CAChB,MAAO,OAAM,eAAe,EAAE,KAAK,IAAM,CACxC,KAAK,WAAa,GAAG,cAAc,EAEnC,GAAM,GAAQ,OAAO,UAAU,EAC/B,KAAK,eAAiB,EAAM,MAAM,CAAC,EAAE,KAAK,GAAG,GAAK,OAClD,KAAK,QAAU,CAAC,CAAC,OAAQ,SAAU,IAAK,KAAK,eAAgB,EAAI,CAAC,EAClE,KAAK,SAAW,KAAK,mBAAmB,UAAY,gBAEpD,KAAK,WAAa,KAAK,WAAW,OAAO,KAAK,gBAAgB,CAAC,CAChE,CAAC,CACF,CAEA,iBAAkB,CAwDjB,MAvDc,CACb,CACC,MAAO,GAAG,MAAM,EAChB,OAAQ,IAAM,CACb,OAAO,UAAU,OAAQ,OAAQ,MAAM,CACxC,CACD,EACA,CACC,MAAO,GAAG,YAAY,EACtB,OAAQ,IAAM,CACb,OAAO,OACN,GAAG,MAAM,EACT,AAAC,GAAW,CACX,AAAI,EAAO,MAAM,QAAQ,GAAG,EAAI,IAC/B,OAAO,MAAM,GAAG,4CAA4C,CAAC,EAE9D,GAAM,GAAO,CACZ,UAAW,EAAO,MAClB,OAAQ,KAAK,cACd,EACA,OAAO,KAAK,CACX,OAAQ,yCACR,KAAM,CACP,CAAC,CACF,EACA,GAAG,mBAAmB,EACtB,GAAG,QAAQ,CACZ,CACD,CACD,EACA,CACC,MAAO,GAAG,YAAY,EACtB,OAAQ,IAAM,CACb,GAAI,QAAO,GAAG,aAAa,CAC1B,OAAQ,KAAK,eACb,aAAc,CACb,mBAAoB,CAAC,MAAM,CAC5B,EACA,WAAY,AAAC,GAAS,CACrB,OAAO,WAAW,GAAG,oBAAoB,CAAC,EAC1C,OACE,KAAK,kCAAmC,CACxC,KAAM,EAAK,IACZ,CAAC,EACA,KAAK,AAAC,GAAM,CACZ,AAAI,EAAE,SACL,OAAO,WAAW,GAAG,qBAAsB,CAAC,EAAE,OAAO,CAAC,CAAC,CAEzD,CAAC,CACH,CACD,CAAC,CACF,CACD,CACD,CAGD,CAEA,yBAA0B,CACzB,KAAK,YAAc,KAAK,KACtB,WAAW,GAAG,KAAK,EAAG,IAAM,CAC5B,OAAO,aAAa,IAAI,KAAK,kBAAkB,EAAG,KAAK,cAAc,EACrE,KAAK,QAAQ,QAAQ,eAAe,EAAE,SAAS,KAAK,CACrD,CAAC,EACA,KAAK,EAEP,KAAK,WAAa,KAAK,KACrB,WAAW,GAAG,OAAO,EAAG,IAAM,OAAO,aAAa,MAAM,KAAK,cAAc,CAAC,EAC5E,KAAK,EAEP,KAAK,KAAK,sBAAsB,GAAG,eAAe,EAAG,IAAM,CAC1D,GAAI,GAAW,KAAK,kBAAkB,EAAI,EAC1C,AAAI,EAAS,QACZ,cAAc,6CAA8C,CAC3D,MAAO,KAAK,UAAU,CAAQ,CAC/B,CAAC,CAEH,CAAC,CACF,CAEA,YAAa,CACZ,KAAK,OAAS,KAAK,KAAK,OACtB,OAAO,AAAC,GAAO,OAAO,MAAM,cAAc,EAAG,SAAS,GAAK,CAAC,EAAG,MAAM,EACrE,IAAI,AAAC,GAAO,EAAG,SAAS,EACxB,OAAO,CAAC,OAAQ,WAAY,UAAU,CAAC,CAC1C,CAEA,aAAa,EAAM,CAClB,MAAM,aAAa,CAAI,EAEvB,KAAK,KAAO,KAAK,KAAK,IAAI,AAAC,GAAM,KAAK,cAAc,CAAC,CAAC,EAGtD,GAAM,CAAE,WAAY,KAAK,cACzB,AAAI,IAAY,aACf,KAAK,KAAK,KAAK,CAAC,EAAG,IACd,EAAE,WAAa,CAAC,EAAE,UACd,GAEJ,CAAC,EAAE,WAAa,EAAE,UACd,EAED,CACP,CAEH,CAEA,cAAc,EAAG,CAChB,GAAI,GAAa,GACb,EAAO,GACX,AAAI,EAAE,UACL,GAAa,gBACb,EAAO,UACD,AAAI,OAAO,MAAM,cAAc,EAAE,SAAS,EAChD,GAAa,QACb,EAAO,SAEP,GAAa,OACb,EAAO,QAGR,GAAI,GAAQ,EAAE,WAAa,EAAE,SAC7B,SAAQ,EAAM,MAAM,EAAG,EAAE,EACzB,EAAE,OAAS,EACX,EAAE,WAAa,EACf,EAAE,MAAQ,EAEV,EAAE,aAAe;AAAA,KACd,OAAO,MAAM,KAAK,CAAU;AAAA,WACtB;AAAA,KACN,EAAE,WAAa,gDAAkD;AAAA,IAE7D,CACR,CAEA,eAAgB,CACf,MAAM,cAAc,EACpB,OAAO,MAAM,cAAc,KAAK,OAAQ,YAAa,OAAO,MAAM,SAAS,SAAS,EACpF,KAAK,wBAAwB,CAC5B,YAAa,KAAK,cACnB,CAAC,CACF,CAEA,QAAS,CACR,KAAK,QAAQ,MAAM,EAAE,YAAY,gBAAgB,EACjD,AAAI,OAAO,MAAM,SAAS,UACzB,KAAK,iBAAiB,EAEtB,OAAM,OAAO,EACb,KAAK,cAAc,EAErB,CAEA,cAAe,CAAC,CAEhB,aAAc,CACb,AAAI,OAAO,MAAM,SAAS,UACzB,KAAK,iBAAiB,EAEtB,MAAM,YAAY,CAEpB,CAEA,kBAAmB,CAClB,GAAI,GAAO,KAAK,KACd,IAAI,AAAC,GAAM,CACX,GAAM,GAAa,EAAE,WAAa,SAC9B,EACH,EAAE,OAAS,QACR,qCAAqC,EAAE,kBAAkB,EAAE,oBAC3D,OAAO,MAAM,KAAK,EAAY,CAC9B,MAAO,OACP,OAAQ,MACR,CAAC,EACC,EAAO,OAAO,EAAE,IAAI,EACpB,EAAY,EAAE,MAAQ,SAC5B,MAAO;AAAA,eACI,KAAK,cAAc,CAAC;AAAA,kBACjB,+CAAuD;AAAA;AAAA,yFAEgB;AAAA;AAAA;AAAA,QAGjF;AAAA;AAAA;AAAA,yCAGiC,EAAE;AAAA,mCACR,KAAK,kBAAkB,CAAC;AAAA;AAAA;AAAA,IAIxD,CAAC,EACA,KAAK,EAAE,EAET,KAAK,QAAQ,SAAS,gBAAgB,EACtC,KAAK,QAAQ,MAAM,EAAE,KACpB;AAAA,MACG;AAAA,UAEJ,CACD,CAEA,sBAAuB,CAEtB,GAAM,GAAU,AADF,OAAO,UAAU,EACT,MAAM,CAAC,EAE7B,MAAO,GACL,IAAI,CAAC,EAAQ,IACT,IAAM,EAAQ,OAAS,EACnB,SAAS,WASV,YAPO,EAAQ,OAAO,CAAC,EAAK,EAAM,IACpC,IAAK,GACR,IAAO,IAAM,GAEP,GACL,gBAAgB,MAEU,OAC7B,EACA,KAAK,eAAe,CACvB,CAEA,iBAAkB,CACjB,GAAM,GAAmB,KAAK,qBAAqB,EAE/C,EAAuB,AAAC,OAAO,MAAM,SAAS,UAI/C,GAHA,6EAA6E,GAC7E,YACA,MAGC,EAAsB,AAAC,OAAO,MAAM,SAAS,UAO9C,GANA;AAAA,aACQ,GAAG,MAAM;AAAA;AAAA;AAAA,aAGT,GAAG,SAAS;AAAA,YAInB,EAAe;AAAA;AAAA,MAEf;AAAA,+BACyB;AAAA;AAAA,KAE1B;AAAA,IAGH,MAAO,MAAK,yBAAyB,EAAc,kCAAkC,CACtF,CAEA,cAAc,EAAM,CACnB,MAAO,GAAK,UAAY,kBAAoB,EAAK,KAAO,KAAK,cAAc,CAAI,CAChF,CAEA,kBAAkB,EAAM,CACvB,GAAM,CAAC,GAAQ,EAAK,SAAS,MAAM,GAAG,EAClC,EACJ,MAAI,KAAS,OAAO,SAAS,SAAS,EACrC,EAAa,aAAa,EAAK,QAAQ,EAEvC,EAAa,OAAO,SAAS,YAAY,CAAI,EAEvC,CACR,CAEA,cAAc,EAAM,CACnB,EAAO,KAAK,cAAc,CAAI,EAC9B,GAAM,GAAY,EAAK,UAAY,OAAO,KAAK,WAAW,SAAS,EAAK,SAAS,EAAI,GAC/E,EAAY,KAAK,cAAc,CAAI,EAEzC,MAAO;AAAA;AAAA;AAAA;AAAA,mCAI0B,EAAK;AAAA;AAAA,gDAEQ,EAAK;AAAA,iCACpB,aAAqB,EAAK;AAAA,QACnD,EAAK;AAAA;AAAA;AAAA;AAAA;AAAA,YAKD;AAAA;AAAA;AAAA,YAGA,KAAK,kBAAkB,CAAI;AAAA;AAAA,GAGtC,CAEA,eAAe,EAAM,CACpB,MAAO;AAAA;AAAA,MAEH,aAAa,EAAK,QAAQ;AAAA;AAAA,GAG/B,CAEA,cAAe,CACd,MAAM,aAAa,EACnB,KAAK,kBAAkB,CACxB,CAEA,mBAAoB,CACnB,KAAK,QAAQ,GAAG,YAAa,uBAAwB,AAAC,GAAM,CAC3D,EAAE,gBAAgB,EAClB,EAAE,cAAc,aAAa,QAAQ,OAAQ,EAAE,EAAE,aAAa,EAAE,KAAK,WAAW,CAAC,EACjF,EAAE,OAAO,MAAM,QAAU,MACzB,OAAO,aAAa,IACnB,CAAC,CAAE,KAAM,EAAE,EAAE,aAAa,EAAE,KAAK,WAAW,CAAE,CAAC,EAC/C,KAAK,cACN,CACD,CAAC,EAED,KAAK,QAAQ,GACZ,WACA,AAAC,GAAM,CACN,EAAE,eAAe,CAClB,EACA,EACD,EAEA,KAAK,QAAQ,GAAG,UAAW,uBAAwB,AAAC,GAAM,CACzD,EAAE,eAAe,EACjB,EAAE,gBAAgB,EAClB,EAAE,OAAO,MAAM,QAAU,GAC1B,CAAC,EAED,KAAK,QAAQ,GAAG,OAAQ,AAAC,GAAM,CAC9B,EAAE,gBAAgB,EAClB,EAAE,eAAe,EACjB,GAAM,GAAM,EAAE,EAAE,MAAM,EAAE,QAAQ,eAAe,EAE3C,EAAe,EAAE,cAAc,aACnC,GAAI,EAAC,GAEL,GAAI,EAAa,OAAS,EAAa,MAAM,OAAS,EACrD,GAAI,QAAO,GAAG,aAAa,CAC1B,MAAO,EAAa,MACpB,OAAQ,KAAK,cACd,CAAC,UACS,EAAa,QAAQ,MAAM,GACjC,EAAI,QAAQ,UAAU,EAAE,SAAW,EAAG,CACzC,GAAM,GAAY,EAAa,QAAQ,MAAM,EACvC,EAAc,mBAAmB,EAAI,KAAK,WAAW,CAAC,EAC5D,OAAO,aAAa,MAAM,CAAW,EACrC,OAAO,WAAW,QAAQ,cAAsB,GAAa,CAC9D,EAEF,CAAC,CACF,CAEA,oBAAqB,CACpB,MAAM,mBAAmB,EACzB,KAAK,yBAAyB,CAC/B,CAEA,gBAAiB,CAChB,MAAM,eAAe,EACrB,KAAK,yBAAyB,CAC/B,CAEA,0BAA2B,CAC1B,GAAM,GACL,CAAC,OAAO,aAAa,WACrB,OAAO,aAAa,aAAe,KAAK,eACnC,EAAe,CAAE,MAAK,SAAW,KAAK,QAAQ,OAAS,GAE7D,KAAK,WAAW,OAAO,CAAC,CAAc,EACtC,KAAK,YAAY,OAAO,CAAC,CAAY,CACtC,CACD,EAEA,OAAO,MAAM,SAAS,UAAY,OAAO,kBAAkB,MAAM,EAAE,WAAa,GAEhF,YAA6C,CAE5C,MAAI,AADU,QAAO,UAAU,EACrB,KAAO,OAGhB,QAAO,UAAU,OAAQ,OAAQ,MAAM,EAChC,IAED,EACR,CCvbA,OAAO,OC/BP,OAAO,QAAQ,cAAc,EAC7B,OAAO,QAAQ,6BAA6B,EAE5C,OAAO,MAAM,oBAAsB,KAA0B,CAC5D,YAAY,EAAM,CACjB,EAAE,OAAO,KAAM,CAAI,EACnB,KAAK,KAAK,CACX,CAEA,MAAO,CACN,GAAI,GAAK,KACT,EAAG,OAAS,GAAI,QAAO,GAAG,OAAO,CAChC,MAAO,EAAG,OAAS,EAAG,SAAW,GAAG,cAAc,EAClD,mBAAoB,GACpB,OAAQ,EAAG,WAAW,EACtB,qBAAsB,GAAG,QAAQ,EACjC,eAAgB,UAAY,CAC3B,EAAG,cAAc,CAClB,CACD,CAAC,EAED,EAAE,QAAQ,EAAE,GAAG,kBAAmB,SAAU,EAAO,EAAY,CAC9D,GAAI,EAAG,OAAO,QAAS,CACtB,GAAI,GAAU,EAAE,EAAG,OAAO,YAAY,mBAAmB,OAAO,EAG5D,EAAgB,EAAQ,KAAK,0BAA0B,EAAE,IAAI,UAAY,CAC5E,MAAO,GAAE,IAAI,EAAE,KAAK,gBAAgB,CACrC,CAAC,EAGD,EAAG,cAAc,EAGjB,EAAc,KAAK,EAAW,IAAI,EAElC,EAAE,KAAK,EAAe,SAAU,EAAG,EAAU,CAC5C,EAAQ,KAAK,oBAAsB,EAAW,IAAI,EAAE,KAAK,UAAW,EAAI,CACzE,CAAC,CACF,CACD,CAAC,EACD,EAAG,QAAQ,EACX,EAAG,OAAO,KAAK,CAChB,CAEA,YAAa,CACZ,GAAI,GAAK,KACL,EAAmB,OAAO,KAAK,EAAiB,CAAC,EAiDrD,MA/Ca,CACZ,CACC,MAAO,GAAG,WAAW,EACrB,UAAW,SACX,UAAW,mBACX,QAAS,EACT,KAAM,EACN,SAAU,IAAM,CACf,GAAI,GAAS,EAAG,WAAW,EAC3B,EAAG,WAAW,EAAE,QAAQ,AAAC,GAAU,CAClC,AAAI,EAAM,WAAa,oBACtB,GAAG,OAAO,gBAAgB,EAAM,UAAW,OAAQ,CAAC,EACpD,EAAG,OAAO,gBAAgB,EAAM,UAAW,SAAU,CAAC,EAExD,CAAC,EACD,EAAG,uBAAuB,CAAM,EAChC,EAAG,qBAAqB,CACzB,CACD,EACA,CACC,MAAO,GAAG,UAAU,EACpB,UAAW,SACX,UAAW,WACX,QAAS,GACT,OAAQ,CACT,EACA,CAAE,MAAO,GAAG,QAAQ,EAAG,UAAW,QAAS,UAAW,SAAU,QAAS,GAAI,EAC7E,CAAE,UAAW,cAAe,EAC5B,CAAE,MAAO,GAAG,MAAM,EAAG,UAAW,WAAY,UAAW,UAAW,EAClE,CACC,MAAO,GAAG,aAAa,EACvB,UAAW,OACX,UAAW,cACX,QAAS,MACV,EACA,CAAE,UAAW,eAAgB,EAC7B,CAAE,MAAO,GAAG,SAAS,EAAG,UAAW,OAAQ,UAAW,SAAU,EAChE,CAAE,UAAW,eAAgB,EAC7B,CAAE,UAAW,cAAe,UAAW,aAAc,EACrD,CAAE,UAAW,eAAgB,EAC7B,CACC,MAAO,GAAG,oBAAoB,EAC9B,UAAW,OACX,UAAW,oBACZ,CACD,CAGD,CAEA,sBAAuB,CACtB,GAAI,GAAK,KACT,OAAO,MAAM,aAAa,QAAS,IAAM,CACxC,GAAI,GAAa,OAAO,KACtB,aAAa,QAAS,gBAAgB,EACtC,QAAQ,MAAM;AAAA,CAAI,EACpB,EAAG,OAAO,UAAU,UAAU,EAAE,MAAM,EAAE,YAAY,CAAU,CAC/D,CAAC,CACF,CAEA,SAAU,CACT,KAAK,aAAa,CACnB,CAEA,uBAAuB,EAAQ,CAC9B,GAAI,GAAK,KACT,GAAI,GAAU,oBAAsB,GAAQ,CAC3C,GAAI,GAAc,EAAiB,EACnC,EAAY,EAAO,kBAAkB,YAAe,QAAQ,AAAC,GAAU,CACtE,EAAG,OAAO,gBAAgB,EAAO,OAAQ,CAAC,CAC3C,CAAC,EAED,EAAY,EAAO,kBAAkB,cAAiB,QAAQ,AAAC,GAAU,CACxE,EAAG,OAAO,gBAAgB,EAAO,SAAU,CAAC,CAC7C,CAAC,CACF,CACD,CAEA,cAAe,CACd,GAAI,GAAS,KAAK,OAAO,YACrB,EAAS,EAAE,EAAO,mBAAmB,OAAO,EAEhD,AAAK,KAAK,aACT,MAAK,YAAc,CAAC,GAGrB,GAAI,GAAO,CACV,OAAQ,mBACR,WAAY,AAAC,GAAe,KAAK,YAAY,KAAK,CAAU,CAC7D,EAEA,AAAI,KAAK,KACR,GAAO,CACN,QAAS,KAAK,IAAI,QAClB,QAAS,KAAK,IAAI,QAClB,OAAQ,mBACR,WAAY,AAAC,GAAe,CAC3B,KAAK,IAAI,YAAY,oBAAoB,CAAU,EACnD,KAAK,cAAc,CACpB,CACD,GAGD,EACC,mFACC,GAAG,oBAAoB,EACvB,sKAGA,GAAG,gBAAgB,EACnB,UACF,EAAE,SAAS,EAAO,MAAM,CAAC,EACzB,EAAO,KAAK,yBAAyB,EAAE,GAAG,QAAS,IAAM,GAAI,QAAO,GAAG,aAAa,CAAI,CAAC,EACzF,KAAK,cAAc,CACpB,CAEA,eAAgB,CACf,GAAI,GAAS,KAAK,OAAO,YACrB,EAAS,EAAE,EAAO,mBAAmB,OAAO,EAAE,KAAK,cAAc,EAAE,MAAM,EAEzE,EAAQ,CAAC,EACb,AAAI,KAAK,aAAe,KAAK,YAAY,QACxC,GAAQ,EAAM,OAAO,KAAK,WAAW,GAElC,SACH,GAAQ,EAAM,OAAO,QAAQ,UAAU,CAAC,GAGrC,EAAM,QACT,EAAE,KAAK,EAAO,SAAU,EAAG,EAAG,CAC7B,AAAI,CAAC,EAAE,WACP,GAAE,SAAW,OAAO,OAAO,aAAa,EAAE,QAAQ,EAElD,EACC,KACC,sSAMA,CACD,CACD,EAAE,SAAS,CAAM,EAClB,CAAC,CAEH,CAEA,eAAgB,CACf,GAAI,GAAK,KACL,EAAM,EAAG,OAAO,gBAAgB,EAEhC,EAAc,KAAK,WAAW,EAClC,GAAI,CAAC,EAAa,OAElB,GAAI,GAAuB,EAAE,IAC5B,EAAE,EAAG,OAAO,OAAO,EAAE,KAAK,0BAA0B,EACpD,SAAU,EAAS,CAClB,MAAO,GAAE,CAAO,EAAE,KAAK,gBAAgB,CACxC,CACD,EAEA,EAAG,mBAAmB,EAAK,EAAa,CAAoB,CAC7D,CAEA,YAAa,CACZ,GAAI,GAAK,KACL,EAAS,KAAK,OAAO,WAAW,EAAI,EACxC,MAAI,IACH,GAAO,kBAAuB,EAAG,IAAI,IAAI,QACzC,EAAO,mBAAwB,EAAG,IAAI,IAAI,MAGpC,CACR,CAEA,mBAAmB,EAAK,EAAa,EAAsB,CAC1D,GAAI,GAAK,KACT,EAAG,OAAO,KAAK,EAEf,GAAI,GAAY,EAAiB,EAC7B,EAAqB,CAAC,EAC1B,cAAO,KAAK,CAAW,EAAE,QAAQ,AAAC,GAAU,CAC3C,EAAmB,EAAU,EAAY,kBAAkB,UAAa,IACvE,EAAY,EACd,CAAC,EAEG,cAAgB,IACnB,GAAmB,WAAgB,EAAY,QAAU,EAAI,SAAW,WAErE,EAAmB,SAAc,SACpC,GAAmB,mBAAwB,CAC1C,CACC,kBAAmB,EAAY,kBAC/B,kBAAmB,EAAY,kBAChC,CACD,GAEK,SAAW,IAChB,GAAmB,MAAW,OAAO,QAAQ,MAE1C,CAAE,gBAAiB,KAAuB,EAAmB,SAAc,QAC9E,GAAmB,YAAiB,OAAO,QAAQ,MAE7C,OAAO,KAAK,CAClB,OAAQ,uBACR,KAAM,CAAE,IAAK,CAAmB,EAChC,IAAK,EACL,SAAU,SAAU,EAAG,CACtB,AAAK,EAAE,IAgBN,OAAO,SACN,GAAG,kEAAkE,CACtE,EAjBA,QAAO,WAAW,CACjB,QAAS,GAAG,2BAA4B,CAAC,EAAY,gBAAgB,CAAC,EACtE,UAAW,OACZ,CAAC,EACG,eAAiB,IACpB,EAAG,gBAAgB,EAAE,QAAS,EAAY,WAAc,EAGrD,GACH,EAAG,gBAAgB,EAAE,QAAS,CAAoB,EAE/C,SACH,QAAQ,WAAW,EAOtB,CACD,CAAC,CACF,CAEA,gBAAgB,EAAK,EAAU,CAC9B,AAAI,EAAI,SAAW,QAClB,OAAO,KAAK,CACX,OAAQ,iCACR,KAAM,CACL,QAAS,EAAI,QACb,KAAM,EAAI,KACV,UAAW,KAAK,UAAU,CAAC,CAAQ,CAAC,CACrC,EACA,SAAU,SAAU,EAAG,CACtB,GAAK,EAAE,IAMA,CACN,OAAO,WAAW,CACjB,QAAS,GAAG,8CAA8C,EAC1D,UAAW,QACZ,CAAC,EACD,MACD,KAZY,CACX,OAAO,WAAW,CACjB,QAAS,GAAG,wCAAyC,CAAC,CAAQ,CAAC,EAC/D,UAAW,OACZ,CAAC,EACD,MACD,CAOD,CACD,CAAC,CAEH,CAEA,gBAAgB,EAAK,EAAa,CACjC,OAAO,KAAK,CACX,OAAQ,4CACR,KAAM,CACL,QAAS,EAAI,QACb,KAAM,EAAI,KACV,YAAa,KAAK,UAAU,CAAW,CACxC,EACA,SAAU,SAAU,EAAG,CACtB,GAAK,EAAE,IAEA,CACN,OAAO,WAAW,CACjB,QAAS,GACR,mEACD,EACA,UAAW,QACZ,CAAC,EACD,MACD,KATC,OAUF,CACD,CAAC,CACF,CACD,EAEA,YAA4B,CA4B3B,MA3BgB,CACf,MAAO,CACN,UAAW,CACV,iBAAkB,UAClB,QAAS,UACT,YAAa,cACb,SAAU,iBACV,SAAU,YACV,OAAQ,YACT,EACA,YAAa,CAAC,UAAW,UAAU,EACnC,cAAe,CAAC,CACjB,EACA,KAAM,CACL,UAAW,CACV,iBAAkB,UAClB,YAAa,cACb,SAAU,OACV,kBAAmB,iBACnB,mBAAoB,iBACpB,YAAa,OACd,EACA,YAAa,CAAC,aAAa,EAC3B,cAAe,CAAC,SAAU,UAAU,CACrC,CACD,CAGD,CC7WC,OAAO,UAAU,oBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECA1C,OAAO,UAAU,eAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;QCArC,OAAO,UAAU,aAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;QCAnC,OAAO,UAAU,cAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;QCApC,OAAO,UAAU,YAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
