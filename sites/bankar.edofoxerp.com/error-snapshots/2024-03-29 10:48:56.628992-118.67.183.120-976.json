{
 "etype": "JSONDecodeError",
 "evalue": "JSONDecodeError('Extra data: line 1 column 96 (char 95)')",
 "exception": {
  "args": [
   40,
   39,
   69,
   120,
   116,
   114,
   97,
   32,
   100,
   97,
   116,
   97,
   58,
   32,
   108,
   105,
   110,
   101,
   32,
   49,
   32,
   99,
   111,
   108,
   117,
   109,
   110,
   32,
   57,
   54,
   32,
   40,
   99,
   104,
   97,
   114,
   32,
   57,
   53,
   41,
   39,
   44,
   41
  ],
  "colno": [
   57,
   54
  ],
  "doc": [
   39,
   123,
   34,
   102,
   105,
   101,
   108,
   100,
   95,
   102,
   105,
   108,
   116,
   101,
   114,
   115,
   34,
   58,
   123,
   125,
   44,
   34,
   97,
   116,
   116,
   114,
   105,
   98,
   117,
   116,
   101,
   95,
   102,
   105,
   108,
   116,
   101,
   114,
   115,
   34,
   58,
   123,
   125,
   44,
   34,
   105,
   116,
   101,
   109,
   46,
   46,
   46,
   105,
   108,
   116,
   101,
   114,
   115,
   34,
   58,
   102,
   97,
   108,
   115,
   101,
   125,
   37,
   92,
   39,
   32,
   65,
   78,
   68,
   32,
   50,
   42,
   51,
   42,
   56,
   61,
   54,
   42,
   56,
   32,
   65,
   78,
   68,
   32,
   92,
   39,
   112,
   84,
   99,
   118,
   92,
   39,
   33,
   61,
   92,
   39,
   112,
   84,
   99,
   118,
   37,
   39
  ],
  "lineno": [
   49
  ],
  "msg": [
   39,
   69,
   120,
   116,
   114,
   97,
   32,
   100,
   97,
   116,
   97,
   39
  ],
  "pos": [
   57,
   53
  ],
  "with_traceback": [
   60,
   98,
   117,
   105,
   108,
   116,
   45,
   105,
   110,
   32,
   109,
   101,
   116,
   104,
   111,
   100,
   32,
   119,
   105,
   116,
   104,
   95,
   116,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   111,
   102,
   32,
   74,
   83,
   79,
   78,
   68,
   101,
   99,
   111,
   100,
   101,
   69,
   114,
   114,
   111,
   114,
   32,
   111,
   98,
   106,
   101,
   99,
   116,
   62
  ]
 },
 "frames": [
  {
   "call": "(request=<Request 'https://bankar.edofoxerp.com/' [POST]>)",
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py'>",
    "frappe.handler. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "response": "None"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "61": "",
    "62": "\t\telif frappe.form_dict.cmd:",
    "63": "\t\t\tresponse = frappe.handler.handle()",
    "64": "",
    "65": "\t\telif request.path.startswith(\"/api/\"):"
   },
   "lnum": 63
  },
  {
   "call": "()",
   "dump": {
    "cmd": "'erpnext.e_commerce.api.get_product_filter_data'",
    "data": "None",
    "global execute_cmd": "<function execute_cmd>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "handle",
   "lines": {
    "43": "",
    "44": "\tif cmd != \"login\":",
    "45": "\t\tdata = execute_cmd(cmd)",
    "46": "",
    "47": "\t# data can be an empty string or list which are valid responses"
   },
   "lnum": 45
  },
  {
   "call": "(cmd='erpnext.e_commerce.api.get_product_filter_data', from_async=False)",
   "dump": {
    "frappe. call": "<function call>",
    "frappe. form_dict": "{'cmd': 'erpnext.e_commerce.api.get_product_filt...\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%'}",
    "global frappe": "<module 'frappe' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "method": "<function get_product_filter_data>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "execute_cmd",
   "lines": {
    "81": "\t\tis_valid_http_method(method)",
    "82": "",
    "83": "\treturn frappe.call(method, **frappe.form_dict)",
    "84": "",
    "85": ""
   },
   "lnum": 83
  },
  {
   "call": "(fn=<function get_product_filter_data>, *args=(), **kwargs={'cmd': 'erpnext.e_commerce.api.get_product_filter_data', 'query_args': '{\"field_filters\":{},\"attribute_filters\":{},\"item...ilters\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%'})",
   "dump": {
    "args": "()",
    "fn": "<function get_product_filter_data>",
    "newargs": "{'query_args': '{\"field_filters\":{},\"attribute_filters\":{},\"item...ilters\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%'}"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py",
   "func": "call",
   "lines": {
    "1605": "\tnewargs = get_newargs(fn, kwargs)",
    "1606": "",
    "1607": "\treturn fn(*args, **newargs)",
    "1608": "",
    "1609": ""
   },
   "lnum": 1607
  },
  {
   "call": "(query_args='{\"field_filters\":{},\"attribute_filters\":{},\"item...ilters\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%')",
   "dump": {
    "global json": "<module 'json' from '/usr/lib/python3.10/json/__init__.py'>",
    "json. loads": "<function loads>",
    "query_args": "'{\"field_filters\":{},\"attribute_filters\":{},\"item...ilters\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%'"
   },
   "file": "/home/gauritrans/frappe-bench/apps/erpnext/erpnext/e_commerce/api.py",
   "func": "get_product_filter_data",
   "lines": {
    "28": "\t\"\"\"",
    "29": "\tif isinstance(query_args, str):",
    "30": "\t\tquery_args = json.loads(query_args)",
    "31": "",
    "32": "\tquery_args = frappe._dict(query_args)"
   },
   "lnum": 30
  },
  {
   "call": "(s='{\"field_filters\":{},\"attribute_filters\":{},\"item...ilters\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%', cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw={})",
   "dump": {
    "_default_decoder. decode": "<bound method JSONDecoder.decode of <json.decoder.JSONDecoder object>>",
    "global _default_decoder": "<json.decoder.JSONDecoder object>",
    "s": "'{\"field_filters\":{},\"attribute_filters\":{},\"item...ilters\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%'"
   },
   "file": "/usr/lib/python3.10/json/__init__.py",
   "func": "loads",
   "lines": {
    "344": "            parse_int is None and parse_float is None and",
    "345": "            parse_constant is None and object_pairs_hook is None and not kw):",
    "346": "        return _default_decoder.decode(s)",
    "347": "    if cls is None:",
    "348": "        cls = JSONDecoder"
   },
   "lnum": 346
  },
  {
   "call": "(self=<json.decoder.JSONDecoder object>, s='{\"field_filters\":{},\"attribute_filters\":{},\"item...ilters\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%', _w=<built-in method match of re.Pattern object>)",
   "dump": {
    "end": "95",
    "global JSONDecodeError": "<class 'json.decoder.JSONDecodeError'>",
    "s": "'{\"field_filters\":{},\"attribute_filters\":{},\"item...ilters\":false}%\\' AND 2*3*8=6*8 AND \\'pTcv\\'!=\\'pTcv%'"
   },
   "file": "/usr/lib/python3.10/json/decoder.py",
   "func": "decode",
   "lines": {
    "338": "        end = _w(s, end).end()",
    "339": "        if end != len(s):",
    "340": "            raise JSONDecodeError(\"Extra data\", s, end)",
    "341": "        return obj",
    "342": ""
   },
   "lnum": 340
  }
 ],
 "locals": {
  "_w": "<built-in method match of re.Pattern object>",
  "end": "95",
  "obj": "{'attribute_filters': {}, 'field_filters': {}, 'from_filters': False, 'item_group': None, 'start': None}",
  "s": "{\"field_filters\":{},\"attribute_filters\":{},\"item_group\":null,\"start\":null,\"from_filters\":false}%' AND 2*3*8=6*8 AND 'pTcv'!='pTcv%",
  "self": "<json.decoder.JSONDecoder object>"
 },
 "pyver": "Python 3.10.12: /home/gauritrans/frappe-bench/env/bin/python (prefix: /home/gauritrans/frappe-bench/env)",
 "timestamp": "2024-03-29 10:48:56.629070",
 "traceback": "Traceback (most recent call last):\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/app.py\", line 63, in application\n    response = frappe.handler.handle()\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py\", line 45, in handle\n    data = execute_cmd(cmd)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py\", line 83, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py\", line 1607, in call\n    return fn(*args, **newargs)\n  File \"/home/gauritrans/frappe-bench/apps/erpnext/erpnext/e_commerce/api.py\", line 30, in get_product_filter_data\n    query_args = json.loads(query_args)\n  File \"/usr/lib/python3.10/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python3.10/json/decoder.py\", line 340, in decode\n    raise JSONDecodeError(\"Extra data\", s, end)\njson.decoder.JSONDecodeError: Extra data: line 1 column 96 (char 95)\n"
}