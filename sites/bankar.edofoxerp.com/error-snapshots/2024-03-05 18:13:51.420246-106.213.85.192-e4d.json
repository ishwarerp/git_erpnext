{
 "etype": "OperationalError",
 "evalue": "OperationalError(1054, \"Unknown column 'payments' in 'field list'\")",
 "exception": {
  "args": [
   40,
   49,
   48,
   53,
   52,
   44,
   32,
   34,
   85,
   110,
   107,
   110,
   111,
   119,
   110,
   32,
   99,
   111,
   108,
   117,
   109,
   110,
   32,
   39,
   112,
   97,
   121,
   109,
   101,
   110,
   116,
   115,
   39,
   32,
   105,
   110,
   32,
   39,
   102,
   105,
   101,
   108,
   100,
   32,
   108,
   105,
   115,
   116,
   39,
   34,
   41
  ],
  "errno": [
   52,
   48,
   56,
   52
  ],
  "with_traceback": [
   60,
   98,
   117,
   105,
   108,
   116,
   45,
   105,
   110,
   32,
   109,
   101,
   116,
   104,
   111,
   100,
   32,
   119,
   105,
   116,
   104,
   95,
   116,
   114,
   97,
   99,
   101,
   98,
   97,
   99,
   107,
   32,
   111,
   102,
   32,
   79,
   112,
   101,
   114,
   97,
   116,
   105,
   111,
   110,
   97,
   108,
   69,
   114,
   114,
   111,
   114,
   32,
   111,
   98,
   106,
   101,
   99,
   116,
   62
  ]
 },
 "frames": [
  {
   "call": "(request=<Request 'https://bankar.edofoxerp.com/api/method/frappe.desk.form.save.savedocs' [POST]>)",
   "dump": {
    "frappe. api": "<module 'frappe.api' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/api.py'>",
    "frappe.api. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "response": "None"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/app.py",
   "func": "application",
   "lines": {
    "64": "",
    "65": "\t\telif request.path.startswith(\"/api/\"):",
    "66": "\t\t\tresponse = frappe.api.handle()",
    "67": "",
    "68": "\t\telif request.path.startswith(\"/backups\"):"
   },
   "lnum": 66
  },
  {
   "call": "()",
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py'>",
    "frappe.handler. handle": "<function handle>",
    "global frappe": "<module 'frappe' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py'>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/api.py",
   "func": "handle",
   "lines": {
    "52": "\tif call == \"method\":",
    "53": "\t\tfrappe.local.form_dict.cmd = doctype",
    "54": "\t\treturn frappe.handler.handle()",
    "55": "",
    "56": "\telif call == \"resource\":"
   },
   "lnum": 54
  },
  {
   "call": "()",
   "dump": {
    "cmd": "'frappe.desk.form.save.savedocs'",
    "data": "None",
    "global execute_cmd": "<function execute_cmd>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "handle",
   "lines": {
    "43": "",
    "44": "\tif cmd != \"login\":",
    "45": "\t\tdata = execute_cmd(cmd)",
    "46": "",
    "47": "\t# data can be an empty string or list which are valid responses"
   },
   "lnum": 45
  },
  {
   "call": "(cmd='frappe.desk.form.save.savedocs', from_async=False)",
   "dump": {
    "frappe. call": "<function call>",
    "frappe. form_dict": "{'doc': '{\"docstatus\":0,\"doctype\":\"Site Progress... 'Save', 'cmd': 'frappe.desk.form.save.savedocs'}",
    "global frappe": "<module 'frappe' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "method": "<function savedocs>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py",
   "func": "execute_cmd",
   "lines": {
    "81": "\t\tis_valid_http_method(method)",
    "82": "",
    "83": "\treturn frappe.call(method, **frappe.form_dict)",
    "84": "",
    "85": ""
   },
   "lnum": 83
  },
  {
   "call": "(fn=<function savedocs>, *args=(), **kwargs={'action': 'Save', 'cmd': 'frappe.desk.form.save.savedocs', 'doc': '{\"docstatus\":0,\"doctype\":\"Site Progress\",\"name\":...\",\"building\":\"BLD-0003\",\"work_type\":\"Door Works\"}'})",
   "dump": {
    "args": "()",
    "fn": "<function savedocs>",
    "newargs": "{'action': 'Save', 'doc': '{\"docstatus\":0,\"doctype\":\"Site Progress\",\"name\":...\",\"building\":\"BLD-0003\",\"work_type\":\"Door Works\"}'}"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py",
   "func": "call",
   "lines": {
    "1605": "\tnewargs = get_newargs(fn, kwargs)",
    "1606": "",
    "1607": "\treturn fn(*args, **newargs)",
    "1608": "",
    "1609": ""
   },
   "lnum": 1607
  },
  {
   "call": "(doc=<Document: SP-2024-00007>, action='Save')",
   "dump": {
    "doc": "<Document: SP-2024-00007>",
    "doc. save": "<bound method Document.save of <Document: SP-2024-00007>>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/desk/form/save.py",
   "func": "savedocs",
   "lines": {
    "24": "\t}[action]",
    "25": "",
    "26": "\tdoc.save()",
    "27": "",
    "28": "\t# update recent documents"
   },
   "lnum": 26
  },
  {
   "call": "(self=<Document: SP-2024-00007>, *args=(), **kwargs={})",
   "dump": {
    "args": "()",
    "kwargs": "{}",
    "self": "<Document: SP-2024-00007>",
    "self. _save": "<bound method Document._save of <Document: SP-2024-00007>>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/model/document.py",
   "func": "save",
   "lines": {
    "303": "\tdef save(self, *args, **kwargs):",
    "304": "\t\t\"\"\"Wrapper for _save\"\"\"",
    "305": "\t\treturn self._save(*args, **kwargs)",
    "306": "",
    "307": "\tdef _save(self, ignore_permissions=None, ignore_version=None) -> \"Document\":"
   },
   "lnum": 305
  },
  {
   "call": "(self=<Document: SP-2024-00007>, ignore_permissions=None, ignore_version=None)",
   "dump": {
    "self": "<Document: SP-2024-00007>",
    "self. insert": "<bound method Document.insert of <Document: SP-2024-00007>>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/model/document.py",
   "func": "_save",
   "lines": {
    "325": "",
    "326": "\t\tif self.get(\"__islocal\") or not self.get(\"name\"):",
    "327": "\t\t\treturn self.insert()",
    "328": "",
    "329": "\t\tself.check_permission(\"write\", \"save\")"
   },
   "lnum": 327
  },
  {
   "call": "(self=<Document: SP-2024-00007>, ignore_permissions=None, ignore_links=None, ignore_if_duplicate=False, ignore_mandatory=None, set_name=None, set_child_names=True)",
   "dump": {
    "self": "<Document: SP-2024-00007>",
    "self. run_method": "<bound method Document.run_method of <Document: SP-2024-00007>>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/model/document.py",
   "func": "insert",
   "lines": {
    "274": "\t\t\td.db_insert()",
    "275": "",
    "276": "\t\tself.run_method(\"after_insert\")",
    "277": "\t\tself.flags.in_insert = True",
    "278": ""
   },
   "lnum": 276
  },
  {
   "call": "(self=<Document: SP-2024-00007>, method='after_insert', *args=(), **kwargs={})",
   "dump": {
    "global run_server_script_for_doc_event": "<function run_server_script_for_doc_event>",
    "method": "'after_insert'",
    "self": "<Document: SP-2024-00007>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/model/document.py",
   "func": "run_method",
   "lines": {
    "918": "\t\tself.run_notifications(method)",
    "919": "\t\trun_webhooks(self, method)",
    "920": "\t\trun_server_script_for_doc_event(self, method)",
    "921": "",
    "922": "\t\treturn out"
   },
   "lnum": 920
  },
  {
   "call": "(doc=<Document: SP-2024-00007>, event='after_insert')",
   "dump": {
    ").execute_doc": "undefined",
    "doc": "<Document: SP-2024-00007>",
    "frappe. get_doc": "<function get_doc>",
    "global frappe": "<module 'frappe' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "script_name": "'AfterSiteProgressMakePaymentEntry'"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/core/doctype/server_script/server_script_utils.py",
   "func": "run_server_script_for_doc_event",
   "lines": {
    "37": "\t\t# run all scripts for this doctype + event",
    "38": "\t\tfor script_name in scripts:",
    "39": "\t\t\tfrappe.get_doc(\"Server Script\", script_name).execute_doc(doc)",
    "40": "",
    "41": ""
   },
   "lnum": 39
  },
  {
   "call": "(self=<ServerScript: AfterSiteProgressMakePaymentEntry>, doc=<Document: SP-2024-00007>)",
   "dump": {
    "_locals": "undefined",
    "doc": "<Document: SP-2024-00007>",
    "global safe_exec": "<function safe_exec>",
    "restrict_commit_rollback": "undefined",
    "self": "<ServerScript: AfterSiteProgressMakePaymentEntry>",
    "self. script": "'# Fetch properties based on a specific building\\n...ment\\n            parent_doc.save()\\n            \\n\\n'"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/core/doctype/server_script/server_script.py",
   "func": "execute_doc",
   "lines": {
    "96": "\t\t        doc (Document): Executes script with for a certain document's events",
    "97": "\t\t\"\"\"",
    "98": "\t\tsafe_exec(self.script, _locals={\"doc\": doc}, restrict_commit_rollback=True)",
    "99": "",
    "100": "\tdef execute_scheduled_method(self):"
   },
   "lnum": 98
  },
  {
   "call": "(script='# Fetch properties based on a specific building\\n...ment\\n            parent_doc.save()\\n            \\n\\n', _globals=None, _locals={'customer_properties': [{'name': 'CU-PR-02.2024-1676', 'creation': datet...token_amount': 100000.0, 'payment_terms': 'Days'}], 'doc': <Document: SP-2024-00007>, 'n': {'name': 'CU-PR-02.2024-1676', 'creation': datet...token_amount': 100000.0, 'payment_terms': 'Days'}, 'p': {'name': 'ARH-BLD-0003-F-99'}, 'properties': [{'name': 'ARH-BLD-0003-F-99'}]}, restrict_commit_rollback=True)",
   "dump": {
    "_locals": "{'customer_properties': [{'name': 'CU-PR-02.2024-1676', 'creation': datet...token_amount': 100000.0, 'payment_terms': 'Days'}], 'doc': <Document: SP-2024-00007>, 'n': {'name': 'CU-PR-02.2024-1676', 'creation': datet...token_amount': 100000.0, 'payment_terms': 'Days'}, 'p': {'name': 'ARH-BLD-0003-F-99'}, 'properties': [{'name': 'ARH-BLD-0003-F-99'}]}",
    "builtin exec": "<built-in function exec>",
    "exec_globals": "{'json': {'loads': <function loads at 0x7fc81bc1...built-in function sum>, 'tuple': <class 'tuple'>}",
    "global compile_restricted": "<function compile_restricted>",
    "script": "'# Fetch properties based on a specific building\\n...ment\\n            parent_doc.save()\\n            \\n\\n'"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/utils/safe_exec.py",
   "func": "safe_exec",
   "lines": {
    "70": "\twith safe_exec_flags(), patched_qb():",
    "71": "\t\t# execute script compiled by RestrictedPython",
    "72": "\t\texec(compile_restricted(script), exec_globals, _locals)  # pylint: disable=exec-used",
    "73": "",
    "74": "\treturn exec_globals, _locals"
   },
   "lnum": 72
  },
  {
   "call": "()",
   "dump": {},
   "file": "/home/gauritrans/frappe-bench/sites/<unknown>",
   "func": "<module>",
   "lines": {},
   "lnum": 18
  },
  {
   "call": "(doctype='Customer Payments', *args=(), **kwargs={'fields': ['name', 'payments'], 'filters': {'customer_property': 'CU-PR-02.2024-1676'}})",
   "dump": {
    ").execute": "undefined",
    "args": "()",
    "doctype": "'Customer Payments'",
    "frappe": "<module 'frappe' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "frappe. model": "<module 'frappe.model' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/model/__init__.py'>",
    "frappe.model. db_query": "<module 'frappe.model.db_query' from '/home/gaur...appe-bench/apps/frappe/frappe/model/db_query.py'>",
    "frappe.model.db_query. DatabaseQuery": "<class 'frappe.model.db_query.DatabaseQuery'>",
    "kwargs": "{'fields': ['name', 'payments'], 'filters': {'customer_property': 'CU-PR-02.2024-1676'}}"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py",
   "func": "get_list",
   "lines": {
    "1894": "\timport frappe.model.db_query",
    "1895": "",
    "1896": "\treturn frappe.model.db_query.DatabaseQuery(doctype).execute(*args, **kwargs)",
    "1897": "",
    "1898": ""
   },
   "lnum": 1896
  },
  {
   "call": "(self=<frappe.model.db_query.DatabaseQuery object>, fields=['name', 'payments'], filters={'customer_property': 'CU-PR-02.2024-1676'}, or_filters=None, docstatus=None, group_by=None, order_by='KEEP_DEFAULT_ORDERING', limit_start=False, limit_page_length=None, as_list=False, with_childnames=False, debug=False, ignore_permissions=False, user=None, with_comment_count=False, join='left join', distinct=False, start=None, page_length=None, limit=None, ignore_ifnull=False, save_user_settings=False, save_user_settings_fields=False, update=None, add_total_row=None, user_settings=None, reference_doctype=None, run=True, strict=True, pluck=None, ignore_ddl=False, parent_doctype=None)",
   "dump": {
    "result": "undefined",
    "self": "<frappe.model.db_query.DatabaseQuery object>",
    "self. build_and_run": "<bound method DatabaseQuery.build_and_run of <frappe.model.db_query.DatabaseQuery object>>"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/model/db_query.py",
   "func": "execute",
   "lines": {
    "200": "\t\t\treturn []",
    "201": "",
    "202": "\t\tresult = self.build_and_run()",
    "203": "",
    "204": "\t\tif sbool(with_comment_count) and not as_list and self.doctype:"
   },
   "lnum": 202
  },
  {
   "call": "(self=<frappe.model.db_query.DatabaseQuery object>)",
   "dump": {
    "as_dict": "undefined",
    "debug": "undefined",
    "frappe. db": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "frappe.db. sql": "<bound method Database.sql of <frappe.database.mariadb.database.MariaDBDatabase object>>",
    "global frappe": "<module 'frappe' from '/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py'>",
    "ignore_ddl": "undefined",
    "query": "'select `name`, `payments`\\n\\t\\t\\tfrom `tabCustomer P...der by `tabCustomer Payments`.`modified` DESC\\n\\t\\t\\t'",
    "run": "undefined",
    "self": "<frappe.model.db_query.DatabaseQuery object>",
    "self. as_list": "False",
    "self. debug": "False",
    "self. ignore_ddl": "False",
    "self. run": "True",
    "self. update": "None",
    "update": "undefined"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/model/db_query.py",
   "func": "build_and_run",
   "lines": {
    "240": "\t\t)",
    "241": "",
    "242": "\t\treturn frappe.db.sql(",
    "243": "\t\t\tquery,",
    "244": "\t\t\tas_dict=not self.as_list,"
   },
   "lnum": 242
  },
  {
   "call": "(self=<frappe.database.mariadb.database.MariaDBDatabase object>, query='select `name`, `payments`\\n\\t\\t\\tfrom `tabCustomer P...\\t order by `tabCustomer Payments`.`modified` DESC', values=None, as_dict=True, as_list=0, formatted=0, debug=False, ignore_ddl=False, as_utf8=0, auto_commit=0, update=None, explain=False, run=True, pluck=False)",
   "dump": {
    "query": "'select `name`, `payments`\\n\\t\\t\\tfrom `tabCustomer P...\\t order by `tabCustomer Payments`.`modified` DESC'",
    "self": "<frappe.database.mariadb.database.MariaDBDatabase object>",
    "self. _cursor": "<pymysql.cursors.Cursor object>",
    "self._cursor. execute": "<bound method Cursor.execute of <pymysql.cursors.Cursor object>>",
    "values": "None"
   },
   "file": "/home/gauritrans/frappe-bench/apps/frappe/frappe/database/database.py",
   "func": "sql",
   "lines": {
    "217": "",
    "218": "\t\ttry:",
    "219": "\t\t\tself._cursor.execute(query, values)",
    "220": "\t\texcept Exception as e:",
    "221": "\t\t\tif self.is_syntax_error(e):"
   },
   "lnum": 219
  },
  {
   "call": "(self=<pymysql.cursors.Cursor object>, query='select `name`, `payments`\\n\\t\\t\\tfrom `tabCustomer P...\\t order by `tabCustomer Payments`.`modified` DESC', args=None)",
   "dump": {
    "query": "'select `name`, `payments`\\n\\t\\t\\tfrom `tabCustomer P...\\t order by `tabCustomer Payments`.`modified` DESC'",
    "result": "undefined",
    "self": "<pymysql.cursors.Cursor object>",
    "self. _query": "<bound method Cursor._query of <pymysql.cursors.Cursor object>>"
   },
   "file": "/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/cursors.py",
   "func": "execute",
   "lines": {
    "156": "        query = self.mogrify(query, args)",
    "157": "",
    "158": "        result = self._query(query)",
    "159": "        self._executed = query",
    "160": "        return result"
   },
   "lnum": 158
  },
  {
   "call": "(self=<pymysql.cursors.Cursor object>, q='select `name`, `payments`\\n\\t\\t\\tfrom `tabCustomer P...\\t order by `tabCustomer Payments`.`modified` DESC')",
   "dump": {
    "conn": "<pymysql.connections.Connection object>",
    "conn. query": "<bound method Connection.query of <pymysql.connections.Connection object>>",
    "q": "'select `name`, `payments`\\n\\t\\t\\tfrom `tabCustomer P...\\t order by `tabCustomer Payments`.`modified` DESC'"
   },
   "file": "/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/cursors.py",
   "func": "_query",
   "lines": {
    "323": "        conn = self._get_db()",
    "324": "        self._clear_result()",
    "325": "        conn.query(q)",
    "326": "        self._do_get_result()",
    "327": "        return self.rowcount"
   },
   "lnum": 325
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, sql=b\"select `name`, `payments`\\n\\t\\t\\tfrom `tabCust... order by `tabCustomer Payments`.`modified` DESC\", unbuffered=False)",
   "dump": {
    "self": "<pymysql.connections.Connection object>",
    "self. _affected_rows": "0",
    "self. _read_query_result": "<bound method Connection._read_query_result of <pymysql.connections.Connection object>>",
    "unbuffered": "False"
   },
   "file": "/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py",
   "func": "query",
   "lines": {
    "547": "            sql = sql.encode(self.encoding, \"surrogateescape\")",
    "548": "        self._execute_command(COMMAND.COM_QUERY, sql)",
    "549": "        self._affected_rows = self._read_query_result(unbuffered=unbuffered)",
    "550": "        return self._affected_rows",
    "551": ""
   },
   "lnum": 549
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, unbuffered=False)",
   "dump": {
    "result": "<pymysql.connections.MySQLResult object>",
    "result. read": "<bound method MySQLResult.read of <pymysql.connections.MySQLResult object>>"
   },
   "file": "/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py",
   "func": "_read_query_result",
   "lines": {
    "777": "        else:",
    "778": "            result = MySQLResult(self)",
    "779": "            result.read()",
    "780": "        self._result = result",
    "781": "        if result.server_status is not None:"
   },
   "lnum": 779
  },
  {
   "call": "(self=<pymysql.connections.MySQLResult object>)",
   "dump": {
    "first_packet": "undefined",
    "self": "<pymysql.connections.MySQLResult object>",
    "self. connection": "None",
    "self.connection._read_packet": "undefined"
   },
   "file": "/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py",
   "func": "read",
   "lines": {
    "1155": "    def read(self):",
    "1156": "        try:",
    "1157": "            first_packet = self.connection._read_packet()",
    "1158": "",
    "1159": "            if first_packet.is_ok_packet():"
   },
   "lnum": 1157
  },
  {
   "call": "(self=<pymysql.connections.Connection object>, packet_type=<class 'pymysql.protocol.MysqlPacket'>)",
   "dump": {
    "packet": "<pymysql.protocol.MysqlPacket object>",
    "packet. raise_for_error": "<bound method MysqlPacket.raise_for_error of <pymysql.protocol.MysqlPacket object>>"
   },
   "file": "/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py",
   "func": "_read_packet",
   "lines": {
    "727": "            if self._result is not None and self._result.unbuffered_active is True:",
    "728": "                self._result.unbuffered_active = False",
    "729": "            packet.raise_for_error()",
    "730": "        return packet",
    "731": ""
   },
   "lnum": 729
  },
  {
   "call": "(self=<pymysql.protocol.MysqlPacket object>)",
   "dump": {
    "err. raise_mysql_exception": "<function raise_mysql_exception>",
    "global err": "<module 'pymysql.err' from '/home/gauritrans/fra...env/lib/python3.10/site-packages/pymysql/err.py'>",
    "self": "<pymysql.protocol.MysqlPacket object>",
    "self. _data": "b\"\\xff\\x1e\\x04#42S22Unknown column 'payments' in 'field list'\""
   },
   "file": "/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/protocol.py",
   "func": "raise_for_error",
   "lines": {
    "219": "        if DEBUG:",
    "220": "            print(\"errno =\", errno)",
    "221": "        err.raise_mysql_exception(self._data)",
    "222": "",
    "223": "    def dump(self):"
   },
   "lnum": 221
  },
  {
   "call": "(data=b\"\\xff\\x1e\\x04#42S22Unknown column 'payments' in 'field list'\")",
   "dump": {
    "errno": "1054",
    "errorclass": "<class 'pymysql.err.OperationalError'>",
    "errval": "\"Unknown column 'payments' in 'field list'\""
   },
   "file": "/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/err.py",
   "func": "raise_mysql_exception",
   "lines": {
    "139": "    errval = data[9:].decode(\"utf-8\", \"replace\")",
    "140": "    errorclass = error_map.get(errno)",
    "141": "    if errorclass is None:",
    "142": "        errorclass = InternalError if errno < 1000 else OperationalError",
    "143": "    raise errorclass(errno, errval)"
   },
   "lnum": 143
  }
 ],
 "locals": {
  "data": "b\"\\xff\\x1e\\x04#42S22Unknown column 'payments' in 'field list'\"",
  "errno": "1054",
  "errorclass": "<class 'pymysql.err.OperationalError'>",
  "errval": "Unknown column 'payments' in 'field list'"
 },
 "pyver": "Python 3.10.12: /home/gauritrans/frappe-bench/env/bin/python (prefix: /home/gauritrans/frappe-bench/env)",
 "timestamp": "2024-03-05 18:13:51.420355",
 "traceback": "Traceback (most recent call last):\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/app.py\", line 66, in application\n    response = frappe.api.handle()\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/api.py\", line 54, in handle\n    return frappe.handler.handle()\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py\", line 45, in handle\n    data = execute_cmd(cmd)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/handler.py\", line 83, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py\", line 1607, in call\n    return fn(*args, **newargs)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/desk/form/save.py\", line 26, in savedocs\n    doc.save()\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/model/document.py\", line 305, in save\n    return self._save(*args, **kwargs)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/model/document.py\", line 327, in _save\n    return self.insert()\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/model/document.py\", line 276, in insert\n    self.run_method(\"after_insert\")\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/model/document.py\", line 920, in run_method\n    run_server_script_for_doc_event(self, method)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/core/doctype/server_script/server_script_utils.py\", line 39, in run_server_script_for_doc_event\n    frappe.get_doc(\"Server Script\", script_name).execute_doc(doc)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/core/doctype/server_script/server_script.py\", line 98, in execute_doc\n    safe_exec(self.script, _locals={\"doc\": doc}, restrict_commit_rollback=True)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/utils/safe_exec.py\", line 72, in safe_exec\n    exec(compile_restricted(script), exec_globals, _locals)  # pylint: disable=exec-used\n  File \"<unknown>\", line 18, in <module>\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/__init__.py\", line 1896, in get_list\n    return frappe.model.db_query.DatabaseQuery(doctype).execute(*args, **kwargs)\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/model/db_query.py\", line 202, in execute\n    result = self.build_and_run()\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/model/db_query.py\", line 242, in build_and_run\n    return frappe.db.sql(\n  File \"/home/gauritrans/frappe-bench/apps/frappe/frappe/database/database.py\", line 219, in sql\n    self._cursor.execute(query, values)\n  File \"/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/cursors.py\", line 158, in execute\n    result = self._query(query)\n  File \"/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/cursors.py\", line 325, in _query\n    conn.query(q)\n  File \"/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 549, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 779, in _read_query_result\n    result.read()\n  File \"/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 1157, in read\n    first_packet = self.connection._read_packet()\n  File \"/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/connections.py\", line 729, in _read_packet\n    packet.raise_for_error()\n  File \"/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/protocol.py\", line 221, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"/home/gauritrans/frappe-bench/env/lib/python3.10/site-packages/pymysql/err.py\", line 143, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.OperationalError: (1054, \"Unknown column 'payments' in 'field list'\")\n"
}